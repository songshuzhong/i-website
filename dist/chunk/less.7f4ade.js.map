{"version":3,"sources":["webpack:///./node_modules/less/dist/less.js"],"names":["global","factory","module","exports","this","defaultOptions","javascriptEnabled","depends","compress","lint","paths","color","strictImports","insecure","rootpath","rewriteUrls","math","strictUnits","globalVars","modifyVars","urlArgs","extractId","href","replace","addDataAttr","options","tag","opt","dataset","hasOwnProperty","JSON","parse","_","browser","createCSS","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","currentScript","window","scripts","addDefaultOptions","undefined","isFileProtocol","test","location","protocol","async","fileAsync","poll","env","hostname","port","dumpLineNumbers","exec","hash","useFileCache","onReady","relativeUrls","logger$1","error","msg","_fireEvent","warn","info","debug","addListener","listener","_listeners","push","removeListener","i","splice","type","logFunction","Environment","externalEnvironment","fileManagers","optionalFunctions","requiredFunctions","functions","concat","propName","environmentFunc","bind","prototype","getFileManager","filename","currentDirectory","environment","isSync","pluginManager","getFileManagers","fileManager","addFileManager","clearFileManagers","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","nodeVisible","rootNode","parsed","Object","defineProperty","get","fileInfo","enumerable","configurable","getIndex","setParent","nodes","set","node","Array","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","isEmpty","join","output","value","accept","visitor","visit","eval","_operate","op","a","b","fround","precision","numPrecision","Number","toFixed","compare","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","Color","rgb","originalForm","self","match","map","c","parseInt","alpha","split","clamp$1","v","max","min","toHex","round","toString","assign","luma","r","g","pow","doNotCompress","colorFunction","args","indexOf","toHSL","h","s","l","toRGB","splitcolor","operate","other","d","toHSV","toARGB","x","fromKeyword","keyword","key","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","RewriteUrls","OFF","LOCAL","ALL","getType","payload","call","isPlainObject","constructor","getPrototypeOf","__spreadArrays","il","arguments","k","j","jl","assignProp","carry","newVal","originalObject","includeNonenumerable","propType","propertyIsEnumerable","writable","copy","target","props","getOwnPropertyNames","symbols","getOwnPropertySymbols","reduce","includes","val","nonenumerable","getLocation","inputStream","n","line","column","copyArray","arr","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","merge","flattenArray","result","length_1","utils","freeze","__proto__","anonymousFunc","LessError","fileContentMap","currentFilename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","create","F","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","el","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","element","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH$1","evalName","name","Declaration","important","inline","variable","lastRule","prevMath","evaldValue","mathBypass","importantScope","importantResult","pop","makeImportant","debugInfo","ctx","lineSeparator","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","evalCopyProperties","isPathRelative","path","isPathLocalRelative","makeRegistry","base","_data","addMultiple","_this","keys","getLocalFunctions","inherit","Eval","frames","enterCalc","calcStack","inCalc","exitCalc","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","isRelative","rewritePath","newPath","normalizePath","segment","segments","reverse","functionRegistry","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","_lookups","_variables","_properties","isRuleset","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","apply","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","vars","name_1","properties","name_2","decl","parseValue","property","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","prependRule","find","foundMixins","debugInfo$1","charsetRuleNodes","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","hadParentSelector","findNestedSelector","maybeSelector","nestedSelector","nestedPaths","replaced","replacedNewSelectors","replacementSelector","deriveSelector","deriveFrom","newPaths","concatenated","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","String","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH","Operation","operands","isSpaced","__spreadArray","to","from","pack","ar","Expression","noSpacing","returnValue","parens","doubleParen","parensInOp","throwAwayComments","functionCaller","isValid","evalArgs","commentFilter","item","subNodes","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","escapePath","containsVariables","that","variableReplacement","propertyReplacement","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","isEvald","delimiter","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JsEvalNode","evaluateJavaScript","expression","evalContext","jsify","toJS","JavaScript","string","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","params","variadic","arity","optionalParameters","required","p","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","m","f","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","defFalseEitherCase","defNone","defTrue","defFalse","calcDefGroup","namespace","expand","format","newRules","_setVisibilityToReplacement","replacement","tree","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","loader","pluginObj","localModule","shortname","FileManager","trySetOptions","use","registerPlugin","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","hasFakeRuleset","getBodyRules","nodeRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","chunker","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","chunks","emitFrom","emitChunk","force","charCodeAt","fromCharCode","getParserInput","furthest","furthestPossibleErrorMessage","current","currentPos","saveStack","parserInput","CHARCODE_SPACE","CHARCODE_TAB","CHARCODE_LF","CHARCODE_CR","CHARCODE_PLUS","CHARCODE_COMMA","CHARCODE_FORWARD_SLASH","CHARCODE_9","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","endInfo","additionalData","ignored","preText","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","jsQuote","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","or","conditionAnd","insideCondition","negatedCondition","parenthesisCondition","atomicCondition","and","tryConditionFollowedByParenthesis","me","body","delim","simpleProperty","If","trueValue","falseValue","isdefined","colorFunctions","boolean$1","clamp","hsla","origColor","hsl","number$1","scaled","size","rgba","m1_1","m2_1","hue","hsv","hsva","floor","vs","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","tint","shade","colorBlend","mode","cb","cs","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","f$1","dataUri","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","encodeURIComponent","uri","getItemsFromNode","items","list","_SELF","expr","_i","values","range","step","stepValue","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","svg","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","pm","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","SourceMapOutput","_css","_rootNode","_contentsMap","contentsMap","_contentsIgnoredCharsMap","contentsIgnoredCharsMap","sourceMapFilename","_sourceMapFilename","_outputFilename","outputFilename","sourceMapURL","sourceMapBasepath","_sourceMapBasepath","sourceMapRootpath","_sourceMapRootpath","_outputSourceFiles","outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","removeBasepath","normalizeFilename","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","sourceMap","SourceMapBuilder","sourceMapOutput","sourceMapOutputFilename","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","getCSSAppendage","getExternalSourceMap","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","ParseTree","sourceMapBuilder","toCSSOptions","files","rootFilename","ImportManager","rootFileInfo","mime","queue","importManager","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","self_1","Promise","resolve","reject","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","Render","render","parseTree","parseNodeVersion","res","major","minor","patch","pre","build","options$1","logger","parseNodeVersion_1","lessRoot","initial","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","hrefParts","lessText","webInfo","lastModified","Date","FM","log","fulfill","catch","LogListener","logLevel_debug","logLevel_info","logLevel_warn","logLevel_error","logLevel","loggers","console","ErrorReporting","errorHTML","rootHref","timer","template","errors","filenameNoPath","className","errorline","classname","innerHTML","style","setInterval","replaceChild","clearInterval","removeErrorHTML","removeError","errorReporting","errorConsole","remove","Cache","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","ImageSize","imageSize","imageFunctions","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","loadInitialFileCallback","local","loadStyleSheets","sheets","initRunningMode","watchTimer","watchMode","watch","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","LESS_PLUGINS","resolveOrReject","pageLoadFinished"],"mappings":"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","file":"chunk/less.7f4ade.js","sourcesContent":["/**\n * Less - Leaner CSS v4.1.2\n * http://lesscss.org\n * \n * Copyright (c) 2009-2021, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n    // Export a new default each time\r\n    function defaultOptions () {\r\n        return {\r\n            /* Inline Javascript - @plugin still allowed */\r\n            javascriptEnabled: false,\r\n            /* Outputs a makefile import dependency list to stdout. */\r\n            depends: false,\r\n            /* (DEPRECATED) Compress using less built-in compression.\r\n             * This does an okay job but does not utilise all the tricks of\r\n             * dedicated css compression. */\r\n            compress: false,\r\n            /* Runs the less parser and just reports errors without any output. */\r\n            lint: false,\r\n            /* Sets available include paths.\r\n             * If the file in an @import rule does not exist at that exact location,\r\n             * less will look for it at the location(s) passed to this option.\r\n             * You might use this for instance to specify a path to a library which\r\n             * you want to be referenced simply and relatively in the less files. */\r\n            paths: [],\r\n            /* color output in the terminal */\r\n            color: true,\r\n            /* The strictImports controls whether the compiler will allow an @import inside of either\r\n             * @media blocks or (a later addition) other selector blocks.\r\n             * See: https://github.com/less/less.js/issues/656 */\r\n            strictImports: false,\r\n            /* Allow Imports from Insecure HTTPS Hosts */\r\n            insecure: false,\r\n            /* Allows you to add a path to every generated import and url in your css.\r\n             * This does not affect less import statements that are processed, just ones\r\n             * that are left in the output css. */\r\n            rootpath: '',\r\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n             * that references an image, exactly the same URL will be output in the css.\r\n             * This option allows you to re-write URL's in imported files so that the\r\n             * URL is always relative to the base imported file */\r\n            rewriteUrls: false,\r\n            /* How to process math\r\n             *   0 always           - eagerly try to solve all operations\r\n             *   1 parens-division  - require parens for division \"/\"\r\n             *   2 parens | strict  - require parens for all operations\r\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n             */\r\n            math: 1,\r\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n            strictUnits: false,\r\n            /* Effectively the declaration is put at the top of your base Less file,\r\n             * meaning it can be used but it also can be overridden if this variable\r\n             * is defined in the file. */\r\n            globalVars: null,\r\n            /* As opposed to the global variable option, this puts the declaration at the\r\n             * end of your base file, meaning it will override anything defined in your Less file. */\r\n            modifyVars: null,\r\n            /* This option allows you to specify a argument to go on to every URL.  */\r\n            urlArgs: ''\r\n        };\r\n    }\n\n    function extractId(href) {\r\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\r\n            .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n            .replace(/^\\//, '') // Remove root /\r\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n            .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\r\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n    }\r\n    function addDataAttr(options, tag) {\r\n        for (var opt in tag.dataset) {\r\n            if (tag.dataset.hasOwnProperty(opt)) {\r\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                    options[opt] = tag.dataset[opt];\r\n                }\r\n                else {\r\n                    try {\r\n                        options[opt] = JSON.parse(tag.dataset[opt]);\r\n                    }\r\n                    catch (_) { }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    var browser = {\r\n        createCSS: function (document, styles, sheet) {\r\n            // Strip the query-string\r\n            var href = sheet.href || '';\r\n            // If there is no title set, use the filename, minus the extension\r\n            var id = \"less:\" + (sheet.title || extractId(href));\r\n            // If this has already been inserted into the DOM, we may need to replace it\r\n            var oldStyleNode = document.getElementById(id);\r\n            var keepOldStyleNode = false;\r\n            // Create a new stylesheet node for insertion or (if necessary) replacement\r\n            var styleNode = document.createElement('style');\r\n            styleNode.setAttribute('type', 'text/css');\r\n            if (sheet.media) {\r\n                styleNode.setAttribute('media', sheet.media);\r\n            }\r\n            styleNode.id = id;\r\n            if (!styleNode.styleSheet) {\r\n                styleNode.appendChild(document.createTextNode(styles));\r\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n            }\r\n            var head = document.getElementsByTagName('head')[0];\r\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n            // to replace oldStyleNode with an updated stylesheet\r\n            if (oldStyleNode === null || keepOldStyleNode === false) {\r\n                var nextEl = sheet && sheet.nextSibling || null;\r\n                if (nextEl) {\r\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n                }\r\n                else {\r\n                    head.appendChild(styleNode);\r\n                }\r\n            }\r\n            if (oldStyleNode && keepOldStyleNode === false) {\r\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n            }\r\n            // For IE.\r\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n            if (styleNode.styleSheet) {\r\n                try {\r\n                    styleNode.styleSheet.cssText = styles;\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n                }\r\n            }\r\n        },\r\n        currentScript: function (window) {\r\n            var document = window.document;\r\n            return document.currentScript || (function () {\r\n                var scripts = document.getElementsByTagName('script');\r\n                return scripts[scripts.length - 1];\r\n            })();\r\n        }\r\n    };\n\n    var addDefaultOptions = (function (window, options) {\r\n        // use options from the current script tag data attribues\r\n        addDataAttr(options, browser.currentScript(window));\r\n        if (options.isFileProtocol === undefined) {\r\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n        }\r\n        // Load styles asynchronously (default: false)\r\n        //\r\n        // This is set to `false` by default, so that the body\r\n        // doesn't start loading before the stylesheets are parsed.\r\n        // Setting this to `true` can result in flickering.\r\n        //\r\n        options.async = options.async || false;\r\n        options.fileAsync = options.fileAsync || false;\r\n        // Interval between watch polls\r\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n            window.location.hostname == '0.0.0.0' ||\r\n            window.location.hostname == 'localhost' ||\r\n            (window.location.port &&\r\n                window.location.port.length > 0) ||\r\n            options.isFileProtocol ? 'development'\r\n            : 'production');\r\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n        if (dumpLineNumbers) {\r\n            options.dumpLineNumbers = dumpLineNumbers[1];\r\n        }\r\n        if (options.useFileCache === undefined) {\r\n            options.useFileCache = true;\r\n        }\r\n        if (options.onReady === undefined) {\r\n            options.onReady = true;\r\n        }\r\n        if (options.relativeUrls) {\r\n            options.rewriteUrls = 'all';\r\n        }\r\n    });\n\n    var logger$1 = {\r\n        error: function (msg) {\r\n            this._fireEvent('error', msg);\r\n        },\r\n        warn: function (msg) {\r\n            this._fireEvent('warn', msg);\r\n        },\r\n        info: function (msg) {\r\n            this._fireEvent('info', msg);\r\n        },\r\n        debug: function (msg) {\r\n            this._fireEvent('debug', msg);\r\n        },\r\n        addListener: function (listener) {\r\n            this._listeners.push(listener);\r\n        },\r\n        removeListener: function (listener) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                if (this._listeners[i] === listener) {\r\n                    this._listeners.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        _fireEvent: function (type, msg) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                var logFunction = this._listeners[i][type];\r\n                if (logFunction) {\r\n                    logFunction(msg);\r\n                }\r\n            }\r\n        },\r\n        _listeners: []\r\n    };\n\n    /**\r\n     * @todo Document why this abstraction exists, and the relationship between\r\n     *       environment, file managers, and plugin manager\r\n     */\r\n    var Environment = /** @class */ (function () {\r\n        function Environment(externalEnvironment, fileManagers) {\r\n            this.fileManagers = fileManagers || [];\r\n            externalEnvironment = externalEnvironment || {};\r\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n            var requiredFunctions = [];\r\n            var functions = requiredFunctions.concat(optionalFunctions);\r\n            for (var i = 0; i < functions.length; i++) {\r\n                var propName = functions[i];\r\n                var environmentFunc = externalEnvironment[propName];\r\n                if (environmentFunc) {\r\n                    this[propName] = environmentFunc.bind(externalEnvironment);\r\n                }\r\n                else if (i < requiredFunctions.length) {\r\n                    this.warn(\"missing required function in environment - \" + propName);\r\n                }\r\n            }\r\n        }\r\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n            if (!filename) {\r\n                logger$1.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n            }\r\n            if (currentDirectory == null) {\r\n                logger$1.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n            }\r\n            var fileManagers = this.fileManagers;\r\n            if (options.pluginManager) {\r\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n            }\r\n            for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n                var fileManager = fileManagers[i];\r\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                    return fileManager;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Environment.prototype.addFileManager = function (fileManager) {\r\n            this.fileManagers.push(fileManager);\r\n        };\r\n        Environment.prototype.clearFileManagers = function () {\r\n            this.fileManagers = [];\r\n        };\r\n        return Environment;\r\n    }());\n\n    var colors = {\r\n        'aliceblue': '#f0f8ff',\r\n        'antiquewhite': '#faebd7',\r\n        'aqua': '#00ffff',\r\n        'aquamarine': '#7fffd4',\r\n        'azure': '#f0ffff',\r\n        'beige': '#f5f5dc',\r\n        'bisque': '#ffe4c4',\r\n        'black': '#000000',\r\n        'blanchedalmond': '#ffebcd',\r\n        'blue': '#0000ff',\r\n        'blueviolet': '#8a2be2',\r\n        'brown': '#a52a2a',\r\n        'burlywood': '#deb887',\r\n        'cadetblue': '#5f9ea0',\r\n        'chartreuse': '#7fff00',\r\n        'chocolate': '#d2691e',\r\n        'coral': '#ff7f50',\r\n        'cornflowerblue': '#6495ed',\r\n        'cornsilk': '#fff8dc',\r\n        'crimson': '#dc143c',\r\n        'cyan': '#00ffff',\r\n        'darkblue': '#00008b',\r\n        'darkcyan': '#008b8b',\r\n        'darkgoldenrod': '#b8860b',\r\n        'darkgray': '#a9a9a9',\r\n        'darkgrey': '#a9a9a9',\r\n        'darkgreen': '#006400',\r\n        'darkkhaki': '#bdb76b',\r\n        'darkmagenta': '#8b008b',\r\n        'darkolivegreen': '#556b2f',\r\n        'darkorange': '#ff8c00',\r\n        'darkorchid': '#9932cc',\r\n        'darkred': '#8b0000',\r\n        'darksalmon': '#e9967a',\r\n        'darkseagreen': '#8fbc8f',\r\n        'darkslateblue': '#483d8b',\r\n        'darkslategray': '#2f4f4f',\r\n        'darkslategrey': '#2f4f4f',\r\n        'darkturquoise': '#00ced1',\r\n        'darkviolet': '#9400d3',\r\n        'deeppink': '#ff1493',\r\n        'deepskyblue': '#00bfff',\r\n        'dimgray': '#696969',\r\n        'dimgrey': '#696969',\r\n        'dodgerblue': '#1e90ff',\r\n        'firebrick': '#b22222',\r\n        'floralwhite': '#fffaf0',\r\n        'forestgreen': '#228b22',\r\n        'fuchsia': '#ff00ff',\r\n        'gainsboro': '#dcdcdc',\r\n        'ghostwhite': '#f8f8ff',\r\n        'gold': '#ffd700',\r\n        'goldenrod': '#daa520',\r\n        'gray': '#808080',\r\n        'grey': '#808080',\r\n        'green': '#008000',\r\n        'greenyellow': '#adff2f',\r\n        'honeydew': '#f0fff0',\r\n        'hotpink': '#ff69b4',\r\n        'indianred': '#cd5c5c',\r\n        'indigo': '#4b0082',\r\n        'ivory': '#fffff0',\r\n        'khaki': '#f0e68c',\r\n        'lavender': '#e6e6fa',\r\n        'lavenderblush': '#fff0f5',\r\n        'lawngreen': '#7cfc00',\r\n        'lemonchiffon': '#fffacd',\r\n        'lightblue': '#add8e6',\r\n        'lightcoral': '#f08080',\r\n        'lightcyan': '#e0ffff',\r\n        'lightgoldenrodyellow': '#fafad2',\r\n        'lightgray': '#d3d3d3',\r\n        'lightgrey': '#d3d3d3',\r\n        'lightgreen': '#90ee90',\r\n        'lightpink': '#ffb6c1',\r\n        'lightsalmon': '#ffa07a',\r\n        'lightseagreen': '#20b2aa',\r\n        'lightskyblue': '#87cefa',\r\n        'lightslategray': '#778899',\r\n        'lightslategrey': '#778899',\r\n        'lightsteelblue': '#b0c4de',\r\n        'lightyellow': '#ffffe0',\r\n        'lime': '#00ff00',\r\n        'limegreen': '#32cd32',\r\n        'linen': '#faf0e6',\r\n        'magenta': '#ff00ff',\r\n        'maroon': '#800000',\r\n        'mediumaquamarine': '#66cdaa',\r\n        'mediumblue': '#0000cd',\r\n        'mediumorchid': '#ba55d3',\r\n        'mediumpurple': '#9370d8',\r\n        'mediumseagreen': '#3cb371',\r\n        'mediumslateblue': '#7b68ee',\r\n        'mediumspringgreen': '#00fa9a',\r\n        'mediumturquoise': '#48d1cc',\r\n        'mediumvioletred': '#c71585',\r\n        'midnightblue': '#191970',\r\n        'mintcream': '#f5fffa',\r\n        'mistyrose': '#ffe4e1',\r\n        'moccasin': '#ffe4b5',\r\n        'navajowhite': '#ffdead',\r\n        'navy': '#000080',\r\n        'oldlace': '#fdf5e6',\r\n        'olive': '#808000',\r\n        'olivedrab': '#6b8e23',\r\n        'orange': '#ffa500',\r\n        'orangered': '#ff4500',\r\n        'orchid': '#da70d6',\r\n        'palegoldenrod': '#eee8aa',\r\n        'palegreen': '#98fb98',\r\n        'paleturquoise': '#afeeee',\r\n        'palevioletred': '#d87093',\r\n        'papayawhip': '#ffefd5',\r\n        'peachpuff': '#ffdab9',\r\n        'peru': '#cd853f',\r\n        'pink': '#ffc0cb',\r\n        'plum': '#dda0dd',\r\n        'powderblue': '#b0e0e6',\r\n        'purple': '#800080',\r\n        'rebeccapurple': '#663399',\r\n        'red': '#ff0000',\r\n        'rosybrown': '#bc8f8f',\r\n        'royalblue': '#4169e1',\r\n        'saddlebrown': '#8b4513',\r\n        'salmon': '#fa8072',\r\n        'sandybrown': '#f4a460',\r\n        'seagreen': '#2e8b57',\r\n        'seashell': '#fff5ee',\r\n        'sienna': '#a0522d',\r\n        'silver': '#c0c0c0',\r\n        'skyblue': '#87ceeb',\r\n        'slateblue': '#6a5acd',\r\n        'slategray': '#708090',\r\n        'slategrey': '#708090',\r\n        'snow': '#fffafa',\r\n        'springgreen': '#00ff7f',\r\n        'steelblue': '#4682b4',\r\n        'tan': '#d2b48c',\r\n        'teal': '#008080',\r\n        'thistle': '#d8bfd8',\r\n        'tomato': '#ff6347',\r\n        'turquoise': '#40e0d0',\r\n        'violet': '#ee82ee',\r\n        'wheat': '#f5deb3',\r\n        'white': '#ffffff',\r\n        'whitesmoke': '#f5f5f5',\r\n        'yellow': '#ffff00',\r\n        'yellowgreen': '#9acd32'\r\n    };\n\n    var unitConversions = {\r\n        length: {\r\n            'm': 1,\r\n            'cm': 0.01,\r\n            'mm': 0.001,\r\n            'in': 0.0254,\r\n            'px': 0.0254 / 96,\r\n            'pt': 0.0254 / 72,\r\n            'pc': 0.0254 / 72 * 12\r\n        },\r\n        duration: {\r\n            's': 1,\r\n            'ms': 0.001\r\n        },\r\n        angle: {\r\n            'rad': 1 / (2 * Math.PI),\r\n            'deg': 1 / 360,\r\n            'grad': 1 / 400,\r\n            'turn': 1\r\n        }\r\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\r\n     * The reason why Node is a class and other nodes simply do not extend\r\n     * from Node (since we're transpiling) is due to this issue:\r\n     *\r\n     * https://github.com/less/less.js/issues/3434\r\n     */\r\n    var Node = /** @class */ (function () {\r\n        function Node() {\r\n            this.parent = null;\r\n            this.visibilityBlocks = undefined;\r\n            this.nodeVisible = undefined;\r\n            this.rootNode = null;\r\n            this.parsed = null;\r\n        }\r\n        Object.defineProperty(Node.prototype, \"currentFileInfo\", {\r\n            get: function () {\r\n                return this.fileInfo();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Node.prototype, \"index\", {\r\n            get: function () {\r\n                return this.getIndex();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Node.prototype.setParent = function (nodes, parent) {\r\n            function set(node) {\r\n                if (node && node instanceof Node) {\r\n                    node.parent = parent;\r\n                }\r\n            }\r\n            if (Array.isArray(nodes)) {\r\n                nodes.forEach(set);\r\n            }\r\n            else {\r\n                set(nodes);\r\n            }\r\n        };\r\n        Node.prototype.getIndex = function () {\r\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n        };\r\n        Node.prototype.fileInfo = function () {\r\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n        };\r\n        Node.prototype.isRulesetLike = function () { return false; };\r\n        Node.prototype.toCSS = function (context) {\r\n            var strs = [];\r\n            this.genCSS(context, {\r\n                add: function (chunk, fileInfo, index) {\r\n                    strs.push(chunk);\r\n                },\r\n                isEmpty: function () {\r\n                    return strs.length === 0;\r\n                }\r\n            });\r\n            return strs.join('');\r\n        };\r\n        Node.prototype.genCSS = function (context, output) {\r\n            output.add(this.value);\r\n        };\r\n        Node.prototype.accept = function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        };\r\n        Node.prototype.eval = function () { return this; };\r\n        Node.prototype._operate = function (context, op, a, b) {\r\n            switch (op) {\r\n                case '+': return a + b;\r\n                case '-': return a - b;\r\n                case '*': return a * b;\r\n                case '/': return a / b;\r\n            }\r\n        };\r\n        Node.prototype.fround = function (context, value) {\r\n            var precision = context && context.numPrecision;\r\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n        };\r\n        Node.compare = function (a, b) {\r\n            /* returns:\r\n             -1: a < b\r\n             0: a = b\r\n             1: a > b\r\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n            if ((a.compare) &&\r\n                // for \"symmetric results\" force toCSS-based comparison\r\n                // of Quoted or Anonymous if either value is one of those\r\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n                return a.compare(b);\r\n            }\r\n            else if (b.compare) {\r\n                return -b.compare(a);\r\n            }\r\n            else if (a.type !== b.type) {\r\n                return undefined;\r\n            }\r\n            a = a.value;\r\n            b = b.value;\r\n            if (!Array.isArray(a)) {\r\n                return a === b ? 0 : undefined;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return undefined;\r\n            }\r\n            for (var i = 0; i < a.length; i++) {\r\n                if (Node.compare(a[i], b[i]) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        Node.numericCompare = function (a, b) {\r\n            return a < b ? -1\r\n                : a === b ? 0\r\n                    : a > b ? 1 : undefined;\r\n        };\r\n        // Returns true if this node represents root of ast imported by reference\r\n        Node.prototype.blocksVisibility = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            return this.visibilityBlocks !== 0;\r\n        };\r\n        Node.prototype.addVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks + 1;\r\n        };\r\n        Node.prototype.removeVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks - 1;\r\n        };\r\n        // Turns on node visibility - if called node will be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureVisibility = function () {\r\n            this.nodeVisible = true;\r\n        };\r\n        // Turns off node visibility - if called node will NOT be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureInvisibility = function () {\r\n            this.nodeVisible = false;\r\n        };\r\n        // return values:\r\n        // false - the node must not be visible\r\n        // true - the node must be visible\r\n        // undefined or null - the node has the same visibility as its parent\r\n        Node.prototype.isVisible = function () {\r\n            return this.nodeVisible;\r\n        };\r\n        Node.prototype.visibilityInfo = function () {\r\n            return {\r\n                visibilityBlocks: this.visibilityBlocks,\r\n                nodeVisible: this.nodeVisible\r\n            };\r\n        };\r\n        Node.prototype.copyVisibilityInfo = function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            this.visibilityBlocks = info.visibilityBlocks;\r\n            this.nodeVisible = info.nodeVisible;\r\n        };\r\n        return Node;\r\n    }());\n\n    //\r\n    // RGB Colors - #ff0014, #eee\r\n    //\r\n    var Color = function (rgb, a, originalForm) {\r\n        var self = this;\r\n        //\r\n        // The end goal here, is to parse the arguments\r\n        // into an integer triplet, such as `128, 255, 0`\r\n        //\r\n        // This facilitates operations and conversions.\r\n        //\r\n        if (Array.isArray(rgb)) {\r\n            this.rgb = rgb;\r\n        }\r\n        else if (rgb.length >= 6) {\r\n            this.rgb = [];\r\n            rgb.match(/.{2}/g).map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.rgb = [];\r\n            rgb.split('').map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c + c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c + c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n        if (typeof originalForm !== 'undefined') {\r\n            this.value = originalForm;\r\n        }\r\n    };\r\n    Color.prototype = Object.assign(new Node(), {\r\n        type: 'Color',\r\n        luma: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\r\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context, doNotCompress) {\r\n            var compress = context && context.compress && !doNotCompress;\r\n            var color;\r\n            var alpha;\r\n            var colorFunction;\r\n            var args = [];\r\n            // `value` is set if this color was originally\r\n            // converted from a named color string so we need\r\n            // to respect this and try to output named color too.\r\n            alpha = this.fround(context, this.alpha);\r\n            if (this.value) {\r\n                if (this.value.indexOf('rgb') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'rgba';\r\n                    }\r\n                }\r\n                else if (this.value.indexOf('hsl') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'hsla';\r\n                    }\r\n                    else {\r\n                        colorFunction = 'hsl';\r\n                    }\r\n                }\r\n                else {\r\n                    return this.value;\r\n                }\r\n            }\r\n            else {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'rgba';\r\n                }\r\n            }\r\n            switch (colorFunction) {\r\n                case 'rgba':\r\n                    args = this.rgb.map(function (c) {\r\n                        return clamp$1(Math.round(c), 255);\r\n                    }).concat(clamp$1(alpha, 1));\r\n                    break;\r\n                case 'hsla':\r\n                    args.push(clamp$1(alpha, 1));\r\n                case 'hsl':\r\n                    color = this.toHSL();\r\n                    args = [\r\n                        this.fround(context, color.h),\r\n                        this.fround(context, color.s * 100) + \"%\",\r\n                        this.fround(context, color.l * 100) + \"%\"\r\n                    ].concat(args);\r\n            }\r\n            if (colorFunction) {\r\n                // Values are capped between `0` and `255`, rounded and zero-padded.\r\n                return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n            }\r\n            color = this.toRGB();\r\n            if (compress) {\r\n                var splitcolor = color.split('');\r\n                // Convert color to short format\r\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                    color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        //\r\n        // Operations have to be done per-channel, if not,\r\n        // channels will spill onto each other. Once we have\r\n        // our result, in the form of an integer triplet,\r\n        // we create a new Color node to hold the result.\r\n        //\r\n        operate: function (context, op, other) {\r\n            var rgb = new Array(3);\r\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n            for (var c = 0; c < 3; c++) {\r\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n            }\r\n            return new Color(rgb, alpha);\r\n        },\r\n        toRGB: function () {\r\n            return toHex(this.rgb);\r\n        },\r\n        toHSL: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var l = (max + min) / 2;\r\n            var d = max - min;\r\n            if (max === min) {\r\n                h = s = 0;\r\n            }\r\n            else {\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, l: l, a: a };\r\n        },\r\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n        toHSV: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var v = max;\r\n            var d = max - min;\r\n            if (max === 0) {\r\n                s = 0;\r\n            }\r\n            else {\r\n                s = d / max;\r\n            }\r\n            if (max === min) {\r\n                h = 0;\r\n            }\r\n            else {\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, v: v, a: a };\r\n        },\r\n        toARGB: function () {\r\n            return toHex([this.alpha * 255].concat(this.rgb));\r\n        },\r\n        compare: function (x) {\r\n            return (x.rgb &&\r\n                x.rgb[0] === this.rgb[0] &&\r\n                x.rgb[1] === this.rgb[1] &&\r\n                x.rgb[2] === this.rgb[2] &&\r\n                x.alpha === this.alpha) ? 0 : undefined;\r\n        }\r\n    });\r\n    Color.fromKeyword = function (keyword) {\r\n        var c;\r\n        var key = keyword.toLowerCase();\r\n        if (colors.hasOwnProperty(key)) {\r\n            c = new Color(colors[key].slice(1));\r\n        }\r\n        else if (key === 'transparent') {\r\n            c = new Color([0, 0, 0], 0);\r\n        }\r\n        if (c) {\r\n            c.value = keyword;\r\n            return c;\r\n        }\r\n    };\r\n    function clamp$1(v, max) {\r\n        return Math.min(Math.max(v, 0), max);\r\n    }\r\n    function toHex(v) {\r\n        return \"#\" + v.map(function (c) {\r\n            c = clamp$1(Math.round(c), 255);\r\n            return (c < 16 ? '0' : '') + c.toString(16);\r\n        }).join('');\r\n    }\n\n    var Paren = function (node) {\r\n        this.value = node;\r\n    };\r\n    Paren.prototype = Object.assign(new Node(), {\r\n        type: 'Paren',\r\n        genCSS: function (context, output) {\r\n            output.add('(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            return new Paren(this.value.eval(context));\r\n        }\r\n    });\n\n    var _noSpaceCombinators = {\r\n        '': true,\r\n        ' ': true,\r\n        '|': true\r\n    };\r\n    var Combinator = function (value) {\r\n        if (value === ' ') {\r\n            this.value = ' ';\r\n            this.emptyOrWhitespace = true;\r\n        }\r\n        else {\r\n            this.value = value ? value.trim() : '';\r\n            this.emptyOrWhitespace = this.value === '';\r\n        }\r\n    };\r\n    Combinator.prototype = Object.assign(new Node(), {\r\n        type: 'Combinator',\r\n        genCSS: function (context, output) {\r\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n        }\r\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n        this.combinator = combinator instanceof Combinator ?\r\n            combinator : new Combinator(combinator);\r\n        if (typeof value === 'string') {\r\n            this.value = value.trim();\r\n        }\r\n        else if (value) {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = '';\r\n        }\r\n        this.isVariable = isVariable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.combinator, this);\r\n    };\r\n    Element.prototype = Object.assign(new Node(), {\r\n        type: 'Element',\r\n        accept: function (visitor) {\r\n            var value = this.value;\r\n            this.combinator = visitor.visit(this.combinator);\r\n            if (typeof value === 'object') {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function () {\r\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n        },\r\n        toCSS: function (context) {\r\n            context = context || {};\r\n            var value = this.value;\r\n            var firstSelector = context.firstSelector;\r\n            if (value instanceof Paren) {\r\n                // selector in parens should not be affected by outer selector\r\n                // flags (breaks only interpolated selectors - see #1973)\r\n                context.firstSelector = true;\r\n            }\r\n            value = value.toCSS ? value.toCSS(context) : value;\r\n            context.firstSelector = firstSelector;\r\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n                return '';\r\n            }\r\n            else {\r\n                return this.combinator.toCSS(context) + value;\r\n            }\r\n        }\r\n    });\n\n    var Math$1 = {\r\n        ALWAYS: 0,\r\n        PARENS_DIVISION: 1,\r\n        PARENS: 2\r\n        // removed - STRICT_LEGACY: 3\r\n    };\r\n    var RewriteUrls = {\r\n        OFF: 0,\r\n        LOCAL: 1,\r\n        ALL: 2\r\n    };\n\n    /**\r\n     * Returns the object type of the given payload\r\n     *\r\n     * @param {*} payload\r\n     * @returns {string}\r\n     */\r\n    function getType(payload) {\r\n        return Object.prototype.toString.call(payload).slice(8, -1);\r\n    }\r\n    /**\r\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n     *\r\n     * @param {*} payload\r\n     * @returns {payload is Record<string, any>}\r\n     */\r\n    function isPlainObject(payload) {\r\n        if (getType(payload) !== 'Object')\r\n            return false;\r\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n    }\r\n    /**\r\n     * Returns whether the payload is an array\r\n     *\r\n     * @param {any} payload\r\n     * @returns {payload is any[]}\r\n     */\r\n    function isArray(payload) {\r\n        return getType(payload) === 'Array';\r\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n            ? 'enumerable'\r\n            : 'nonenumerable';\r\n        if (propType === 'enumerable')\r\n            carry[key] = newVal;\r\n        if (includeNonenumerable && propType === 'nonenumerable') {\r\n            Object.defineProperty(carry, key, {\r\n                value: newVal,\r\n                enumerable: false,\r\n                writable: true,\r\n                configurable: true,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n     *\r\n     * @export\r\n     * @template T\r\n     * @param {T} target Target can be anything\r\n     * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n     * @returns {T} the target with replaced values\r\n     * @export\r\n     */\r\n    function copy(target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (isArray(target))\r\n            return target.map(function (i) { return copy(i, options); });\r\n        if (!isPlainObject(target))\r\n            return target;\r\n        var props = Object.getOwnPropertyNames(target);\r\n        var symbols = Object.getOwnPropertySymbols(target);\r\n        return __spreadArrays(props, symbols).reduce(function (carry, key) {\r\n            if (isArray(options.props) && !options.props.includes(key)) {\r\n                return carry;\r\n            }\r\n            var val = target[key];\r\n            var newVal = copy(val, options);\r\n            assignProp(carry, key, newVal, target, options.nonenumerable);\r\n            return carry;\r\n        }, {});\r\n    }\n\n    /* jshint proto: true */\r\n    function getLocation(index, inputStream) {\r\n        var n = index + 1;\r\n        var line = null;\r\n        var column = -1;\r\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n            column++;\r\n        }\r\n        if (typeof index === 'number') {\r\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n        }\r\n        return {\r\n            line: line,\r\n            column: column\r\n        };\r\n    }\r\n    function copyArray(arr) {\r\n        var i;\r\n        var length = arr.length;\r\n        var copy = new Array(length);\r\n        for (i = 0; i < length; i++) {\r\n            copy[i] = arr[i];\r\n        }\r\n        return copy;\r\n    }\r\n    function clone(obj) {\r\n        var cloned = {};\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                cloned[prop] = obj[prop];\r\n            }\r\n        }\r\n        return cloned;\r\n    }\r\n    function defaults(obj1, obj2) {\r\n        var newObj = obj2 || {};\r\n        if (!obj2._defaults) {\r\n            newObj = {};\r\n            var defaults_1 = copy(obj1);\r\n            newObj._defaults = defaults_1;\r\n            var cloned = obj2 ? copy(obj2) : {};\r\n            Object.assign(newObj, defaults_1, cloned);\r\n        }\r\n        return newObj;\r\n    }\r\n    function copyOptions(obj1, obj2) {\r\n        if (obj2 && obj2._defaults) {\r\n            return obj2;\r\n        }\r\n        var opts = defaults(obj1, obj2);\r\n        if (opts.strictMath) {\r\n            opts.math = Math$1.PARENS;\r\n        }\r\n        // Back compat with changed relativeUrls option\r\n        if (opts.relativeUrls) {\r\n            opts.rewriteUrls = RewriteUrls.ALL;\r\n        }\r\n        if (typeof opts.math === 'string') {\r\n            switch (opts.math.toLowerCase()) {\r\n                case 'always':\r\n                    opts.math = Math$1.ALWAYS;\r\n                    break;\r\n                case 'parens-division':\r\n                    opts.math = Math$1.PARENS_DIVISION;\r\n                    break;\r\n                case 'strict':\r\n                case 'parens':\r\n                    opts.math = Math$1.PARENS;\r\n                    break;\r\n                default:\r\n                    opts.math = Math$1.PARENS;\r\n            }\r\n        }\r\n        if (typeof opts.rewriteUrls === 'string') {\r\n            switch (opts.rewriteUrls.toLowerCase()) {\r\n                case 'off':\r\n                    opts.rewriteUrls = RewriteUrls.OFF;\r\n                    break;\r\n                case 'local':\r\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                    break;\r\n                case 'all':\r\n                    opts.rewriteUrls = RewriteUrls.ALL;\r\n                    break;\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    function merge(obj1, obj2) {\r\n        for (var prop in obj2) {\r\n            if (obj2.hasOwnProperty(prop)) {\r\n                obj1[prop] = obj2[prop];\r\n            }\r\n        }\r\n        return obj1;\r\n    }\r\n    function flattenArray(arr, result) {\r\n        if (result === void 0) { result = []; }\r\n        for (var i = 0, length_1 = arr.length; i < length_1; i++) {\r\n            var value = arr[i];\r\n            if (Array.isArray(value)) {\r\n                flattenArray(value, result);\r\n            }\r\n            else {\r\n                if (value !== undefined) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n    /**\r\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n     * Besides standard .message it keeps some additional data like a path to the file where the error\r\n     * occurred along with line and column numbers.\r\n     *\r\n     * @class\r\n     * @extends Error\r\n     * @type {module.LessError}\r\n     *\r\n     * @prop {string} type\r\n     * @prop {string} filename\r\n     * @prop {number} index\r\n     * @prop {number} line\r\n     * @prop {number} column\r\n     * @prop {number} callLine\r\n     * @prop {number} callExtract\r\n     * @prop {string[]} extract\r\n     *\r\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n     * @param {string} [currentFilename]\r\n     */\r\n    var LessError = function (e, fileContentMap, currentFilename) {\r\n        Error.call(this);\r\n        var filename = e.filename || currentFilename;\r\n        this.message = e.message;\r\n        this.stack = e.stack;\r\n        if (fileContentMap && filename) {\r\n            var input = fileContentMap.contents[filename];\r\n            var loc = getLocation(e.index, input);\r\n            var line = loc.line;\r\n            var col = loc.column;\r\n            var callLine = e.call && getLocation(e.call, input).line;\r\n            var lines = input ? input.split('\\n') : '';\r\n            this.type = e.type || 'Syntax';\r\n            this.filename = filename;\r\n            this.index = e.index;\r\n            this.line = typeof line === 'number' ? line + 1 : null;\r\n            this.column = col;\r\n            if (!this.line && this.stack) {\r\n                var found = this.stack.match(anonymousFunc);\r\n                /**\r\n                 * We have to figure out how this environment stringifies anonymous functions\r\n                 * so we can correctly map plugin errors.\r\n                 *\r\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n                 * being present or not, so we inject dummy params.\r\n                 */\r\n                var func = new Function('a', 'throw new Error()');\r\n                var lineAdjust = 0;\r\n                try {\r\n                    func();\r\n                }\r\n                catch (e) {\r\n                    var match = e.stack.match(anonymousFunc);\r\n                    var line = parseInt(match[2]);\r\n                    lineAdjust = 1 - line;\r\n                }\r\n                if (found) {\r\n                    if (found[2]) {\r\n                        this.line = parseInt(found[2]) + lineAdjust;\r\n                    }\r\n                    if (found[3]) {\r\n                        this.column = parseInt(found[3]);\r\n                    }\r\n                }\r\n            }\r\n            this.callLine = callLine + 1;\r\n            this.callExtract = lines[callLine];\r\n            this.extract = [\r\n                lines[this.line - 2],\r\n                lines[this.line - 1],\r\n                lines[this.line]\r\n            ];\r\n        }\r\n    };\r\n    if (typeof Object.create === 'undefined') {\r\n        var F = function () { };\r\n        F.prototype = Error.prototype;\r\n        LessError.prototype = new F();\r\n    }\r\n    else {\r\n        LessError.prototype = Object.create(Error.prototype);\r\n    }\r\n    LessError.prototype.constructor = LessError;\r\n    /**\r\n     * An overridden version of the default Object.prototype.toString\r\n     * which uses additional information to create a helpful message.\r\n     *\r\n     * @param {Object} options\r\n     * @returns {string}\r\n     */\r\n    LessError.prototype.toString = function (options) {\r\n        options = options || {};\r\n        var message = '';\r\n        var extract = this.extract || [];\r\n        var error = [];\r\n        var stylize = function (str) { return str; };\r\n        if (options.stylize) {\r\n            var type = typeof options.stylize;\r\n            if (type !== 'function') {\r\n                throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n            }\r\n            stylize = options.stylize;\r\n        }\r\n        if (this.line !== null) {\r\n            if (typeof extract[0] === 'string') {\r\n                error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n            }\r\n            if (typeof extract[1] === 'string') {\r\n                var errorTxt = this.line + \" \";\r\n                if (extract[1]) {\r\n                    errorTxt += extract[1].slice(0, this.column) +\r\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n                }\r\n                error.push(errorTxt);\r\n            }\r\n            if (typeof extract[2] === 'string') {\r\n                error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n            }\r\n            error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n        }\r\n        message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n        if (this.filename) {\r\n            message += stylize(' in ', 'red') + this.filename;\r\n        }\r\n        if (this.line) {\r\n            message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n        }\r\n        message += \"\\n\" + error;\r\n        if (this.callLine) {\r\n            message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n            message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n        }\r\n        return message;\r\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n        this.extendList = extendList;\r\n        this.condition = condition;\r\n        this.evaldCondition = !condition;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.elements = this.getElements(elements);\r\n        this.mixinElements_ = undefined;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.elements, this);\r\n    };\r\n    Selector.prototype = Object.assign(new Node(), {\r\n        type: 'Selector',\r\n        accept: function (visitor) {\r\n            if (this.elements) {\r\n                this.elements = visitor.visitArray(this.elements);\r\n            }\r\n            if (this.extendList) {\r\n                this.extendList = visitor.visitArray(this.extendList);\r\n            }\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        createDerived: function (elements, extendList, evaldCondition) {\r\n            elements = this.getElements(elements);\r\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n            newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\r\n            newSelector.mediaEmpty = this.mediaEmpty;\r\n            return newSelector;\r\n        },\r\n        getElements: function (els) {\r\n            if (!els) {\r\n                return [new Element('', '&', false, this._index, this._fileInfo)];\r\n            }\r\n            if (typeof els === 'string') {\r\n                this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\r\n                    if (err) {\r\n                        throw new LessError({\r\n                            index: err.index,\r\n                            message: err.message\r\n                        }, this.parse.imports, this._fileInfo.filename);\r\n                    }\r\n                    els = result[0].elements;\r\n                });\r\n            }\r\n            return els;\r\n        },\r\n        createEmptySelectors: function () {\r\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n            sels[0].mediaEmpty = true;\r\n            return sels;\r\n        },\r\n        match: function (other) {\r\n            var elements = this.elements;\r\n            var len = elements.length;\r\n            var olen;\r\n            var i;\r\n            other = other.mixinElements();\r\n            olen = other.length;\r\n            if (olen === 0 || len < olen) {\r\n                return 0;\r\n            }\r\n            else {\r\n                for (i = 0; i < olen; i++) {\r\n                    if (elements[i].value !== other[i]) {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return olen; // return number of matched elements\r\n        },\r\n        mixinElements: function () {\r\n            if (this.mixinElements_) {\r\n                return this.mixinElements_;\r\n            }\r\n            var elements = this.elements.map(function (v) {\r\n                return v.combinator.value + (v.value.value || v.value);\r\n            }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\r\n            if (elements) {\r\n                if (elements[0] === '&') {\r\n                    elements.shift();\r\n                }\r\n            }\r\n            else {\r\n                elements = [];\r\n            }\r\n            return (this.mixinElements_ = elements);\r\n        },\r\n        isJustParentSelector: function () {\r\n            return !this.mediaEmpty &&\r\n                this.elements.length === 1 &&\r\n                this.elements[0].value === '&' &&\r\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n        },\r\n        eval: function (context) {\r\n            var evaldCondition = this.condition && this.condition.eval(context);\r\n            var elements = this.elements;\r\n            var extendList = this.extendList;\r\n            elements = elements && elements.map(function (e) { return e.eval(context); });\r\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n            return this.createDerived(elements, extendList, evaldCondition);\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i, element;\r\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n                output.add(' ', this.fileInfo(), this.getIndex());\r\n            }\r\n            for (i = 0; i < this.elements.length; i++) {\r\n                element = this.elements[i];\r\n                element.genCSS(context, output);\r\n            }\r\n        },\r\n        getIsOutput: function () {\r\n            return this.evaldCondition;\r\n        }\r\n    });\n\n    var Value = function (value) {\r\n        if (!value) {\r\n            throw new Error('Value requires an array argument');\r\n        }\r\n        if (!Array.isArray(value)) {\r\n            this.value = [value];\r\n        }\r\n        else {\r\n            this.value = value;\r\n        }\r\n    };\r\n    Value.prototype = Object.assign(new Node(), {\r\n        type: 'Value',\r\n        accept: function (visitor) {\r\n            if (this.value) {\r\n                this.value = visitor.visitArray(this.value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.length === 1) {\r\n                return this.value[0].eval(context);\r\n            }\r\n            else {\r\n                return new Value(this.value.map(function (v) {\r\n                    return v.eval(context);\r\n                }));\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            for (i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (i + 1 < this.value.length) {\r\n                    output.add((context && context.compress) ? ',' : ', ');\r\n                }\r\n            }\r\n        }\r\n    });\n\n    var Keyword = function (value) {\r\n        this.value = value;\r\n    };\r\n    Keyword.prototype = Object.assign(new Node(), {\r\n        type: 'Keyword',\r\n        genCSS: function (context, output) {\r\n            if (this.value === '%') {\r\n                throw { type: 'Syntax', message: 'Invalid % without number' };\r\n            }\r\n            output.add(this.value);\r\n        }\r\n    });\r\n    Keyword.True = new Keyword('true');\r\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n        this.value = value;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.mapLines = mapLines;\r\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n        this.allowRoot = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n    };\r\n    Anonymous.prototype = Object.assign(new Node(), {\r\n        type: 'Anonymous',\r\n        eval: function () {\r\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n        },\r\n        compare: function (other) {\r\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rulesetLike;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.nodeVisible = Boolean(this.value);\r\n            if (this.nodeVisible) {\r\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n            }\r\n        }\r\n    });\n\n    var MATH$1 = Math$1;\r\n    function evalName(context, name) {\r\n        var value = '';\r\n        var i;\r\n        var n = name.length;\r\n        var output = { add: function (s) { value += s; } };\r\n        for (i = 0; i < n; i++) {\r\n            name[i].eval(context).genCSS(context, output);\r\n        }\r\n        return value;\r\n    }\r\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n        this.important = important ? \" \" + important.trim() : '';\r\n        this.merge = merge;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.inline = inline || false;\r\n        this.variable = (variable !== undefined) ? variable\r\n            : (name.charAt && (name.charAt(0) === '@'));\r\n        this.allowRoot = true;\r\n        this.setParent(this.value, this);\r\n    };\r\n    Declaration.prototype = Object.assign(new Node(), {\r\n        type: 'Declaration',\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n            try {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            catch (e) {\r\n                e.index = this._index;\r\n                e.filename = this._fileInfo.filename;\r\n                throw e;\r\n            }\r\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n        },\r\n        eval: function (context) {\r\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\r\n            if (typeof name !== 'string') {\r\n                // expand 'primitive' name directly to get\r\n                // things faster (~10% for benchmark.less):\r\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n                    name[0].value : evalName(context, name);\r\n                variable = false; // never treat expanded interpolation as new variable name\r\n            }\r\n            // @todo remove when parens-division is default\r\n            if (name === 'font' && context.math === MATH$1.ALWAYS) {\r\n                mathBypass = true;\r\n                prevMath = context.math;\r\n                context.math = MATH$1.PARENS_DIVISION;\r\n            }\r\n            try {\r\n                context.importantScope.push({});\r\n                evaldValue = this.value.eval(context);\r\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                        index: this.getIndex(), filename: this.fileInfo().filename };\r\n                }\r\n                var important = this.important;\r\n                var importantResult = context.importantScope.pop();\r\n                if (!important && importantResult.important) {\r\n                    important = importantResult.important;\r\n                }\r\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n            }\r\n            catch (e) {\r\n                if (typeof e.index !== 'number') {\r\n                    e.index = this.getIndex();\r\n                    e.filename = this.fileInfo().filename;\r\n                }\r\n                throw e;\r\n            }\r\n            finally {\r\n                if (mathBypass) {\r\n                    context.math = prevMath;\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n        }\r\n    });\n\n    var debugInfo = /** @class */ (function () {\r\n        function debugInfo(context, ctx, lineSeparator) {\r\n            var result = '';\r\n            if (context.dumpLineNumbers && !context.compress) {\r\n                switch (context.dumpLineNumbers) {\r\n                    case 'comments':\r\n                        result = debugInfo.asComment(ctx);\r\n                        break;\r\n                    case 'mediaquery':\r\n                        result = debugInfo.asMediaQuery(ctx);\r\n                        break;\r\n                    case 'all':\r\n                        result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\r\n                        break;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        debugInfo.asComment = function (ctx) {\r\n            return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\r\n        };\r\n        debugInfo.asMediaQuery = function (ctx) {\r\n            var filenameWithProtocol = ctx.debugInfo.fileName;\r\n            if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n                filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n            }\r\n            return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\r\n                if (a == '\\\\') {\r\n                    a = '\\/';\r\n                }\r\n                return \"\\\\\" + a;\r\n            }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n        };\r\n        return debugInfo;\r\n    }());\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n        this.value = value;\r\n        this.isLineComment = isLineComment;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    Comment.prototype = Object.assign(new Node(), {\r\n        type: 'Comment',\r\n        genCSS: function (context, output) {\r\n            if (this.debugInfo) {\r\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n        },\r\n        isSilent: function (context) {\r\n            var isCompressed = context.compress && this.value[2] !== '!';\r\n            return this.isLineComment || isCompressed;\r\n        }\r\n    });\n\n    var contexts = {};\r\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n        if (!original) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < propertiesToCopy.length; i++) {\r\n            if (original.hasOwnProperty(propertiesToCopy[i])) {\r\n                destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\r\n            }\r\n        }\r\n    };\r\n    /*\r\n     parse is used whilst parsing\r\n     */\r\n    var parseCopyProperties = [\r\n        // options\r\n        'paths',\r\n        'rewriteUrls',\r\n        'rootpath',\r\n        'strictImports',\r\n        'insecure',\r\n        'dumpLineNumbers',\r\n        'compress',\r\n        'syncImport',\r\n        'chunkInput',\r\n        'mime',\r\n        'useFileCache',\r\n        // context\r\n        'processImports',\r\n        // Used by the import manager to stop multiple import visitors being created.\r\n        'pluginManager' // Used as the plugin manager for the session\r\n    ];\r\n    contexts.Parse = function (options) {\r\n        copyFromOriginal(options, this, parseCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n    };\r\n    var evalCopyProperties = [\r\n        'paths',\r\n        'compress',\r\n        'math',\r\n        'strictUnits',\r\n        'sourceMap',\r\n        'importMultiple',\r\n        'urlArgs',\r\n        'javascriptEnabled',\r\n        'pluginManager',\r\n        'importantScope',\r\n        'rewriteUrls' // option - whether to adjust URL's to be relative\r\n    ];\r\n    contexts.Eval = function (options, frames) {\r\n        copyFromOriginal(options, this, evalCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n        this.frames = frames || [];\r\n        this.importantScope = this.importantScope || [];\r\n    };\r\n    contexts.Eval.prototype.enterCalc = function () {\r\n        if (!this.calcStack) {\r\n            this.calcStack = [];\r\n        }\r\n        this.calcStack.push(true);\r\n        this.inCalc = true;\r\n    };\r\n    contexts.Eval.prototype.exitCalc = function () {\r\n        this.calcStack.pop();\r\n        if (!this.calcStack.length) {\r\n            this.inCalc = false;\r\n        }\r\n    };\r\n    contexts.Eval.prototype.inParenthesis = function () {\r\n        if (!this.parensStack) {\r\n            this.parensStack = [];\r\n        }\r\n        this.parensStack.push(true);\r\n    };\r\n    contexts.Eval.prototype.outOfParenthesis = function () {\r\n        this.parensStack.pop();\r\n    };\r\n    contexts.Eval.prototype.inCalc = false;\r\n    contexts.Eval.prototype.mathOn = true;\r\n    contexts.Eval.prototype.isMathOn = function (op) {\r\n        if (!this.mathOn) {\r\n            return false;\r\n        }\r\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n            return false;\r\n        }\r\n        if (this.math > Math$1.PARENS_DIVISION) {\r\n            return this.parensStack && this.parensStack.length;\r\n        }\r\n        return true;\r\n    };\r\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\r\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n        return isRelative(path);\r\n    };\r\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\r\n        var newPath;\r\n        rootpath = rootpath || '';\r\n        newPath = this.normalizePath(rootpath + path);\r\n        // If a path was explicit relative and the rootpath was not an absolute path\r\n        // we must ensure that the new path is also explicit relative.\r\n        if (isPathLocalRelative(path) &&\r\n            isPathRelative(rootpath) &&\r\n            isPathLocalRelative(newPath) === false) {\r\n            newPath = \"./\" + newPath;\r\n        }\r\n        return newPath;\r\n    };\r\n    contexts.Eval.prototype.normalizePath = function (path) {\r\n        var segments = path.split('/').reverse();\r\n        var segment;\r\n        path = [];\r\n        while (segments.length !== 0) {\r\n            segment = segments.pop();\r\n            switch (segment) {\r\n                case '.':\r\n                    break;\r\n                case '..':\r\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                        path.push(segment);\r\n                    }\r\n                    else {\r\n                        path.pop();\r\n                    }\r\n                    break;\r\n                default:\r\n                    path.push(segment);\r\n                    break;\r\n            }\r\n        }\r\n        return path.join('/');\r\n    };\r\n    function isPathRelative(path) {\r\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n    }\r\n    function isPathLocalRelative(path) {\r\n        return path.charAt(0) === '.';\r\n    }\r\n    // todo - do the same for the toCSS ?\n\n    function makeRegistry(base) {\r\n        return {\r\n            _data: {},\r\n            add: function (name, func) {\r\n                // precautionary case conversion, as later querying of\r\n                // the registry by function-caller uses lower case as well.\r\n                name = name.toLowerCase();\r\n                if (this._data.hasOwnProperty(name)) ;\r\n                this._data[name] = func;\r\n            },\r\n            addMultiple: function (functions) {\r\n                var _this = this;\r\n                Object.keys(functions).forEach(function (name) {\r\n                    _this.add(name, functions[name]);\r\n                });\r\n            },\r\n            get: function (name) {\r\n                return this._data[name] || (base && base.get(name));\r\n            },\r\n            getLocalFunctions: function () {\r\n                return this._data;\r\n            },\r\n            inherit: function () {\r\n                return makeRegistry(this);\r\n            },\r\n            create: function (base) {\r\n                return makeRegistry(base);\r\n            }\r\n        };\r\n    }\r\n    var functionRegistry = makeRegistry(null);\n\n    var defaultFunc = {\r\n        eval: function () {\r\n            var v = this.value_;\r\n            var e = this.error_;\r\n            if (e) {\r\n                throw e;\r\n            }\r\n            if (v != null) {\r\n                return v ? Keyword.True : Keyword.False;\r\n            }\r\n        },\r\n        value: function (v) {\r\n            this.value_ = v;\r\n        },\r\n        error: function (e) {\r\n            this.error_ = e;\r\n        },\r\n        reset: function () {\r\n            this.value_ = this.error_ = null;\r\n        }\r\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n        this.selectors = selectors;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        this._variables = null;\r\n        this._properties = null;\r\n        this.strictImports = strictImports;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(this.selectors, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Ruleset.prototype = Object.assign(new Node(), {\r\n        type: 'Ruleset',\r\n        isRuleset: true,\r\n        isRulesetLike: function () { return true; },\r\n        accept: function (visitor) {\r\n            if (this.paths) {\r\n                this.paths = visitor.visitArray(this.paths, true);\r\n            }\r\n            else if (this.selectors) {\r\n                this.selectors = visitor.visitArray(this.selectors);\r\n            }\r\n            if (this.rules && this.rules.length) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var selectors;\r\n            var selCnt;\r\n            var selector;\r\n            var i;\r\n            var hasVariable;\r\n            var hasOnePassingSelector = false;\r\n            if (this.selectors && (selCnt = this.selectors.length)) {\r\n                selectors = new Array(selCnt);\r\n                defaultFunc.error({\r\n                    type: 'Syntax',\r\n                    message: 'it is currently only allowed in parametric mixin guards,'\r\n                });\r\n                for (i = 0; i < selCnt; i++) {\r\n                    selector = this.selectors[i].eval(context);\r\n                    for (var j = 0; j < selector.elements.length; j++) {\r\n                        if (selector.elements[j].isVariable) {\r\n                            hasVariable = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    selectors[i] = selector;\r\n                    if (selector.evaldCondition) {\r\n                        hasOnePassingSelector = true;\r\n                    }\r\n                }\r\n                if (hasVariable) {\r\n                    var toParseSelectors = new Array(selCnt);\r\n                    for (i = 0; i < selCnt; i++) {\r\n                        selector = selectors[i];\r\n                        toParseSelectors[i] = selector.toCSS(context);\r\n                    }\r\n                    this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\r\n                        if (result) {\r\n                            selectors = flattenArray(result);\r\n                        }\r\n                    });\r\n                }\r\n                defaultFunc.reset();\r\n            }\r\n            else {\r\n                hasOnePassingSelector = true;\r\n            }\r\n            var rules = this.rules ? copyArray(this.rules) : null;\r\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n            var rule;\r\n            var subRule;\r\n            ruleset.originalRuleset = this;\r\n            ruleset.root = this.root;\r\n            ruleset.firstRoot = this.firstRoot;\r\n            ruleset.allowImports = this.allowImports;\r\n            if (this.debugInfo) {\r\n                ruleset.debugInfo = this.debugInfo;\r\n            }\r\n            if (!hasOnePassingSelector) {\r\n                rules.length = 0;\r\n            }\r\n            // inherit a function registry from the frames stack when possible;\r\n            // otherwise from the global registry\r\n            ruleset.functionRegistry = (function (frames) {\r\n                var i = 0;\r\n                var n = frames.length;\r\n                var found;\r\n                for (; i !== n; ++i) {\r\n                    found = frames[i].functionRegistry;\r\n                    if (found) {\r\n                        return found;\r\n                    }\r\n                }\r\n                return functionRegistry;\r\n            }(context.frames)).inherit();\r\n            // push the current ruleset to the frames stack\r\n            var ctxFrames = context.frames;\r\n            ctxFrames.unshift(ruleset);\r\n            // currrent selectors\r\n            var ctxSelectors = context.selectors;\r\n            if (!ctxSelectors) {\r\n                context.selectors = ctxSelectors = [];\r\n            }\r\n            ctxSelectors.unshift(this.selectors);\r\n            // Evaluate imports\r\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n                ruleset.evalImports(context);\r\n            }\r\n            // Store the frames around mixin definitions,\r\n            // so they can be evaluated like closures when the time comes.\r\n            var rsRules = ruleset.rules;\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.evalFirst) {\r\n                    rsRules[i] = rule.eval(context);\r\n                }\r\n            }\r\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n            // Evaluate mixin calls.\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.type === 'MixinCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope if the variable is\r\n                            // already there. consider returning false here\r\n                            // but we need a way to \"return\" variable from mixins\r\n                            return !(ruleset.variable(r.name));\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n                else if (rule.type === 'VariableCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).rules.filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope at all\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (!rule.evalFirst) {\r\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                // for rulesets, check if it is a css guard and can be removed\r\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n                    // check if it can be folded in (e.g. & where)\r\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                        rsRules.splice(i--, 1);\r\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                            if (subRule instanceof Node) {\r\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                                    rsRules.splice(++i, 0, subRule);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Pop the stack\r\n            ctxFrames.shift();\r\n            ctxSelectors.shift();\r\n            if (context.mediaBlocks) {\r\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\r\n                }\r\n            }\r\n            return ruleset;\r\n        },\r\n        evalImports: function (context) {\r\n            var rules = this.rules;\r\n            var i;\r\n            var importRules;\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (i = 0; i < rules.length; i++) {\r\n                if (rules[i].type === 'Import') {\r\n                    importRules = rules[i].eval(context);\r\n                    if (importRules && (importRules.length || importRules.length === 0)) {\r\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                        i += importRules.length - 1;\r\n                    }\r\n                    else {\r\n                        rules.splice(i, 1, importRules);\r\n                    }\r\n                    this.resetCache();\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant();\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            }), this.strictImports, this.visibilityInfo());\r\n            return result;\r\n        },\r\n        matchArgs: function (args) {\r\n            return !args || args.length === 0;\r\n        },\r\n        // lets you call a css selector with a guard\r\n        matchCondition: function (args, context) {\r\n            var lastSelector = this.selectors[this.selectors.length - 1];\r\n            if (!lastSelector.evaldCondition) {\r\n                return false;\r\n            }\r\n            if (lastSelector.condition &&\r\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        resetCache: function () {\r\n            this._rulesets = null;\r\n            this._variables = null;\r\n            this._properties = null;\r\n            this._lookups = {};\r\n        },\r\n        variables: function () {\r\n            if (!this._variables) {\r\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable === true) {\r\n                        hash[r.name] = r;\r\n                    }\r\n                    // when evaluating variables in an import statement, imports have not been eval'd\r\n                    // so we need to go inside import statements.\r\n                    // guard against root being a string (in the case of inlined less)\r\n                    if (r.type === 'Import' && r.root && r.root.variables) {\r\n                        var vars = r.root.variables();\r\n                        for (var name_1 in vars) {\r\n                            if (vars.hasOwnProperty(name_1)) {\r\n                                hash[name_1] = r.root.variable(name_1);\r\n                            }\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._variables;\r\n        },\r\n        properties: function () {\r\n            if (!this._properties) {\r\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable !== true) {\r\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                            r.name[0].value : r.name;\r\n                        // Properties don't overwrite as they can merge\r\n                        if (!hash[\"$\" + name_2]) {\r\n                            hash[\"$\" + name_2] = [r];\r\n                        }\r\n                        else {\r\n                            hash[\"$\" + name_2].push(r);\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._properties;\r\n        },\r\n        variable: function (name) {\r\n            var decl = this.variables()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        property: function (name) {\r\n            var decl = this.properties()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        lastDeclaration: function () {\r\n            for (var i = this.rules.length; i > 0; i--) {\r\n                var decl = this.rules[i - 1];\r\n                if (decl instanceof Declaration) {\r\n                    return this.parseValue(decl);\r\n                }\r\n            }\r\n        },\r\n        parseValue: function (toParse) {\r\n            var self = this;\r\n            function transformDeclaration(decl) {\r\n                if (decl.value instanceof Anonymous && !decl.parsed) {\r\n                    if (typeof decl.value.value === 'string') {\r\n                        this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\r\n                            if (err) {\r\n                                decl.parsed = true;\r\n                            }\r\n                            if (result) {\r\n                                decl.value = result[0];\r\n                                decl.important = result[1] || '';\r\n                                decl.parsed = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        decl.parsed = true;\r\n                    }\r\n                    return decl;\r\n                }\r\n                else {\r\n                    return decl;\r\n                }\r\n            }\r\n            if (!Array.isArray(toParse)) {\r\n                return transformDeclaration.call(self, toParse);\r\n            }\r\n            else {\r\n                var nodes_1 = [];\r\n                toParse.forEach(function (n) {\r\n                    nodes_1.push(transformDeclaration.call(self, n));\r\n                });\r\n                return nodes_1;\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (!this.rules) {\r\n                return [];\r\n            }\r\n            var filtRules = [];\r\n            var rules = this.rules;\r\n            var i;\r\n            var rule;\r\n            for (i = 0; (rule = rules[i]); i++) {\r\n                if (rule.isRuleset) {\r\n                    filtRules.push(rule);\r\n                }\r\n            }\r\n            return filtRules;\r\n        },\r\n        prependRule: function (rule) {\r\n            var rules = this.rules;\r\n            if (rules) {\r\n                rules.unshift(rule);\r\n            }\r\n            else {\r\n                this.rules = [rule];\r\n            }\r\n            this.setParent(rule, this);\r\n        },\r\n        find: function (selector, self, filter) {\r\n            self = self || this;\r\n            var rules = [];\r\n            var match;\r\n            var foundMixins;\r\n            var key = selector.toCSS();\r\n            if (key in this._lookups) {\r\n                return this._lookups[key];\r\n            }\r\n            this.rulesets().forEach(function (rule) {\r\n                if (rule !== self) {\r\n                    for (var j = 0; j < rule.selectors.length; j++) {\r\n                        match = selector.match(rule.selectors[j]);\r\n                        if (match) {\r\n                            if (selector.elements.length > match) {\r\n                                if (!filter || filter(rule)) {\r\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                                    for (var i = 0; i < foundMixins.length; ++i) {\r\n                                        foundMixins[i].path.push(rule);\r\n                                    }\r\n                                    Array.prototype.push.apply(rules, foundMixins);\r\n                                }\r\n                            }\r\n                            else {\r\n                                rules.push({ rule: rule, path: [] });\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._lookups[key] = rules;\r\n            return rules;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            var j;\r\n            var charsetRuleNodes = [];\r\n            var ruleNodes = [];\r\n            var // Line number debugging\r\n            debugInfo$1;\r\n            var rule;\r\n            var path;\r\n            context.tabLevel = (context.tabLevel || 0);\r\n            if (!this.root) {\r\n                context.tabLevel++;\r\n            }\r\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n            var sep;\r\n            var charsetNodeIndex = 0;\r\n            var importNodeIndex = 0;\r\n            for (i = 0; (rule = this.rules[i]); i++) {\r\n                if (rule instanceof Comment) {\r\n                    if (importNodeIndex === i) {\r\n                        importNodeIndex++;\r\n                    }\r\n                    ruleNodes.push(rule);\r\n                }\r\n                else if (rule.isCharset && rule.isCharset()) {\r\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n                    charsetNodeIndex++;\r\n                    importNodeIndex++;\r\n                }\r\n                else if (rule.type === 'Import') {\r\n                    ruleNodes.splice(importNodeIndex, 0, rule);\r\n                    importNodeIndex++;\r\n                }\r\n                else {\r\n                    ruleNodes.push(rule);\r\n                }\r\n            }\r\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n            // If this is the root node, we don't render\r\n            // a selector, or {}.\r\n            if (!this.root) {\r\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n                if (debugInfo$1) {\r\n                    output.add(debugInfo$1);\r\n                    output.add(tabSetStr);\r\n                }\r\n                var paths = this.paths;\r\n                var pathCnt = paths.length;\r\n                var pathSubCnt = void 0;\r\n                sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n                for (i = 0; i < pathCnt; i++) {\r\n                    path = paths[i];\r\n                    if (!(pathSubCnt = path.length)) {\r\n                        continue;\r\n                    }\r\n                    if (i > 0) {\r\n                        output.add(sep);\r\n                    }\r\n                    context.firstSelector = true;\r\n                    path[0].genCSS(context, output);\r\n                    context.firstSelector = false;\r\n                    for (j = 1; j < pathSubCnt; j++) {\r\n                        path[j].genCSS(context, output);\r\n                    }\r\n                }\r\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n            }\r\n            // Compile rules and rulesets\r\n            for (i = 0; (rule = ruleNodes[i]); i++) {\r\n                if (i + 1 === ruleNodes.length) {\r\n                    context.lastRule = true;\r\n                }\r\n                var currentLastRule = context.lastRule;\r\n                if (rule.isRulesetLike(rule)) {\r\n                    context.lastRule = false;\r\n                }\r\n                if (rule.genCSS) {\r\n                    rule.genCSS(context, output);\r\n                }\r\n                else if (rule.value) {\r\n                    output.add(rule.value.toString());\r\n                }\r\n                context.lastRule = currentLastRule;\r\n                if (!context.lastRule && rule.isVisible()) {\r\n                    output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n                }\r\n                else {\r\n                    context.lastRule = false;\r\n                }\r\n            }\r\n            if (!this.root) {\r\n                output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n                context.tabLevel--;\r\n            }\r\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n                output.add('\\n');\r\n            }\r\n        },\r\n        joinSelectors: function (paths, context, selectors) {\r\n            for (var s = 0; s < selectors.length; s++) {\r\n                this.joinSelector(paths, context, selectors[s]);\r\n            }\r\n        },\r\n        joinSelector: function (paths, context, selector) {\r\n            function createParenthesis(elementsToPak, originalElement) {\r\n                var replacementParen, j;\r\n                if (elementsToPak.length === 0) {\r\n                    replacementParen = new Paren(elementsToPak[0]);\r\n                }\r\n                else {\r\n                    var insideParent = new Array(elementsToPak.length);\r\n                    for (j = 0; j < elementsToPak.length; j++) {\r\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                    }\r\n                    replacementParen = new Paren(new Selector(insideParent));\r\n                }\r\n                return replacementParen;\r\n            }\r\n            function createSelector(containedElement, originalElement) {\r\n                var element, selector;\r\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                selector = new Selector([element]);\r\n                return selector;\r\n            }\r\n            // joins selector path from `beginningPath` with selector path in `addPath`\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns concatenated path\r\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n                var newSelectorPath, lastSelector, newJoinedSelector;\r\n                // our new selector path\r\n                newSelectorPath = [];\r\n                // construct the joined selector - if & is the first thing this will be empty,\r\n                // if not newJoinedSelector will be the last set of elements in the selector\r\n                if (beginningPath.length > 0) {\r\n                    newSelectorPath = copyArray(beginningPath);\r\n                    lastSelector = newSelectorPath.pop();\r\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n                }\r\n                else {\r\n                    newJoinedSelector = originalSelector.createDerived([]);\r\n                }\r\n                if (addPath.length > 0) {\r\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n                    // that is valid without anything in front of it\r\n                    // so if the & does not have a combinator that is \"\" or \" \" then\r\n                    // and there is a combinator on the parent, then grab that.\r\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n                    var combinator = replacedElement.combinator;\r\n                    var parentEl = addPath[0].elements[0];\r\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                        combinator = parentEl.combinator;\r\n                    }\r\n                    // join the elements so far with the first part of the parent\r\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n                }\r\n                // now add the joined selector - but only if it is not empty\r\n                if (newJoinedSelector.elements.length !== 0) {\r\n                    newSelectorPath.push(newJoinedSelector);\r\n                }\r\n                // put together the parent selectors after the join (e.g. the rest of the parent)\r\n                if (addPath.length > 1) {\r\n                    var restOfPath = addPath.slice(1);\r\n                    restOfPath = restOfPath.map(function (selector) {\r\n                        return selector.createDerived(selector.elements, []);\r\n                    });\r\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\r\n                }\r\n                return newSelectorPath;\r\n            }\r\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns array with all concatenated paths\r\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n                var j;\r\n                for (j = 0; j < beginningPath.length; j++) {\r\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n                    result.push(newSelectorPath);\r\n                }\r\n                return result;\r\n            }\r\n            function mergeElementsOnToSelectors(elements, selectors) {\r\n                var i, sel;\r\n                if (elements.length === 0) {\r\n                    return;\r\n                }\r\n                if (selectors.length === 0) {\r\n                    selectors.push([new Selector(elements)]);\r\n                    return;\r\n                }\r\n                for (i = 0; (sel = selectors[i]); i++) {\r\n                    // if the previous thing in sel is a parent this needs to join on to it\r\n                    if (sel.length > 0) {\r\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n                    }\r\n                    else {\r\n                        sel.push(new Selector(elements));\r\n                    }\r\n                }\r\n            }\r\n            // replace all parent selectors inside `inSelector` by content of `context` array\r\n            // resulting selectors are returned inside `paths` array\r\n            // returns true if `inSelector` contained at least one parent selector\r\n            function replaceParentSelector(paths, context, inSelector) {\r\n                // The paths are [[Selector]]\r\n                // The first list is a list of comma separated selectors\r\n                // The inner list is a list of inheritance separated selectors\r\n                // e.g.\r\n                // .a, .b {\r\n                //   .c {\r\n                //   }\r\n                // }\r\n                // == [[.a] [.c]] [[.b] [.c]]\r\n                //\r\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\r\n                function findNestedSelector(element) {\r\n                    var maybeSelector;\r\n                    if (!(element.value instanceof Paren)) {\r\n                        return null;\r\n                    }\r\n                    maybeSelector = element.value.value;\r\n                    if (!(maybeSelector instanceof Selector)) {\r\n                        return null;\r\n                    }\r\n                    return maybeSelector;\r\n                }\r\n                // the elements from the current selector so far\r\n                currentElements = [];\r\n                // the current list of new selectors to add to the path.\r\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n                // by the parents\r\n                newSelectors = [\r\n                    []\r\n                ];\r\n                for (i = 0; (el = inSelector.elements[i]); i++) {\r\n                    // non parent reference elements just get added\r\n                    if (el.value !== '&') {\r\n                        var nestedSelector = findNestedSelector(el);\r\n                        if (nestedSelector != null) {\r\n                            // merge the current list of non parent selector elements\r\n                            // on to the current list of selectors to add\r\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                            var nestedPaths = [];\r\n                            var replaced = void 0;\r\n                            var replacedNewSelectors = [];\r\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                            hadParentSelector = hadParentSelector || replaced;\r\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                            for (k = 0; k < nestedPaths.length; k++) {\r\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                            }\r\n                            newSelectors = replacedNewSelectors;\r\n                            currentElements = [];\r\n                        }\r\n                        else {\r\n                            currentElements.push(el);\r\n                        }\r\n                    }\r\n                    else {\r\n                        hadParentSelector = true;\r\n                        // the new list of selectors to add\r\n                        selectorsMultiplied = [];\r\n                        // merge the current list of non parent selector elements\r\n                        // on to the current list of selectors to add\r\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                        // loop through our current selectors\r\n                        for (j = 0; j < newSelectors.length; j++) {\r\n                            sel = newSelectors[j];\r\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                            // whether there are parents or not\r\n                            if (context.length === 0) {\r\n                                // the combinator used on el should now be applied to the next element instead so that\r\n                                // it is not lost\r\n                                if (sel.length > 0) {\r\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                                }\r\n                                selectorsMultiplied.push(sel);\r\n                            }\r\n                            else {\r\n                                // and the parent selectors\r\n                                for (k = 0; k < context.length; k++) {\r\n                                    // We need to put the current selectors\r\n                                    // then join the last selector's elements on to the parents selectors\r\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                                    // add that to our new set of selectors\r\n                                    selectorsMultiplied.push(newSelectorPath);\r\n                                }\r\n                            }\r\n                        }\r\n                        // our new selectors has been multiplied, so reset the state\r\n                        newSelectors = selectorsMultiplied;\r\n                        currentElements = [];\r\n                    }\r\n                }\r\n                // if we have any elements left over (e.g. .a& .b == .b)\r\n                // add them on to all the current selectors\r\n                mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                for (i = 0; i < newSelectors.length; i++) {\r\n                    length = newSelectors[i].length;\r\n                    if (length > 0) {\r\n                        paths.push(newSelectors[i]);\r\n                        lastSelector = newSelectors[i][length - 1];\r\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n                    }\r\n                }\r\n                return hadParentSelector;\r\n            }\r\n            function deriveSelector(visibilityInfo, deriveFrom) {\r\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n                newSelector.copyVisibilityInfo(visibilityInfo);\r\n                return newSelector;\r\n            }\r\n            // joinSelector code follows\r\n            var i, newPaths, hadParentSelector;\r\n            newPaths = [];\r\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n            if (!hadParentSelector) {\r\n                if (context.length > 0) {\r\n                    newPaths = [];\r\n                    for (i = 0; i < context.length; i++) {\r\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                        concatenated.push(selector);\r\n                        newPaths.push(concatenated);\r\n                    }\r\n                }\r\n                else {\r\n                    newPaths = [[selector]];\r\n                }\r\n            }\r\n            for (i = 0; i < newPaths.length; i++) {\r\n                paths.push(newPaths[i]);\r\n            }\r\n        }\r\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n        var i;\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n        if (rules) {\r\n            if (Array.isArray(rules)) {\r\n                this.rules = rules;\r\n            }\r\n            else {\r\n                this.rules = [rules];\r\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n            }\r\n            for (i = 0; i < this.rules.length; i++) {\r\n                this.rules[i].allowImports = true;\r\n            }\r\n            this.setParent(this.rules, this);\r\n        }\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.debugInfo = debugInfo;\r\n        this.isRooted = isRooted || false;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    AtRule.prototype = Object.assign(new Node(), {\r\n        type: 'AtRule',\r\n        accept: function (visitor) {\r\n            var value = this.value, rules = this.rules;\r\n            if (rules) {\r\n                this.rules = visitor.visitArray(rules);\r\n            }\r\n            if (value) {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rules || !this.isCharset();\r\n        },\r\n        isCharset: function () {\r\n            return '@charset' === this.name;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var value = this.value, rules = this.rules;\r\n            output.add(this.name, this.fileInfo(), this.getIndex());\r\n            if (value) {\r\n                output.add(' ');\r\n                value.genCSS(context, output);\r\n            }\r\n            if (rules) {\r\n                this.outputRuleset(context, output, rules);\r\n            }\r\n            else {\r\n                output.add(';');\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\r\n            // media stored inside other atrule should not bubble over it\r\n            // backpup media bubbling information\r\n            mediaPathBackup = context.mediaPath;\r\n            mediaBlocksBackup = context.mediaBlocks;\r\n            // deleted media bubbling information\r\n            context.mediaPath = [];\r\n            context.mediaBlocks = [];\r\n            if (value) {\r\n                value = value.eval(context);\r\n            }\r\n            if (rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                rules = [rules[0].eval(context)];\r\n                rules[0].root = true;\r\n            }\r\n            // restore media bubbling information\r\n            context.mediaPath = mediaPathBackup;\r\n            context.mediaBlocks = mediaBlocksBackup;\r\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n        },\r\n        variable: function (name) {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.variable.call(this.rules[0], name);\r\n            }\r\n        },\r\n        find: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n            }\r\n        },\r\n        outputRuleset: function (context, output, rules) {\r\n            var ruleCnt = rules.length;\r\n            var i;\r\n            context.tabLevel = (context.tabLevel | 0) + 1;\r\n            // Compressed\r\n            if (context.compress) {\r\n                output.add('{');\r\n                for (i = 0; i < ruleCnt; i++) {\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add('}');\r\n                context.tabLevel--;\r\n                return;\r\n            }\r\n            // Non-compressed\r\n            var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + \"  \";\r\n            if (!ruleCnt) {\r\n                output.add(\" {\" + tabSetStr + \"}\");\r\n            }\r\n            else {\r\n                output.add(\" {\" + tabRuleStr);\r\n                rules[0].genCSS(context, output);\r\n                for (i = 1; i < ruleCnt; i++) {\r\n                    output.add(tabRuleStr);\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add(tabSetStr + \"}\");\r\n            }\r\n            context.tabLevel--;\r\n        }\r\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\r\n        this.ruleset = ruleset;\r\n        this.frames = frames;\r\n        this.setParent(this.ruleset, this);\r\n    };\r\n    DetachedRuleset.prototype = Object.assign(new Node(), {\r\n        type: 'DetachedRuleset',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            this.ruleset = visitor.visit(this.ruleset);\r\n        },\r\n        eval: function (context) {\r\n            var frames = this.frames || copyArray(context.frames);\r\n            return new DetachedRuleset(this.ruleset, frames);\r\n        },\r\n        callEval: function (context) {\r\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n        }\r\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\r\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n        if (backupUnit) {\r\n            this.backupUnit = backupUnit;\r\n        }\r\n        else if (numerator && numerator.length) {\r\n            this.backupUnit = numerator[0];\r\n        }\r\n    };\r\n    Unit.prototype = Object.assign(new Node(), {\r\n        type: 'Unit',\r\n        clone: function () {\r\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n        },\r\n        genCSS: function (context, output) {\r\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n            var strictUnits = context && context.strictUnits;\r\n            if (this.numerator.length === 1) {\r\n                output.add(this.numerator[0]); // the ideal situation\r\n            }\r\n            else if (!strictUnits && this.backupUnit) {\r\n                output.add(this.backupUnit);\r\n            }\r\n            else if (!strictUnits && this.denominator.length) {\r\n                output.add(this.denominator[0]);\r\n            }\r\n        },\r\n        toString: function () {\r\n            var i, returnStr = this.numerator.join('*');\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                returnStr += \"/\" + this.denominator[i];\r\n            }\r\n            return returnStr;\r\n        },\r\n        compare: function (other) {\r\n            return this.is(other.toString()) ? 0 : undefined;\r\n        },\r\n        is: function (unitString) {\r\n            return this.toString().toUpperCase() === unitString.toUpperCase();\r\n        },\r\n        isLength: function () {\r\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n        },\r\n        isEmpty: function () {\r\n            return this.numerator.length === 0 && this.denominator.length === 0;\r\n        },\r\n        isSingular: function () {\r\n            return this.numerator.length <= 1 && this.denominator.length === 0;\r\n        },\r\n        map: function (callback) {\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                this.numerator[i] = callback(this.numerator[i], false);\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                this.denominator[i] = callback(this.denominator[i], true);\r\n            }\r\n        },\r\n        usedUnits: function () {\r\n            var group;\r\n            var result = {};\r\n            var mapUnit;\r\n            var groupName;\r\n            mapUnit = function (atomicUnit) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n                    result[groupName] = atomicUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in unitConversions) {\r\n                if (unitConversions.hasOwnProperty(groupName)) {\r\n                    group = unitConversions[groupName];\r\n                    this.map(mapUnit);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        cancel: function () {\r\n            var counter = {};\r\n            var atomicUnit;\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                atomicUnit = this.numerator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                atomicUnit = this.denominator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n            }\r\n            this.numerator = [];\r\n            this.denominator = [];\r\n            for (atomicUnit in counter) {\r\n                if (counter.hasOwnProperty(atomicUnit)) {\r\n                    var count = counter[atomicUnit];\r\n                    if (count > 0) {\r\n                        for (i = 0; i < count; i++) {\r\n                            this.numerator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                    else if (count < 0) {\r\n                        for (i = 0; i < -count; i++) {\r\n                            this.denominator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.numerator.sort();\r\n            this.denominator.sort();\r\n        }\r\n    });\n\n    //\r\n    // A number with a unit\r\n    //\r\n    var Dimension = function (value, unit) {\r\n        this.value = parseFloat(value);\r\n        if (isNaN(this.value)) {\r\n            throw new Error('Dimension is not a number.');\r\n        }\r\n        this.unit = (unit && unit instanceof Unit) ? unit :\r\n            new Unit(unit ? [unit] : undefined);\r\n        this.setParent(this.unit, this);\r\n    };\r\n    Dimension.prototype = Object.assign(new Node(), {\r\n        type: 'Dimension',\r\n        accept: function (visitor) {\r\n            this.unit = visitor.visit(this.unit);\r\n        },\r\n        eval: function (context) {\r\n            return this;\r\n        },\r\n        toColor: function () {\r\n            return new Color([this.value, this.value, this.value]);\r\n        },\r\n        genCSS: function (context, output) {\r\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n            }\r\n            var value = this.fround(context, this.value);\r\n            var strValue = String(value);\r\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n                // would be output 1e-6 etc.\r\n                strValue = value.toFixed(20).replace(/0+$/, '');\r\n            }\r\n            if (context && context.compress) {\r\n                // Zero values doesn't need a unit\r\n                if (value === 0 && this.unit.isLength()) {\r\n                    output.add(strValue);\r\n                    return;\r\n                }\r\n                // Float values doesn't need a leading zero\r\n                if (value > 0 && value < 1) {\r\n                    strValue = (strValue).substr(1);\r\n                }\r\n            }\r\n            output.add(strValue);\r\n            this.unit.genCSS(context, output);\r\n        },\r\n        // In an operation between two Dimensions,\r\n        // we default to the first Dimension's unit,\r\n        // so `1px + 2` will yield `3px`.\r\n        operate: function (context, op, other) {\r\n            /* jshint noempty:false */\r\n            var value = this._operate(context, op, this.value, other.value);\r\n            var unit = this.unit.clone();\r\n            if (op === '+' || op === '-') {\r\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n                    unit = other.unit.clone();\r\n                    if (this.unit.backupUnit) {\r\n                        unit.backupUnit = this.unit.backupUnit;\r\n                    }\r\n                }\r\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n                else {\r\n                    other = other.convertTo(this.unit.usedUnits());\r\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                        throw new Error(\"Incompatible units. Change the units or use the unit function. \"\r\n                            + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n                    }\r\n                    value = this._operate(context, op, this.value, other.value);\r\n                }\r\n            }\r\n            else if (op === '*') {\r\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n                unit.cancel();\r\n            }\r\n            else if (op === '/') {\r\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n                unit.cancel();\r\n            }\r\n            return new Dimension(value, unit);\r\n        },\r\n        compare: function (other) {\r\n            var a, b;\r\n            if (!(other instanceof Dimension)) {\r\n                return undefined;\r\n            }\r\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n                a = this;\r\n                b = other;\r\n            }\r\n            else {\r\n                a = this.unify();\r\n                b = other.unify();\r\n                if (a.unit.compare(b.unit) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return Node.numericCompare(a.value, b.value);\r\n        },\r\n        unify: function () {\r\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n        },\r\n        convertTo: function (conversions) {\r\n            var value = this.value;\r\n            var unit = this.unit.clone();\r\n            var i;\r\n            var groupName;\r\n            var group;\r\n            var targetUnit;\r\n            var derivedConversions = {};\r\n            var applyUnit;\r\n            if (typeof conversions === 'string') {\r\n                for (i in unitConversions) {\r\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                        derivedConversions = {};\r\n                        derivedConversions[i] = conversions;\r\n                    }\r\n                }\r\n                conversions = derivedConversions;\r\n            }\r\n            applyUnit = function (atomicUnit, denominator) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit)) {\r\n                    if (denominator) {\r\n                        value = value / (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    else {\r\n                        value = value * (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    return targetUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in conversions) {\r\n                if (conversions.hasOwnProperty(groupName)) {\r\n                    targetUnit = conversions[groupName];\r\n                    group = unitConversions[groupName];\r\n                    unit.map(applyUnit);\r\n                }\r\n            }\r\n            unit.cancel();\r\n            return new Dimension(value, unit);\r\n        }\r\n    });\n\n    var MATH = Math$1;\r\n    var Operation = function (op, operands, isSpaced) {\r\n        this.op = op.trim();\r\n        this.operands = operands;\r\n        this.isSpaced = isSpaced;\r\n    };\r\n    Operation.prototype = Object.assign(new Node(), {\r\n        type: 'Operation',\r\n        accept: function (visitor) {\r\n            this.operands = visitor.visitArray(this.operands);\r\n        },\r\n        eval: function (context) {\r\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\r\n            if (context.isMathOn(this.op)) {\r\n                op = this.op === './' ? '/' : this.op;\r\n                if (a instanceof Dimension && b instanceof Color) {\r\n                    a = a.toColor();\r\n                }\r\n                if (b instanceof Dimension && a instanceof Color) {\r\n                    b = b.toColor();\r\n                }\r\n                if (!a.operate || !b.operate) {\r\n                    if ((a instanceof Operation || b instanceof Operation)\r\n                        && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\r\n                        return new Operation(this.op, [a, b], this.isSpaced);\r\n                    }\r\n                    throw { type: 'Operation',\r\n                        message: 'Operation on an invalid type' };\r\n                }\r\n                return a.operate(context, op, b);\r\n            }\r\n            else {\r\n                return new Operation(this.op, [a, b], this.isSpaced);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.operands[0].genCSS(context, output);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            output.add(this.op);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            this.operands[1].genCSS(context, output);\r\n        }\r\n    });\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArray(to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || from);\r\n    }\n\n    var Expression = function (value, noSpacing) {\r\n        this.value = value;\r\n        this.noSpacing = noSpacing;\r\n        if (!value) {\r\n            throw new Error('Expression requires an array parameter');\r\n        }\r\n    };\r\n    Expression.prototype = Object.assign(new Node(), {\r\n        type: 'Expression',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visitArray(this.value);\r\n        },\r\n        eval: function (context) {\r\n            var returnValue;\r\n            var mathOn = context.isMathOn();\r\n            var inParenthesis = this.parens;\r\n            var doubleParen = false;\r\n            if (inParenthesis) {\r\n                context.inParenthesis();\r\n            }\r\n            if (this.value.length > 1) {\r\n                returnValue = new Expression(this.value.map(function (e) {\r\n                    if (!e.eval) {\r\n                        return e;\r\n                    }\r\n                    return e.eval(context);\r\n                }), this.noSpacing);\r\n            }\r\n            else if (this.value.length === 1) {\r\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n                    doubleParen = true;\r\n                }\r\n                returnValue = this.value[0].eval(context);\r\n            }\r\n            else {\r\n                returnValue = this;\r\n            }\r\n            if (inParenthesis) {\r\n                context.outOfParenthesis();\r\n            }\r\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n                && (!(returnValue instanceof Dimension))) {\r\n                returnValue = new Paren(returnValue);\r\n            }\r\n            return returnValue;\r\n        },\r\n        genCSS: function (context, output) {\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (!this.noSpacing && i + 1 < this.value.length) {\r\n                    output.add(' ');\r\n                }\r\n            }\r\n        },\r\n        throwAwayComments: function () {\r\n            this.value = this.value.filter(function (v) {\r\n                return !(v instanceof Comment);\r\n            });\r\n        }\r\n    });\n\n    var functionCaller = /** @class */ (function () {\r\n        function functionCaller(name, context, index, currentFileInfo) {\r\n            this.name = name.toLowerCase();\r\n            this.index = index;\r\n            this.context = context;\r\n            this.currentFileInfo = currentFileInfo;\r\n            this.func = context.frames[0].functionRegistry.get(this.name);\r\n        }\r\n        functionCaller.prototype.isValid = function () {\r\n            return Boolean(this.func);\r\n        };\r\n        functionCaller.prototype.call = function (args) {\r\n            var _this = this;\r\n            if (!(Array.isArray(args))) {\r\n                args = [args];\r\n            }\r\n            var evalArgs = this.func.evalArgs;\r\n            if (evalArgs !== false) {\r\n                args = args.map(function (a) { return a.eval(_this.context); });\r\n            }\r\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\r\n            // This code is terrible and should be replaced as per this issue...\r\n            // https://github.com/less/less.js/issues/2477\r\n            args = args\r\n                .filter(commentFilter)\r\n                .map(function (item) {\r\n                if (item.type === 'Expression') {\r\n                    var subNodes = item.value.filter(commentFilter);\r\n                    if (subNodes.length === 1) {\r\n                        // https://github.com/less/less.js/issues/3616\r\n                        if (item.parens && subNodes[0].op === '/') {\r\n                            return item;\r\n                        }\r\n                        return subNodes[0];\r\n                    }\r\n                    else {\r\n                        return new Expression(subNodes);\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            if (evalArgs === false) {\r\n                return this.func.apply(this, __spreadArray([this.context], args));\r\n            }\r\n            return this.func.apply(this, args);\r\n        };\r\n        return functionCaller;\r\n    }());\n\n    //\r\n    // A function call node.\r\n    //\r\n    var Call = function (name, args, index, currentFileInfo) {\r\n        this.name = name;\r\n        this.args = args;\r\n        this.calc = name === 'calc';\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Call.prototype = Object.assign(new Node(), {\r\n        type: 'Call',\r\n        accept: function (visitor) {\r\n            if (this.args) {\r\n                this.args = visitor.visitArray(this.args);\r\n            }\r\n        },\r\n        //\r\n        // When evaluating a function call,\r\n        // we either find the function in the functionRegistry,\r\n        // in which case we call it, passing the  evaluated arguments,\r\n        // if this returns null or we cannot find the function, we\r\n        // simply print it out as it appeared originally [2].\r\n        //\r\n        // The reason why we evaluate the arguments, is in the case where\r\n        // we try to pass a variable to a function, like: `saturate(@color)`.\r\n        // The function should receive the value, not the variable.\r\n        //\r\n        eval: function (context) {\r\n            var _this = this;\r\n            /**\r\n             * Turn off math for calc(), and switch back on for evaluating nested functions\r\n             */\r\n            var currentMathContext = context.mathOn;\r\n            context.mathOn = !this.calc;\r\n            if (this.calc || context.inCalc) {\r\n                context.enterCalc();\r\n            }\r\n            var exitCalc = function () {\r\n                if (_this.calc || context.inCalc) {\r\n                    context.exitCalc();\r\n                }\r\n                context.mathOn = currentMathContext;\r\n            };\r\n            var result;\r\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n            if (funcCaller.isValid()) {\r\n                try {\r\n                    result = funcCaller.call(this.args);\r\n                    exitCalc();\r\n                }\r\n                catch (e) {\r\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                        throw e;\r\n                    }\r\n                    throw {\r\n                        type: e.type || 'Runtime',\r\n                        message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                        index: this.getIndex(),\r\n                        filename: this.fileInfo().filename,\r\n                        line: e.lineNumber,\r\n                        column: e.columnNumber\r\n                    };\r\n                }\r\n            }\r\n            if (result !== null && result !== undefined) {\r\n                // Results that that are not nodes are cast as Anonymous nodes\r\n                // Falsy values or booleans are returned as empty nodes\r\n                if (!(result instanceof Node)) {\r\n                    if (!result || result === true) {\r\n                        result = new Anonymous(null);\r\n                    }\r\n                    else {\r\n                        result = new Anonymous(result.toString());\r\n                    }\r\n                }\r\n                result._index = this._index;\r\n                result._fileInfo = this._fileInfo;\r\n                return result;\r\n            }\r\n            var args = this.args.map(function (a) { return a.eval(context); });\r\n            exitCalc();\r\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n            for (var i = 0; i < this.args.length; i++) {\r\n                this.args[i].genCSS(context, output);\r\n                if (i + 1 < this.args.length) {\r\n                    output.add(', ');\r\n                }\r\n            }\r\n            output.add(')');\r\n        }\r\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Variable.prototype = Object.assign(new Node(), {\r\n        type: 'Variable',\r\n        eval: function (context) {\r\n            var variable, name = this.name;\r\n            if (name.indexOf('@@') === 0) {\r\n                name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n            }\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive variable definition for \" + name,\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            variable = this.find(context.frames, function (frame) {\r\n                var v = frame.variable(name);\r\n                if (v) {\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                    if (context.inCalc) {\r\n                        return (new Call('_SELF', [v.value])).eval(context);\r\n                    }\r\n                    else {\r\n                        return v.value.eval(context);\r\n                    }\r\n                }\r\n            });\r\n            if (variable) {\r\n                this.evaluating = false;\r\n                return variable;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"variable \" + name + \" is undefined\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Property = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Property.prototype = Object.assign(new Node(), {\r\n        type: 'Property',\r\n        eval: function (context) {\r\n            var property;\r\n            var name = this.name;\r\n            // TODO: shorten this reference\r\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive property reference for \" + name,\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            property = this.find(context.frames, function (frame) {\r\n                var v;\r\n                var vArr = frame.property(name);\r\n                if (vArr) {\r\n                    for (var i = 0; i < vArr.length; i++) {\r\n                        v = vArr[i];\r\n                        vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n                    }\r\n                    mergeRules(vArr);\r\n                    v = vArr[vArr.length - 1];\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    v = v.value.eval(context);\r\n                    return v;\r\n                }\r\n            });\r\n            if (property) {\r\n                this.evaluating = false;\r\n                return property;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"Property '\" + name + \"' is undefined\",\r\n                    filename: this.currentFileInfo.filename,\r\n                    index: this.index };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Attribute = function (key, op, value) {\r\n        this.key = key;\r\n        this.op = op;\r\n        this.value = value;\r\n    };\r\n    Attribute.prototype = Object.assign(new Node(), {\r\n        type: 'Attribute',\r\n        eval: function (context) {\r\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context) {\r\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n            if (this.op) {\r\n                value += this.op;\r\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n            }\r\n            return \"[\" + value + \"]\";\r\n        }\r\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n        this.escaped = (escaped == null) ? true : escaped;\r\n        this.value = content || '';\r\n        this.quote = str.charAt(0);\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n        this.allowRoot = escaped;\r\n    };\r\n    Quoted.prototype = Object.assign(new Node(), {\r\n        type: 'Quoted',\r\n        genCSS: function (context, output) {\r\n            if (!this.escaped) {\r\n                output.add(this.quote, this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n            if (!this.escaped) {\r\n                output.add(this.quote);\r\n            }\r\n        },\r\n        containsVariables: function () {\r\n            return this.value.match(this.variableRegex);\r\n        },\r\n        eval: function (context) {\r\n            var that = this;\r\n            var value = this.value;\r\n            var variableReplacement = function (_, name) {\r\n                var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            var propertyReplacement = function (_, name) {\r\n                var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            function iterativeReplace(value, regexp, replacementFnc) {\r\n                var evaluatedValue = value;\r\n                do {\r\n                    value = evaluatedValue.toString();\r\n                    evaluatedValue = value.replace(regexp, replacementFnc);\r\n                } while (value !== evaluatedValue);\r\n                return evaluatedValue;\r\n            }\r\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n        },\r\n        compare: function (other) {\r\n            // when comparing quoted strings allow the quote to differ\r\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n                return Node.numericCompare(this.value, other.value);\r\n            }\r\n            else {\r\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n            }\r\n        }\r\n    });\n\n    function escapePath(path) {\r\n        return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n    }\r\n    var URL = function (val, index, currentFileInfo, isEvald) {\r\n        this.value = val;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.isEvald = isEvald;\r\n    };\r\n    URL.prototype = Object.assign(new Node(), {\r\n        type: 'Url',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('url(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            var val = this.value.eval(context);\r\n            var rootpath;\r\n            if (!this.isEvald) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n                if (typeof rootpath === 'string' &&\r\n                    typeof val.value === 'string' &&\r\n                    context.pathRequiresRewrite(val.value)) {\r\n                    if (!val.quote) {\r\n                        rootpath = escapePath(rootpath);\r\n                    }\r\n                    val.value = context.rewritePath(val.value, rootpath);\r\n                }\r\n                else {\r\n                    val.value = context.normalizePath(val.value);\r\n                }\r\n                // Add url args if enabled\r\n                if (context.urlArgs) {\r\n                    if (!val.value.match(/^\\s*data:/)) {\r\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                        var urlArgs = delimiter + context.urlArgs;\r\n                        if (val.value.indexOf('#') !== -1) {\r\n                            val.value = val.value.replace('#', urlArgs + \"#\");\r\n                        }\r\n                        else {\r\n                            val.value += urlArgs;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n        }\r\n    });\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Media.prototype = Object.assign(new AtRule(), {\r\n        type: 'Media',\r\n        isRulesetLike: function () {\r\n            return true;\r\n        },\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            if (this.rules) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('@media ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        },\r\n        eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        },\r\n        evalTop: function (context) {\r\n            var result = this;\r\n            // Render all dependent Media blocks.\r\n            if (context.mediaBlocks.length > 1) {\r\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n                result = new Ruleset(selectors, context.mediaBlocks);\r\n                result.multiMedia = true;\r\n                result.copyVisibilityInfo(this.visibilityInfo());\r\n                this.setParent(result, this);\r\n            }\r\n            delete context.mediaBlocks;\r\n            delete context.mediaPath;\r\n            return result;\r\n        },\r\n        evalNested: function (context) {\r\n            var i;\r\n            var value;\r\n            var path = context.mediaPath.concat([this]);\r\n            // Extract the media-query conditions separated with `,` (OR).\r\n            for (i = 0; i < path.length; i++) {\r\n                value = path[i].features instanceof Value ?\r\n                    path[i].features.value : path[i].features;\r\n                path[i] = Array.isArray(value) ? value : [value];\r\n            }\r\n            // Trace all permutations to generate the resulting media-query.\r\n            //\r\n            // (a, b and c) with nested (d, e) ->\r\n            //    a and d\r\n            //    a and e\r\n            //    b and c and d\r\n            //    b and c and e\r\n            this.features = new Value(this.permute(path).map(function (path) {\r\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n                for (i = path.length - 1; i > 0; i--) {\r\n                    path.splice(i, 0, new Anonymous('and'));\r\n                }\r\n                return new Expression(path);\r\n            }));\r\n            this.setParent(this.features, this);\r\n            // Fake a tree-node that doesn't output anything.\r\n            return new Ruleset([], []);\r\n        },\r\n        permute: function (arr) {\r\n            if (arr.length === 0) {\r\n                return [];\r\n            }\r\n            else if (arr.length === 1) {\r\n                return arr[0];\r\n            }\r\n            else {\r\n                var result = [];\r\n                var rest = this.permute(arr.slice(1));\r\n                for (var i = 0; i < rest.length; i++) {\r\n                    for (var j = 0; j < arr[0].length; j++) {\r\n                        result.push([arr[0][j]].concat(rest[i]));\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        bubbleSelectors: function (selectors) {\r\n            if (!selectors) {\r\n                return;\r\n            }\r\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n            this.setParent(this.rules, this);\r\n        }\r\n    });\n\n    //\r\n    // CSS @import node\r\n    //\r\n    // The general strategy here is that we don't want to wait\r\n    // for the parsing to be completed, before we start importing\r\n    // the file. That's because in the context of a browser,\r\n    // most of the time will be spent waiting for the server to respond.\r\n    //\r\n    // On creation, we push the import path to our import queue, though\r\n    // `import,push`, we also pass it a callback, which it'll call once\r\n    // the file has been fetched, and parsed.\r\n    //\r\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n        this.options = options;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.path = path;\r\n        this.features = features;\r\n        this.allowRoot = true;\r\n        if (this.options.less !== undefined || this.options.inline) {\r\n            this.css = !this.options.less || this.options.inline;\r\n        }\r\n        else {\r\n            var pathValue = this.getPath();\r\n            if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\r\n                this.css = true;\r\n            }\r\n        }\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.path, this);\r\n    };\r\n    Import.prototype = Object.assign(new Node(), {\r\n        type: 'Import',\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            this.path = visitor.visit(this.path);\r\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n                this.root = visitor.visit(this.root);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            if (this.css && this.path._fileInfo.reference === undefined) {\r\n                output.add('@import ', this._fileInfo, this._index);\r\n                this.path.genCSS(context, output);\r\n                if (this.features) {\r\n                    output.add(' ');\r\n                    this.features.genCSS(context, output);\r\n                }\r\n                output.add(';');\r\n            }\r\n        },\r\n        getPath: function () {\r\n            return (this.path instanceof URL) ?\r\n                this.path.value.value : this.path.value;\r\n        },\r\n        isVariableImport: function () {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            if (path instanceof Quoted) {\r\n                return path.containsVariables();\r\n            }\r\n            return true;\r\n        },\r\n        evalForImport: function (context) {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n        },\r\n        evalPath: function (context) {\r\n            var path = this.path.eval(context);\r\n            var fileInfo = this._fileInfo;\r\n            if (!(path instanceof URL)) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                var pathValue = path.value;\r\n                if (fileInfo &&\r\n                    pathValue &&\r\n                    context.pathRequiresRewrite(pathValue)) {\r\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n                }\r\n                else {\r\n                    path.value = context.normalizePath(path.value);\r\n                }\r\n            }\r\n            return path;\r\n        },\r\n        eval: function (context) {\r\n            var result = this.doEval(context);\r\n            if (this.options.reference || this.blocksVisibility()) {\r\n                if (result.length || result.length === 0) {\r\n                    result.forEach(function (node) {\r\n                        node.addVisibilityBlock();\r\n                    });\r\n                }\r\n                else {\r\n                    result.addVisibilityBlock();\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        doEval: function (context) {\r\n            var ruleset;\r\n            var registry;\r\n            var features = this.features && this.features.eval(context);\r\n            if (this.options.isPlugin) {\r\n                if (this.root && this.root.eval) {\r\n                    try {\r\n                        this.root.eval(context);\r\n                    }\r\n                    catch (e) {\r\n                        e.message = 'Plugin error during evaluation';\r\n                        throw new LessError(e, this.root.imports, this.root.filename);\r\n                    }\r\n                }\r\n                registry = context.frames[0] && context.frames[0].functionRegistry;\r\n                if (registry && this.root && this.root.functions) {\r\n                    registry.addMultiple(this.root.functions);\r\n                }\r\n                return [];\r\n            }\r\n            if (this.skip) {\r\n                if (typeof this.skip === 'function') {\r\n                    this.skip = this.skip();\r\n                }\r\n                if (this.skip) {\r\n                    return [];\r\n                }\r\n            }\r\n            if (this.options.inline) {\r\n                var contents = new Anonymous(this.root, 0, {\r\n                    filename: this.importedFilename,\r\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\r\n                }, true, true);\r\n                return this.features ? new Media([contents], this.features.value) : [contents];\r\n            }\r\n            else if (this.css) {\r\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n                if (!newImport.css && this.error) {\r\n                    throw this.error;\r\n                }\r\n                return newImport;\r\n            }\r\n            else if (this.root) {\r\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n                ruleset.evalImports(context);\r\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    });\n\n    var JsEvalNode = function () { };\r\n    JsEvalNode.prototype = Object.assign(new Node(), {\r\n        evaluateJavaScript: function (expression, context) {\r\n            var result;\r\n            var that = this;\r\n            var evalContext = {};\r\n            if (!context.javascriptEnabled) {\r\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\r\n                return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\r\n            });\r\n            try {\r\n                expression = new Function(\"return (\" + expression + \")\");\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            var variables = context.frames[0].variables();\r\n            for (var k in variables) {\r\n                if (variables.hasOwnProperty(k)) {\r\n                    /* jshint loopfunc:true */\r\n                    evalContext[k.slice(1)] = {\r\n                        value: variables[k].value,\r\n                        toJS: function () {\r\n                            return this.value.eval(context).toCSS();\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            try {\r\n                result = expression.call(evalContext);\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            return result;\r\n        },\r\n        jsify: function (obj) {\r\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n                return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n            }\r\n            else {\r\n                return obj.toCSS();\r\n            }\r\n        }\r\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n        this.escaped = escaped;\r\n        this.expression = string;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\r\n        type: 'JavaScript',\r\n        eval: function (context) {\r\n            var result = this.evaluateJavaScript(this.expression, context);\r\n            var type = typeof result;\r\n            if (type === 'number' && !isNaN(result)) {\r\n                return new Dimension(result);\r\n            }\r\n            else if (type === 'string') {\r\n                return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n            }\r\n            else if (Array.isArray(result)) {\r\n                return new Anonymous(result.join(', '));\r\n            }\r\n            else {\r\n                return new Anonymous(result);\r\n            }\r\n        }\r\n    });\n\n    var Assignment = function (key, val) {\r\n        this.key = key;\r\n        this.value = val;\r\n    };\r\n    Assignment.prototype = Object.assign(new Node(), {\r\n        type: 'Assignment',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.eval) {\r\n                return new Assignment(this.key, this.value.eval(context));\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.key + \"=\");\r\n            if (this.value.genCSS) {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            else {\r\n                output.add(this.value);\r\n            }\r\n        }\r\n    });\n\n    var Condition = function (op, l, r, i, negate) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n        this.negate = negate;\r\n    };\r\n    Condition.prototype = Object.assign(new Node(), {\r\n        type: 'Condition',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.rvalue = visitor.visit(this.rvalue);\r\n        },\r\n        eval: function (context) {\r\n            var result = (function (op, a, b) {\r\n                switch (op) {\r\n                    case 'and': return a && b;\r\n                    case 'or': return a || b;\r\n                    default:\r\n                        switch (Node.compare(a, b)) {\r\n                            case -1:\r\n                                return op === '<' || op === '=<' || op === '<=';\r\n                            case 0:\r\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                            case 1:\r\n                                return op === '>' || op === '>=';\r\n                            default:\r\n                                return false;\r\n                        }\r\n                }\r\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n            return this.negate ? !result : result;\r\n        }\r\n    });\n\n    var UnicodeDescriptor = function (value) {\r\n        this.value = value;\r\n    };\r\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\r\n        type: 'UnicodeDescriptor'\r\n    });\n\n    var Negative = function (node) {\r\n        this.value = node;\r\n    };\r\n    Negative.prototype = Object.assign(new Node(), {\r\n        type: 'Negative',\r\n        genCSS: function (context, output) {\r\n            output.add('-');\r\n            this.value.genCSS(context, output);\r\n        },\r\n        eval: function (context) {\r\n            if (context.isMathOn()) {\r\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n            }\r\n            return new Negative(this.value.eval(context));\r\n        }\r\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n        this.selector = selector;\r\n        this.option = option;\r\n        this.object_id = Extend.next_id++;\r\n        this.parent_ids = [this.object_id];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        switch (option) {\r\n            case 'all':\r\n                this.allowBefore = true;\r\n                this.allowAfter = true;\r\n                break;\r\n            default:\r\n                this.allowBefore = false;\r\n                this.allowAfter = false;\r\n                break;\r\n        }\r\n        this.setParent(this.selector, this);\r\n    };\r\n    Extend.prototype = Object.assign(new Node(), {\r\n        type: 'Extend',\r\n        accept: function (visitor) {\r\n            this.selector = visitor.visit(this.selector);\r\n        },\r\n        eval: function (context) {\r\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function (context) {\r\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // it concatenates (joins) all selectors in selector array\r\n        findSelfSelectors: function (selectors) {\r\n            var selfElements = [], i, selectorElements;\r\n            for (i = 0; i < selectors.length; i++) {\r\n                selectorElements = selectors[i].elements;\r\n                // duplicate the logic in genCSS function inside the selector node.\r\n                // future TODO - move both logics into the selector joiner visitor\r\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n                    selectorElements[0].combinator.value = ' ';\r\n                }\r\n                selfElements = selfElements.concat(selectors[i].elements);\r\n            }\r\n            this.selfSelectors = [new Selector(selfElements)];\r\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n        }\r\n    });\r\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\r\n        this.variable = variable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    VariableCall.prototype = Object.assign(new Node(), {\r\n        type: 'VariableCall',\r\n        eval: function (context) {\r\n            var rules;\r\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n            var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n            if (!detachedRuleset.ruleset) {\r\n                if (detachedRuleset.rules) {\r\n                    rules = detachedRuleset;\r\n                }\r\n                else if (Array.isArray(detachedRuleset)) {\r\n                    rules = new Ruleset('', detachedRuleset);\r\n                }\r\n                else if (Array.isArray(detachedRuleset.value)) {\r\n                    rules = new Ruleset('', detachedRuleset.value);\r\n                }\r\n                else {\r\n                    throw error;\r\n                }\r\n                detachedRuleset = new DetachedRuleset(rules);\r\n            }\r\n            if (detachedRuleset.ruleset) {\r\n                return detachedRuleset.callEval(context);\r\n            }\r\n            throw error;\r\n        }\r\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n        this.value = ruleCall;\r\n        this.lookups = lookups;\r\n        this._index = index;\r\n        this._fileInfo = fileInfo;\r\n    };\r\n    NamespaceValue.prototype = Object.assign(new Node(), {\r\n        type: 'NamespaceValue',\r\n        eval: function (context) {\r\n            var i, name, rules = this.value.eval(context);\r\n            for (i = 0; i < this.lookups.length; i++) {\r\n                name = this.lookups[i];\r\n                /**\r\n                 * Eval'd DRs return rulesets.\r\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n                 * We need to do this because of late parsing of values\r\n                 */\r\n                if (Array.isArray(rules)) {\r\n                    rules = new Ruleset([new Selector()], rules);\r\n                }\r\n                if (name === '') {\r\n                    rules = rules.lastDeclaration();\r\n                }\r\n                else if (name.charAt(0) === '@') {\r\n                    if (name.charAt(1) === '@') {\r\n                        name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    if (rules.variables) {\r\n                        rules = rules.variable(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"variable \" + name + \" not found\",\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                }\r\n                else {\r\n                    if (name.substring(0, 2) === '$@') {\r\n                        name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    else {\r\n                        name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n                    }\r\n                    if (rules.properties) {\r\n                        rules = rules.property(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"property \\\"\" + name.substr(1) + \"\\\" not found\",\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                    // Properties are an array of values, since a ruleset can have multiple props.\r\n                    // We pick the last one (the \"cascaded\" value)\r\n                    rules = rules[rules.length - 1];\r\n                }\r\n                if (rules.value) {\r\n                    rules = rules.eval(context).value;\r\n                }\r\n                if (rules.ruleset) {\r\n                    rules = rules.ruleset.eval(context);\r\n                }\r\n            }\r\n            return rules;\r\n        }\r\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n        this.name = name || 'anonymous mixin';\r\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n        this.params = params;\r\n        this.condition = condition;\r\n        this.variadic = variadic;\r\n        this.arity = params.length;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        var optionalParameters = [];\r\n        this.required = params.reduce(function (count, p) {\r\n            if (!p.name || (p.name && !p.value)) {\r\n                return count + 1;\r\n            }\r\n            else {\r\n                optionalParameters.push(p.name);\r\n                return count;\r\n            }\r\n        }, 0);\r\n        this.optionalParameters = optionalParameters;\r\n        this.frames = frames;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    Definition.prototype = Object.assign(new Ruleset(), {\r\n        type: 'MixinDefinition',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            if (this.params && this.params.length) {\r\n                this.params = visitor.visitArray(this.params);\r\n            }\r\n            this.rules = visitor.visitArray(this.rules);\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\r\n            /* jshint boss:true */\r\n            var frame = new Ruleset(null, null);\r\n            var varargs;\r\n            var arg;\r\n            var params = copyArray(this.params);\r\n            var i;\r\n            var j;\r\n            var val;\r\n            var name;\r\n            var isNamedFound;\r\n            var argIndex;\r\n            var argsLength = 0;\r\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n            }\r\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n            if (args) {\r\n                args = copyArray(args);\r\n                argsLength = args.length;\r\n                for (i = 0; i < argsLength; i++) {\r\n                    arg = args[i];\r\n                    if (name = (arg && arg.name)) {\r\n                        isNamedFound = false;\r\n                        for (j = 0; j < params.length; j++) {\r\n                            if (!evaldArguments[j] && name === params[j].name) {\r\n                                evaldArguments[j] = arg.value.eval(context);\r\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                                isNamedFound = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isNamedFound) {\r\n                            args.splice(i, 1);\r\n                            i--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            argIndex = 0;\r\n            for (i = 0; i < params.length; i++) {\r\n                if (evaldArguments[i]) {\r\n                    continue;\r\n                }\r\n                arg = args && args[argIndex];\r\n                if (name = params[i].name) {\r\n                    if (params[i].variadic) {\r\n                        varargs = [];\r\n                        for (j = argIndex; j < argsLength; j++) {\r\n                            varargs.push(args[j].value.eval(context));\r\n                        }\r\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n                    }\r\n                    else {\r\n                        val = arg && arg.value;\r\n                        if (val) {\r\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                            if (Array.isArray(val)) {\r\n                                val = new DetachedRuleset(new Ruleset('', val));\r\n                            }\r\n                            else {\r\n                                val = val.eval(context);\r\n                            }\r\n                        }\r\n                        else if (params[i].value) {\r\n                            val = params[i].value.eval(mixinEnv);\r\n                            frame.resetCache();\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                        }\r\n                        frame.prependRule(new Declaration(name, val));\r\n                        evaldArguments[i] = val;\r\n                    }\r\n                }\r\n                if (params[i].variadic && args) {\r\n                    for (j = argIndex; j < argsLength; j++) {\r\n                        evaldArguments[j] = args[j].value.eval(context);\r\n                    }\r\n                }\r\n                argIndex++;\r\n            }\r\n            return frame;\r\n        },\r\n        makeImportant: function () {\r\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant(true);\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            });\r\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n            return result;\r\n        },\r\n        eval: function (context) {\r\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n        },\r\n        evalCall: function (context, args, important) {\r\n            var _arguments = [];\r\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n            var rules;\r\n            var ruleset;\r\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n            rules = copyArray(this.rules);\r\n            ruleset = new Ruleset(null, rules);\r\n            ruleset.originalRuleset = this;\r\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n            if (important) {\r\n                ruleset = ruleset.makeImportant();\r\n            }\r\n            return ruleset;\r\n        },\r\n        matchCondition: function (args, context) {\r\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n                .concat(this.frames || []) // the parent namespace/mixin frames\r\n                .concat(context.frames)))) { // the current environment frames\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        matchArgs: function (args, context) {\r\n            var allArgsCnt = (args && args.length) || 0;\r\n            var len;\r\n            var optionalParameters = this.optionalParameters;\r\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n                if (optionalParameters.indexOf(p.name) < 0) {\r\n                    return count + 1;\r\n                }\r\n                else {\r\n                    return count;\r\n                }\r\n            }, 0);\r\n            if (!this.variadic) {\r\n                if (requiredArgsCnt < this.required) {\r\n                    return false;\r\n                }\r\n                if (allArgsCnt > this.params.length) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (requiredArgsCnt < (this.required - 1)) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check patterns\r\n            len = Math.min(requiredArgsCnt, this.arity);\r\n            for (var i = 0; i < len; i++) {\r\n                if (!this.params[i].name && !this.params[i].variadic) {\r\n                    if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n        this.selector = new Selector(elements);\r\n        this.arguments = args || [];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.important = important;\r\n        this.allowRoot = true;\r\n        this.setParent(this.selector, this);\r\n    };\r\n    MixinCall.prototype = Object.assign(new Node(), {\r\n        type: 'MixinCall',\r\n        accept: function (visitor) {\r\n            if (this.selector) {\r\n                this.selector = visitor.visit(this.selector);\r\n            }\r\n            if (this.arguments.length) {\r\n                this.arguments = visitor.visitArray(this.arguments);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mixins;\r\n            var mixin;\r\n            var mixinPath;\r\n            var args = [];\r\n            var arg;\r\n            var argValue;\r\n            var rules = [];\r\n            var match = false;\r\n            var i;\r\n            var m;\r\n            var f;\r\n            var isRecursive;\r\n            var isOneFound;\r\n            var candidates = [];\r\n            var candidate;\r\n            var conditionResult = [];\r\n            var defaultResult;\r\n            var defFalseEitherCase = -1;\r\n            var defNone = 0;\r\n            var defTrue = 1;\r\n            var defFalse = 2;\r\n            var count;\r\n            var originalRuleset;\r\n            var noArgumentsFilter;\r\n            this.selector = this.selector.eval(context);\r\n            function calcDefGroup(mixin, mixinPath) {\r\n                var f, p, namespace;\r\n                for (f = 0; f < 2; f++) {\r\n                    conditionResult[f] = true;\r\n                    defaultFunc.value(f);\r\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                        namespace = mixinPath[p];\r\n                        if (namespace.matchCondition) {\r\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                        }\r\n                    }\r\n                    if (mixin.matchCondition) {\r\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n                    }\r\n                }\r\n                if (conditionResult[0] || conditionResult[1]) {\r\n                    if (conditionResult[0] != conditionResult[1]) {\r\n                        return conditionResult[1] ?\r\n                            defTrue : defFalse;\r\n                    }\r\n                    return defNone;\r\n                }\r\n                return defFalseEitherCase;\r\n            }\r\n            for (i = 0; i < this.arguments.length; i++) {\r\n                arg = this.arguments[i];\r\n                argValue = arg.value.eval(context);\r\n                if (arg.expand && Array.isArray(argValue.value)) {\r\n                    argValue = argValue.value;\r\n                    for (m = 0; m < argValue.length; m++) {\r\n                        args.push({ value: argValue[m] });\r\n                    }\r\n                }\r\n                else {\r\n                    args.push({ name: arg.name, value: argValue });\r\n                }\r\n            }\r\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n            for (i = 0; i < context.frames.length; i++) {\r\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n                    isOneFound = true;\r\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n                    // we make a final decision.\r\n                    for (m = 0; m < mixins.length; m++) {\r\n                        mixin = mixins[m].rule;\r\n                        mixinPath = mixins[m].path;\r\n                        isRecursive = false;\r\n                        for (f = 0; f < context.frames.length; f++) {\r\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                                isRecursive = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isRecursive) {\r\n                            continue;\r\n                        }\r\n                        if (mixin.matchArgs(args, context)) {\r\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                            if (candidate.group !== defFalseEitherCase) {\r\n                                candidates.push(candidate);\r\n                            }\r\n                            match = true;\r\n                        }\r\n                    }\r\n                    defaultFunc.reset();\r\n                    count = [0, 0, 0];\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        count[candidates[m].group]++;\r\n                    }\r\n                    if (count[defNone] > 0) {\r\n                        defaultResult = defFalse;\r\n                    }\r\n                    else {\r\n                        defaultResult = defTrue;\r\n                        if ((count[defTrue] + count[defFalse]) > 1) {\r\n                            throw { type: 'Runtime',\r\n                                message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\",\r\n                                index: this.getIndex(), filename: this.fileInfo().filename };\r\n                        }\r\n                    }\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        candidate = candidates[m].group;\r\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                            try {\r\n                                mixin = candidates[m].mixin;\r\n                                if (!(mixin instanceof Definition)) {\r\n                                    originalRuleset = mixin.originalRuleset || mixin;\r\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                                    mixin.originalRuleset = originalRuleset;\r\n                                }\r\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                                this._setVisibilityToReplacement(newRules);\r\n                                Array.prototype.push.apply(rules, newRules);\r\n                            }\r\n                            catch (e) {\r\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                            }\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        return rules;\r\n                    }\r\n                }\r\n            }\r\n            if (isOneFound) {\r\n                throw { type: 'Runtime',\r\n                    message: \"No matching definition was found for `\" + this.format(args) + \"`\",\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: this.selector.toCSS().trim() + \" is undefined\",\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n        },\r\n        _setVisibilityToReplacement: function (replacement) {\r\n            var i, rule;\r\n            if (this.blocksVisibility()) {\r\n                for (i = 0; i < replacement.length; i++) {\r\n                    rule = replacement[i];\r\n                    rule.addVisibilityBlock();\r\n                }\r\n            }\r\n        },\r\n        format: function (args) {\r\n            return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n                var argValue = '';\r\n                if (a.name) {\r\n                    argValue += a.name + \":\";\r\n                }\r\n                if (a.value.toCSS) {\r\n                    argValue += a.value.toCSS();\r\n                }\r\n                else {\r\n                    argValue += '???';\r\n                }\r\n                return argValue;\r\n            }).join(', ') : '') + \")\";\r\n        }\r\n    });\n\n    var tree = {\r\n        Node: Node,\r\n        Color: Color,\r\n        AtRule: AtRule,\r\n        DetachedRuleset: DetachedRuleset,\r\n        Operation: Operation,\r\n        Dimension: Dimension,\r\n        Unit: Unit,\r\n        Keyword: Keyword,\r\n        Variable: Variable,\r\n        Property: Property,\r\n        Ruleset: Ruleset,\r\n        Element: Element,\r\n        Attribute: Attribute,\r\n        Combinator: Combinator,\r\n        Selector: Selector,\r\n        Quoted: Quoted,\r\n        Expression: Expression,\r\n        Declaration: Declaration,\r\n        Call: Call,\r\n        URL: URL,\r\n        Import: Import,\r\n        Comment: Comment,\r\n        Anonymous: Anonymous,\r\n        Value: Value,\r\n        JavaScript: JavaScript,\r\n        Assignment: Assignment,\r\n        Condition: Condition,\r\n        Paren: Paren,\r\n        Media: Media,\r\n        UnicodeDescriptor: UnicodeDescriptor,\r\n        Negative: Negative,\r\n        Extend: Extend,\r\n        VariableCall: VariableCall,\r\n        NamespaceValue: NamespaceValue,\r\n        mixin: {\r\n            Call: MixinCall,\r\n            Definition: Definition\r\n        }\r\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\r\n        function AbstractFileManager() {\r\n        }\r\n        AbstractFileManager.prototype.getPath = function (filename) {\r\n            var j = filename.lastIndexOf('?');\r\n            if (j > 0) {\r\n                filename = filename.slice(0, j);\r\n            }\r\n            j = filename.lastIndexOf('/');\r\n            if (j < 0) {\r\n                j = filename.lastIndexOf('\\\\');\r\n            }\r\n            if (j < 0) {\r\n                return '';\r\n            }\r\n            return filename.slice(0, j + 1);\r\n        };\r\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n            return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\r\n        };\r\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n            return this.tryAppendExtension(path, '.less');\r\n        };\r\n        AbstractFileManager.prototype.supportsSync = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n        };\r\n        // TODO: pull out / replace?\r\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return basePath + laterPath;\r\n        };\r\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n            // diff between two paths to create a relative path\r\n            var urlParts = this.extractUrlParts(url);\r\n            var baseUrlParts = this.extractUrlParts(baseUrl);\r\n            var i;\r\n            var max;\r\n            var urlDirectories;\r\n            var baseUrlDirectories;\r\n            var diff = '';\r\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n                return '';\r\n            }\r\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n            for (i = 0; i < max; i++) {\r\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                    break;\r\n                }\r\n            }\r\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n            urlDirectories = urlParts.directories.slice(i);\r\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n                diff += '../';\r\n            }\r\n            for (i = 0; i < urlDirectories.length - 1; i++) {\r\n                diff += urlDirectories[i] + \"/\";\r\n            }\r\n            return diff;\r\n        };\r\n        // helper function, not part of API\r\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n            // urlParts[1] = protocol://hostname/ OR /\r\n            // urlParts[2] = / if path relative to host base\r\n            // urlParts[3] = directories\r\n            // urlParts[4] = filename\r\n            // urlParts[5] = parameters\r\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\r\n            var urlParts = url.match(urlPartsRegex);\r\n            var returner = {};\r\n            var rawDirectories = [];\r\n            var directories = [];\r\n            var i;\r\n            var baseUrlParts;\r\n            if (!urlParts) {\r\n                throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n            }\r\n            // Stylesheets in IE don't always return the full path\r\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n                baseUrlParts = baseUrl.match(urlPartsRegex);\r\n                if (!baseUrlParts) {\r\n                    throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n                }\r\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n                if (!urlParts[2]) {\r\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n                }\r\n            }\r\n            if (urlParts[3]) {\r\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n                // collapse '..' and skip '.'\r\n                for (i = 0; i < rawDirectories.length; i++) {\r\n                    if (rawDirectories[i] === '..') {\r\n                        directories.pop();\r\n                    }\r\n                    else if (rawDirectories[i] !== '.') {\r\n                        directories.push(rawDirectories[i]);\r\n                    }\r\n                }\r\n            }\r\n            returner.hostPart = urlParts[1];\r\n            returner.directories = directories;\r\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n            returner.path = (urlParts[1] || '') + directories.join('/');\r\n            returner.filename = urlParts[4];\r\n            returner.fileUrl = returner.path + (urlParts[4] || '');\r\n            returner.url = returner.fileUrl + (urlParts[5] || '');\r\n            return returner;\r\n        };\r\n        return AbstractFileManager;\r\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\r\n        function AbstractPluginLoader() {\r\n            // Implemented by Node.js plugin loader\r\n            this.require = function () {\r\n                return null;\r\n            };\r\n        }\r\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\r\n            pluginManager = context.pluginManager;\r\n            if (fileInfo) {\r\n                if (typeof fileInfo === 'string') {\r\n                    filename = fileInfo;\r\n                }\r\n                else {\r\n                    filename = fileInfo.filename;\r\n                }\r\n            }\r\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n            if (filename) {\r\n                pluginObj = pluginManager.get(filename);\r\n                if (pluginObj) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                    try {\r\n                        if (pluginObj.use) {\r\n                            pluginObj.use.call(this.context, pluginObj);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        e.message = e.message || 'Error during @plugin call';\r\n                        return new LessError(e, imports, filename);\r\n                    }\r\n                    return pluginObj;\r\n                }\r\n            }\r\n            localModule = {\r\n                exports: {},\r\n                pluginManager: pluginManager,\r\n                fileInfo: fileInfo\r\n            };\r\n            registry = functionRegistry.create();\r\n            var registerPlugin = function (obj) {\r\n                pluginObj = obj;\r\n            };\r\n            try {\r\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e, imports, filename);\r\n            }\r\n            if (!pluginObj) {\r\n                pluginObj = localModule.exports;\r\n            }\r\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n            if (pluginObj instanceof LessError) {\r\n                return pluginObj;\r\n            }\r\n            if (pluginObj) {\r\n                pluginObj.imports = imports;\r\n                pluginObj.filename = filename;\r\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n                // Run on first load\r\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n                pluginObj.functions = registry.getLocalFunctions();\r\n                // Need to call setOptions again because the pluginObj might have functions\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n                // Run every @plugin call\r\n                try {\r\n                    if (pluginObj.use) {\r\n                        pluginObj.use.call(this.context, pluginObj);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    e.message = e.message || 'Error during @plugin call';\r\n                    return new LessError(e, imports, filename);\r\n                }\r\n            }\r\n            else {\r\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n            }\r\n            return pluginObj;\r\n        };\r\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n            if (options && !plugin.setOptions) {\r\n                return new LessError({\r\n                    message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n                });\r\n            }\r\n            try {\r\n                plugin.setOptions && plugin.setOptions(options);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e);\r\n            }\r\n        };\r\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n            if (plugin) {\r\n                // support plugins being a function\r\n                // so that the plugin can be more usable programmatically\r\n                if (typeof plugin === 'function') {\r\n                    plugin = new plugin();\r\n                }\r\n                if (plugin.minVersion) {\r\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                        return new LessError({\r\n                            message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                        });\r\n                    }\r\n                }\r\n                return plugin;\r\n            }\r\n            return null;\r\n        };\r\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n            if (typeof aVersion === 'string') {\r\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n                aVersion.shift();\r\n            }\r\n            for (var i = 0; i < aVersion.length; i++) {\r\n                if (aVersion[i] !== bVersion[i]) {\r\n                    return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        AbstractPluginLoader.prototype.versionToString = function (version) {\r\n            var versionString = '';\r\n            for (var i = 0; i < version.length; i++) {\r\n                versionString += (versionString ? '.' : '') + version[i];\r\n            }\r\n            return versionString;\r\n        };\r\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n            for (var i = 0; i < plugins.length; i++) {\r\n                var plugin = plugins[i];\r\n                if (plugin.printUsage) {\r\n                    plugin.printUsage();\r\n                }\r\n            }\r\n        };\r\n        return AbstractPluginLoader;\r\n    }());\n\n    var _visitArgs = { visitDeeper: true };\r\n    var _hasIndexed = false;\r\n    function _noop(node) {\r\n        return node;\r\n    }\r\n    function indexNodeTypes(parent, ticker) {\r\n        // add .typeIndex to tree node types for lookup table\r\n        var key, child;\r\n        for (key in parent) {\r\n            /* eslint guard-for-in: 0 */\r\n            child = parent[key];\r\n            switch (typeof child) {\r\n                case 'function':\r\n                    // ignore bound functions directly on tree which do not have a prototype\r\n                    // or aren't nodes\r\n                    if (child.prototype && child.prototype.type) {\r\n                        child.prototype.typeIndex = ticker++;\r\n                    }\r\n                    break;\r\n                case 'object':\r\n                    ticker = indexNodeTypes(child, ticker);\r\n                    break;\r\n            }\r\n        }\r\n        return ticker;\r\n    }\r\n    var Visitor = /** @class */ (function () {\r\n        function Visitor(implementation) {\r\n            this._implementation = implementation;\r\n            this._visitInCache = {};\r\n            this._visitOutCache = {};\r\n            if (!_hasIndexed) {\r\n                indexNodeTypes(tree, 1);\r\n                _hasIndexed = true;\r\n            }\r\n        }\r\n        Visitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            var nodeTypeIndex = node.typeIndex;\r\n            if (!nodeTypeIndex) {\r\n                // MixinCall args aren't a node type?\r\n                if (node.value && node.value.typeIndex) {\r\n                    this.visit(node.value);\r\n                }\r\n                return node;\r\n            }\r\n            var impl = this._implementation;\r\n            var func = this._visitInCache[nodeTypeIndex];\r\n            var funcOut = this._visitOutCache[nodeTypeIndex];\r\n            var visitArgs = _visitArgs;\r\n            var fnName;\r\n            visitArgs.visitDeeper = true;\r\n            if (!func) {\r\n                fnName = \"visit\" + node.type;\r\n                func = impl[fnName] || _noop;\r\n                funcOut = impl[fnName + \"Out\"] || _noop;\r\n                this._visitInCache[nodeTypeIndex] = func;\r\n                this._visitOutCache[nodeTypeIndex] = funcOut;\r\n            }\r\n            if (func !== _noop) {\r\n                var newNode = func.call(impl, node, visitArgs);\r\n                if (node && impl.isReplacing) {\r\n                    node = newNode;\r\n                }\r\n            }\r\n            if (visitArgs.visitDeeper && node) {\r\n                if (node.length) {\r\n                    for (var i = 0, cnt = node.length; i < cnt; i++) {\r\n                        if (node[i].accept) {\r\n                            node[i].accept(this);\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.accept) {\r\n                    node.accept(this);\r\n                }\r\n            }\r\n            if (funcOut != _noop) {\r\n                funcOut.call(impl, node);\r\n            }\r\n            return node;\r\n        };\r\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            // Non-replacing\r\n            if (nonReplacing || !this._implementation.isReplacing) {\r\n                for (i = 0; i < cnt; i++) {\r\n                    this.visit(nodes[i]);\r\n                }\r\n                return nodes;\r\n            }\r\n            // Replacing\r\n            var out = [];\r\n            for (i = 0; i < cnt; i++) {\r\n                var evald = this.visit(nodes[i]);\r\n                if (evald === undefined) {\r\n                    continue;\r\n                }\r\n                if (!evald.splice) {\r\n                    out.push(evald);\r\n                }\r\n                else if (evald.length) {\r\n                    this.flatten(evald, out);\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        Visitor.prototype.flatten = function (arr, out) {\r\n            if (!out) {\r\n                out = [];\r\n            }\r\n            var cnt, i, item, nestedCnt, j, nestedItem;\r\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n                item = arr[i];\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n                if (!item.splice) {\r\n                    out.push(item);\r\n                    continue;\r\n                }\r\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                    nestedItem = item[j];\r\n                    if (nestedItem === undefined) {\r\n                        continue;\r\n                    }\r\n                    if (!nestedItem.splice) {\r\n                        out.push(nestedItem);\r\n                    }\r\n                    else if (nestedItem.length) {\r\n                        this.flatten(nestedItem, out);\r\n                    }\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        return Visitor;\r\n    }());\n\n    var ImportSequencer = /** @class */ (function () {\r\n        function ImportSequencer(onSequencerEmpty) {\r\n            this.imports = [];\r\n            this.variableImports = [];\r\n            this._onSequencerEmpty = onSequencerEmpty;\r\n            this._currentDepth = 0;\r\n        }\r\n        ImportSequencer.prototype.addImport = function (callback) {\r\n            var importSequencer = this, importItem = {\r\n                callback: callback,\r\n                args: null,\r\n                isReady: false\r\n            };\r\n            this.imports.push(importItem);\r\n            return function () {\r\n                importItem.args = Array.prototype.slice.call(arguments, 0);\r\n                importItem.isReady = true;\r\n                importSequencer.tryRun();\r\n            };\r\n        };\r\n        ImportSequencer.prototype.addVariableImport = function (callback) {\r\n            this.variableImports.push(callback);\r\n        };\r\n        ImportSequencer.prototype.tryRun = function () {\r\n            this._currentDepth++;\r\n            try {\r\n                while (true) {\r\n                    while (this.imports.length > 0) {\r\n                        var importItem = this.imports[0];\r\n                        if (!importItem.isReady) {\r\n                            return;\r\n                        }\r\n                        this.imports = this.imports.slice(1);\r\n                        importItem.callback.apply(null, importItem.args);\r\n                    }\r\n                    if (this.variableImports.length === 0) {\r\n                        break;\r\n                    }\r\n                    var variableImport = this.variableImports[0];\r\n                    this.variableImports = this.variableImports.slice(1);\r\n                    variableImport();\r\n                }\r\n            }\r\n            finally {\r\n                this._currentDepth--;\r\n            }\r\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n                this._onSequencerEmpty();\r\n            }\r\n        };\r\n        return ImportSequencer;\r\n    }());\n\n    var ImportVisitor = function (importer, finish) {\r\n        this._visitor = new Visitor(this);\r\n        this._importer = importer;\r\n        this._finish = finish;\r\n        this.context = new contexts.Eval();\r\n        this.importCount = 0;\r\n        this.onceFileDetectionMap = {};\r\n        this.recursionDetector = {};\r\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n    };\r\n    ImportVisitor.prototype = {\r\n        isReplacing: false,\r\n        run: function (root) {\r\n            try {\r\n                // process the contents\r\n                this._visitor.visit(root);\r\n            }\r\n            catch (e) {\r\n                this.error = e;\r\n            }\r\n            this.isFinished = true;\r\n            this._sequencer.tryRun();\r\n        },\r\n        _onSequencerEmpty: function () {\r\n            if (!this.isFinished) {\r\n                return;\r\n            }\r\n            this._finish(this.error);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            var inlineCSS = importNode.options.inline;\r\n            if (!importNode.css || inlineCSS) {\r\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n                var importParent = context.frames[0];\r\n                this.importCount++;\r\n                if (importNode.isVariableImport()) {\r\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n                }\r\n                else {\r\n                    this.processImportNode(importNode, context, importParent);\r\n                }\r\n            }\r\n            visitArgs.visitDeeper = false;\r\n        },\r\n        processImportNode: function (importNode, context, importParent) {\r\n            var evaldImportNode;\r\n            var inlineCSS = importNode.options.inline;\r\n            try {\r\n                evaldImportNode = importNode.evalForImport(context);\r\n            }\r\n            catch (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                // attempt to eval properly and treat as css\r\n                importNode.css = true;\r\n                // if that fails, this error will be thrown\r\n                importNode.error = e;\r\n            }\r\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n                if (evaldImportNode.options.multiple) {\r\n                    context.importMultiple = true;\r\n                }\r\n                // try appending if we haven't determined if it is css or not\r\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n                for (var i = 0; i < importParent.rules.length; i++) {\r\n                    if (importParent.rules[i] === importNode) {\r\n                        importParent.rules[i] = evaldImportNode;\r\n                        break;\r\n                    }\r\n                }\r\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\r\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n            }\r\n            else {\r\n                this.importCount--;\r\n                if (this.isFinished) {\r\n                    this._sequencer.tryRun();\r\n                }\r\n            }\r\n        },\r\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n            if (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                this.error = e;\r\n            }\r\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n            if (!context.importMultiple) {\r\n                if (duplicateImport) {\r\n                    importNode.skip = true;\r\n                }\r\n                else {\r\n                    importNode.skip = function () {\r\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                            return true;\r\n                        }\r\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                        return false;\r\n                    };\r\n                }\r\n            }\r\n            if (!fullPath && isOptional) {\r\n                importNode.skip = true;\r\n            }\r\n            if (root) {\r\n                importNode.root = root;\r\n                importNode.importedFilename = fullPath;\r\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                    importVisitor.recursionDetector[fullPath] = true;\r\n                    var oldContext = this.context;\r\n                    this.context = context;\r\n                    try {\r\n                        this._visitor.visit(root);\r\n                    }\r\n                    catch (e) {\r\n                        this.error = e;\r\n                    }\r\n                    this.context = oldContext;\r\n                }\r\n            }\r\n            importVisitor.importCount--;\r\n            if (importVisitor.isFinished) {\r\n                importVisitor._sequencer.tryRun();\r\n            }\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.unshift(declNode);\r\n            }\r\n            else {\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n        },\r\n        visitDeclarationOut: function (declNode) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.shift();\r\n            }\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            this.context.frames.unshift(atRuleNode);\r\n        },\r\n        visitAtRuleOut: function (atRuleNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n            this.context.frames.unshift(mixinDefinitionNode);\r\n        },\r\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            this.context.frames.unshift(rulesetNode);\r\n        },\r\n        visitRulesetOut: function (rulesetNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            this.context.frames.unshift(mediaNode.rules[0]);\r\n        },\r\n        visitMediaOut: function (mediaNode) {\r\n            this.context.frames.shift();\r\n        }\r\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n        function SetTreeVisibilityVisitor(visible) {\r\n            this.visible = visible;\r\n        }\r\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n            this.visit(root);\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            for (i = 0; i < cnt; i++) {\r\n                this.visit(nodes[i]);\r\n            }\r\n            return nodes;\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            if (node.constructor === Array) {\r\n                return this.visitArray(node);\r\n            }\r\n            if (!node.blocksVisibility || node.blocksVisibility()) {\r\n                return node;\r\n            }\r\n            if (this.visible) {\r\n                node.ensureVisibility();\r\n            }\r\n            else {\r\n                node.ensureInvisibility();\r\n            }\r\n            node.accept(this);\r\n            return node;\r\n        };\r\n        return SetTreeVisibilityVisitor;\r\n    }());\n\n    /* jshint loopfunc:true */\r\n    var ExtendFinderVisitor = /** @class */ (function () {\r\n        function ExtendFinderVisitor() {\r\n            this._visitor = new Visitor(this);\r\n            this.contexts = [];\r\n            this.allExtendsStack = [[]];\r\n        }\r\n        ExtendFinderVisitor.prototype.run = function (root) {\r\n            root = this._visitor.visit(root);\r\n            root.allExtends = this.allExtendsStack[0];\r\n            return root;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var i;\r\n            var j;\r\n            var extend;\r\n            var allSelectorsExtendList = [];\r\n            var extendList;\r\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\r\n            for (i = 0; i < ruleCnt; i++) {\r\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                    allSelectorsExtendList.push(rules[i]);\r\n                    rulesetNode.extendOnEveryPath = true;\r\n                }\r\n            }\r\n            // now find every selector and apply the extends that apply to all extends\r\n            // and the ones which apply to an individual extend\r\n            var paths = rulesetNode.paths;\r\n            for (i = 0; i < paths.length; i++) {\r\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\r\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                    : allSelectorsExtendList;\r\n                if (extendList) {\r\n                    extendList = extendList.map(function (allSelectorsExtend) {\r\n                        return allSelectorsExtend.clone();\r\n                    });\r\n                }\r\n                for (j = 0; j < extendList.length; j++) {\r\n                    this.foundExtends = true;\r\n                    extend = extendList[j];\r\n                    extend.findSelfSelectors(selectorPath);\r\n                    extend.ruleset = rulesetNode;\r\n                    if (j === 0) {\r\n                        extend.firstExtendOnThisSelectorPath = true;\r\n                    }\r\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n                }\r\n            }\r\n            this.contexts.push(rulesetNode.selectors);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            if (!rulesetNode.root) {\r\n                this.contexts.length = this.contexts.length - 1;\r\n            }\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            mediaNode.allExtends = [];\r\n            this.allExtendsStack.push(mediaNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            atRuleNode.allExtends = [];\r\n            this.allExtendsStack.push(atRuleNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        return ExtendFinderVisitor;\r\n    }());\r\n    var ProcessExtendsVisitor = /** @class */ (function () {\r\n        function ProcessExtendsVisitor() {\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        ProcessExtendsVisitor.prototype.run = function (root) {\r\n            var extendFinder = new ExtendFinderVisitor();\r\n            this.extendIndices = {};\r\n            extendFinder.run(root);\r\n            if (!extendFinder.foundExtends) {\r\n                return root;\r\n            }\r\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n            this.allExtendsStack = [root.allExtends];\r\n            var newRoot = this._visitor.visit(root);\r\n            this.checkExtendsForNonMatched(root.allExtends);\r\n            return newRoot;\r\n        };\r\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n            var indices = this.extendIndices;\r\n            extendList.filter(function (extend) {\r\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\r\n            }).forEach(function (extend) {\r\n                var selector = '_unknown_';\r\n                try {\r\n                    selector = extend.selector.toCSS({});\r\n                }\r\n                catch (_) { }\r\n                if (!indices[extend.index + \" \" + selector]) {\r\n                    indices[extend.index + \" \" + selector] = true;\r\n                    logger$1.warn(\"extend '\" + selector + \"' has no matches\");\r\n                }\r\n            });\r\n        };\r\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n            //\r\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n            // this means this new extend can then go and alter other extends\r\n            //\r\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n            // processed if we look at each selector at a time, as is done in visitRuleset\r\n            var extendIndex;\r\n            var targetExtendIndex;\r\n            var matches;\r\n            var extendsToAdd = [];\r\n            var newSelector;\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            var extend;\r\n            var targetExtend;\r\n            var newExtend;\r\n            iterationCount = iterationCount || 0;\r\n            // loop through comparing every extend with every target extend.\r\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n            // and the second is the target.\r\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n            // case when processing media queries\r\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                    extend = extendsList[extendIndex];\r\n                    targetExtend = extendsListTarget[targetExtendIndex];\r\n                    // look for circular references\r\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                        continue;\r\n                    }\r\n                    // find a match in the target extends self selector (the bit before :extend)\r\n                    selectorPath = [targetExtend.selfSelectors[0]];\r\n                    matches = extendVisitor.findMatch(extend, selectorPath);\r\n                    if (matches.length) {\r\n                        extend.hasFoundMatches = true;\r\n                        // we found a match, so for each self selector..\r\n                        extend.selfSelectors.forEach(function (selfSelector) {\r\n                            var info = targetExtend.visibilityInfo();\r\n                            // process the extend as usual\r\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                            // but now we create a new extend from it\r\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                            newExtend.selfSelectors = newSelector;\r\n                            // add the extend onto the list of extends for that selector\r\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                            // record that we need to add it.\r\n                            extendsToAdd.push(newExtend);\r\n                            newExtend.ruleset = targetExtend.ruleset;\r\n                            // remember its parents for circular references\r\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                            // extends will look at the same selector path, so when extending\r\n                            // we know that any others will be duplicates in terms of what is added to the css\r\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                                newExtend.firstExtendOnThisSelectorPath = true;\r\n                                targetExtend.ruleset.paths.push(newSelector);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (extendsToAdd.length) {\r\n                // try to detect circular references to stop a stack overflow.\r\n                // may no longer be needed.\r\n                this.extendChainCount++;\r\n                if (iterationCount > 100) {\r\n                    var selectorOne = '{unable to calculate}';\r\n                    var selectorTwo = '{unable to calculate}';\r\n                    try {\r\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                    }\r\n                    catch (e) { }\r\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n                }\r\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n                // d extending e...\r\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n            }\r\n            else {\r\n                return extendsToAdd;\r\n            }\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var matches;\r\n            var pathIndex;\r\n            var extendIndex;\r\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n            var selectorsToAdd = [];\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                    selectorPath = rulesetNode.paths[pathIndex];\r\n                    // extending extends happens initially, before the main pass\r\n                    if (rulesetNode.extendOnEveryPath) {\r\n                        continue;\r\n                    }\r\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                    if (extendList && extendList.length) {\r\n                        continue;\r\n                    }\r\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                    if (matches.length) {\r\n                        allExtends[extendIndex].hasFoundMatches = true;\r\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                            var extendedSelectors;\r\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                            selectorsToAdd.push(extendedSelectors);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n        };\r\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n            //\r\n            // look through the haystack selector path to try and find the needle - extend.selector\r\n            // returns an array of selector matches that can then be replaced\r\n            //\r\n            var haystackSelectorIndex;\r\n            var hackstackSelector;\r\n            var hackstackElementIndex;\r\n            var haystackElement;\r\n            var targetCombinator;\r\n            var i;\r\n            var extendVisitor = this;\r\n            var needleElements = extend.selector.elements;\r\n            var potentialMatches = [];\r\n            var potentialMatch;\r\n            var matches = [];\r\n            // loop through the haystack elements\r\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                            initialCombinator: haystackElement.combinator });\r\n                    }\r\n                    for (i = 0; i < potentialMatches.length; i++) {\r\n                        potentialMatch = potentialMatches[i];\r\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                        // work out what the resulting combinator will be\r\n                        targetCombinator = haystackElement.combinator.value;\r\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                            targetCombinator = ' ';\r\n                        }\r\n                        // if we don't match, null our match to indicate failure\r\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                            potentialMatch = null;\r\n                        }\r\n                        else {\r\n                            potentialMatch.matched++;\r\n                        }\r\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                        if (potentialMatch) {\r\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                            if (potentialMatch.finished &&\r\n                                (!extend.allowAfter &&\r\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                                potentialMatch = null;\r\n                            }\r\n                        }\r\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                        if (potentialMatch) {\r\n                            if (potentialMatch.finished) {\r\n                                potentialMatch.length = needleElements.length;\r\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                                matches.push(potentialMatch);\r\n                            }\r\n                        }\r\n                        else {\r\n                            potentialMatches.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return matches;\r\n        };\r\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            if (elementValue1 instanceof tree.Attribute) {\r\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                    return false;\r\n                }\r\n                if (!elementValue1.value || !elementValue2.value) {\r\n                    if (elementValue1.value || elementValue2.value) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                elementValue1 = elementValue1.value.value || elementValue1.value;\r\n                elementValue2 = elementValue2.value.value || elementValue2.value;\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            elementValue1 = elementValue1.value;\r\n            elementValue2 = elementValue2.value;\r\n            if (elementValue1 instanceof tree.Selector) {\r\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                    return false;\r\n                }\r\n                for (var i = 0; i < elementValue1.elements.length; i++) {\r\n                    if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\r\n                        if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n            // for a set of matches, replace each match with the replacement selector\r\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\r\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n                match = matches[matchIndex];\r\n                selector = selectorPath[match.pathIndex];\r\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                    path[path.length - 1].elements = path[path.length - 1]\r\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n                newElements = selector.elements\r\n                    .slice(currentSelectorPathElementIndex, match.index)\r\n                    .concat([firstElement])\r\n                    .concat(replacementSelector.elements.slice(1));\r\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                    path[path.length - 1].elements =\r\n                        path[path.length - 1].elements.concat(newElements);\r\n                }\r\n                else {\r\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                    path.push(new tree.Selector(newElements));\r\n                }\r\n                currentSelectorPathIndex = match.endPathIndex;\r\n                currentSelectorPathElementIndex = match.endPathElementIndex;\r\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n            }\r\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n                path[path.length - 1].elements = path[path.length - 1]\r\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                currentSelectorPathIndex++;\r\n            }\r\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n            path = path.map(function (currentValue) {\r\n                // we can re-use elements here, because the visibility property matters only for selectors\r\n                var derived = currentValue.createDerived(currentValue.elements);\r\n                if (isVisible) {\r\n                    derived.ensureVisibility();\r\n                }\r\n                else {\r\n                    derived.ensureInvisibility();\r\n                }\r\n                return derived;\r\n            });\r\n            return path;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        return ProcessExtendsVisitor;\r\n    }());\n\n    var JoinSelectorVisitor = /** @class */ (function () {\r\n        function JoinSelectorVisitor() {\r\n            this.contexts = [[]];\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        JoinSelectorVisitor.prototype.run = function (root) {\r\n            return this._visitor.visit(root);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            var paths = [];\r\n            var selectors;\r\n            this.contexts.push(paths);\r\n            if (!rulesetNode.root) {\r\n                selectors = rulesetNode.selectors;\r\n                if (selectors) {\r\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                    if (selectors) {\r\n                        rulesetNode.joinSelectors(paths, context, selectors);\r\n                    }\r\n                }\r\n                if (!selectors) {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                rulesetNode.paths = paths;\r\n            }\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            this.contexts.length = this.contexts.length - 1;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n            }\r\n        };\r\n        return JoinSelectorVisitor;\r\n    }());\n\n    var CSSVisitorUtils = /** @class */ (function () {\r\n        function CSSVisitorUtils(context) {\r\n            this._visitor = new Visitor(this);\r\n            this._context = context;\r\n        }\r\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n            var rule;\r\n            if (!bodyRules) {\r\n                return false;\r\n            }\r\n            for (var r = 0; r < bodyRules.length; r++) {\r\n                rule = bodyRules[r];\r\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                    // the atrule contains something that was referenced (likely by extend)\r\n                    // therefore it needs to be shown in output too\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n            if (owner && owner.rules) {\r\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n            }\r\n        };\r\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n            return (owner && owner.rules)\r\n                ? (owner.rules.length === 0) : true;\r\n        };\r\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n            return (rulesetNode && rulesetNode.paths)\r\n                ? (rulesetNode.paths.length > 0) : false;\r\n        };\r\n        CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\r\n            if (!node.blocksVisibility()) {\r\n                if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\r\n                    return;\r\n                }\r\n                return node;\r\n            }\r\n            var compiledRulesBody = node.rules[0];\r\n            this.keepOnlyVisibleChilds(compiledRulesBody);\r\n            if (this.isEmpty(compiledRulesBody)) {\r\n                return;\r\n            }\r\n            node.ensureVisibility();\r\n            node.removeVisibilityBlock();\r\n            return node;\r\n        };\r\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n            if (rulesetNode.firstRoot) {\r\n                return true;\r\n            }\r\n            if (this.isEmpty(rulesetNode)) {\r\n                return false;\r\n            }\r\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        return CSSVisitorUtils;\r\n    }());\r\n    var ToCSSVisitor = function (context) {\r\n        this._visitor = new Visitor(this);\r\n        this._context = context;\r\n        this.utils = new CSSVisitorUtils(context);\r\n    };\r\n    ToCSSVisitor.prototype = {\r\n        isReplacing: true,\r\n        run: function (root) {\r\n            return this._visitor.visit(root);\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.blocksVisibility() || declNode.variable) {\r\n                return;\r\n            }\r\n            return declNode;\r\n        },\r\n        visitMixinDefinition: function (mixinNode, visitArgs) {\r\n            // mixin definitions do not get eval'd - this means they keep state\r\n            // so we have to clear that state here so it isn't used if toCSS is called twice\r\n            mixinNode.frames = [];\r\n        },\r\n        visitExtend: function (extendNode, visitArgs) {\r\n        },\r\n        visitComment: function (commentNode, visitArgs) {\r\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n                return;\r\n            }\r\n            return commentNode;\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            var originalRules = mediaNode.rules[0].rules;\r\n            mediaNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            return this.utils.resolveVisibility(mediaNode, originalRules);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            if (importNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            return importNode;\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n            }\r\n            else {\r\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n            }\r\n        },\r\n        visitAnonymous: function (anonymousNode, visitArgs) {\r\n            if (!anonymousNode.blocksVisibility()) {\r\n                anonymousNode.accept(this._visitor);\r\n                return anonymousNode;\r\n            }\r\n        },\r\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n            // if there is only one nested ruleset and that one has no path, then it is\r\n            // just fake ruleset\r\n            function hasFakeRuleset(atRuleNode) {\r\n                var bodyRules = atRuleNode.rules;\r\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n            }\r\n            function getBodyRules(atRuleNode) {\r\n                var nodeRules = atRuleNode.rules;\r\n                if (hasFakeRuleset(atRuleNode)) {\r\n                    return nodeRules[0].rules;\r\n                }\r\n                return nodeRules;\r\n            }\r\n            // it is still true that it is only one ruleset in array\r\n            // this is last such moment\r\n            // process childs\r\n            var originalRules = getBodyRules(atRuleNode);\r\n            atRuleNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            if (!this.utils.isEmpty(atRuleNode)) {\r\n                this._mergeRules(atRuleNode.rules[0].rules);\r\n            }\r\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n        },\r\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            if (atRuleNode.name === '@charset') {\r\n                // Only output the debug info together with subsequent @charset definitions\r\n                // a comment (or @media statement) before the actual @charset atrule would\r\n                // be considered illegal css as it has to be on the first line\r\n                if (this.charset) {\r\n                    if (atRuleNode.debugInfo) {\r\n                        var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                        comment.debugInfo = atRuleNode.debugInfo;\r\n                        return this._visitor.visit(comment);\r\n                    }\r\n                    return;\r\n                }\r\n                this.charset = true;\r\n            }\r\n            return atRuleNode;\r\n        },\r\n        checkValidNodes: function (rules, isRoot) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var ruleNode = rules[i];\r\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode instanceof tree.Call) {\r\n                    throw { message: \"Function '\" + ruleNode.name + \"' did not return a root node\",\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode.type && !ruleNode.allowRoot) {\r\n                    throw { message: ruleNode.type + \" node returned by a function is not valid here\",\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n            }\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            // at this point rulesets are nested into each other\r\n            var rule;\r\n            var rulesets = [];\r\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n            if (!rulesetNode.root) {\r\n                // remove invisible paths\r\n                this._compileRulesetPaths(rulesetNode);\r\n                // remove rulesets from this ruleset body and compile them separately\r\n                var nodeRules = rulesetNode.rules;\r\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n                for (var i = 0; i < nodeRuleCnt;) {\r\n                    rule = nodeRules[i];\r\n                    if (rule && rule.rules) {\r\n                        // visit because we are moving them out from being a child\r\n                        rulesets.push(this._visitor.visit(rule));\r\n                        nodeRules.splice(i, 1);\r\n                        nodeRuleCnt--;\r\n                        continue;\r\n                    }\r\n                    i++;\r\n                }\r\n                // accept the visitor to remove rules and refactor itself\r\n                // then we can decide nogw whether we want it or not\r\n                // compile body\r\n                if (nodeRuleCnt > 0) {\r\n                    rulesetNode.accept(this._visitor);\r\n                }\r\n                else {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            else { // if (! rulesetNode.root) {\r\n                rulesetNode.accept(this._visitor);\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            if (rulesetNode.rules) {\r\n                this._mergeRules(rulesetNode.rules);\r\n                this._removeDuplicateRules(rulesetNode.rules);\r\n            }\r\n            // now decide whether we keep the ruleset\r\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n                rulesetNode.ensureVisibility();\r\n                rulesets.splice(0, 0, rulesetNode);\r\n            }\r\n            if (rulesets.length === 1) {\r\n                return rulesets[0];\r\n            }\r\n            return rulesets;\r\n        },\r\n        _compileRulesetPaths: function (rulesetNode) {\r\n            if (rulesetNode.paths) {\r\n                rulesetNode.paths = rulesetNode.paths\r\n                    .filter(function (p) {\r\n                    var i;\r\n                    if (p[0].elements[0].combinator.value === ' ') {\r\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                    }\r\n                    for (i = 0; i < p.length; i++) {\r\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        },\r\n        _removeDuplicateRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            // remove duplicates\r\n            var ruleCache = {};\r\n            var ruleList;\r\n            var rule;\r\n            var i;\r\n            for (i = rules.length - 1; i >= 0; i--) {\r\n                rule = rules[i];\r\n                if (rule instanceof tree.Declaration) {\r\n                    if (!ruleCache[rule.name]) {\r\n                        ruleCache[rule.name] = rule;\r\n                    }\r\n                    else {\r\n                        ruleList = ruleCache[rule.name];\r\n                        if (ruleList instanceof tree.Declaration) {\r\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                        }\r\n                        var ruleCSS = rule.toCSS(this._context);\r\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                            rules.splice(i, 1);\r\n                        }\r\n                        else {\r\n                            ruleList.push(ruleCSS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _mergeRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            var groups = {};\r\n            var groupsArr = [];\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule.merge) {\r\n                    var key = rule.name;\r\n                    groups[key] ? rules.splice(i--, 1) :\r\n                        groupsArr.push(groups[key] = []);\r\n                    groups[key].push(rule);\r\n                }\r\n            }\r\n            groupsArr.forEach(function (group) {\r\n                if (group.length > 0) {\r\n                    var result_1 = group[0];\r\n                    var space_1 = [];\r\n                    var comma_1 = [new tree.Expression(space_1)];\r\n                    group.forEach(function (rule) {\r\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                            comma_1.push(new tree.Expression(space_1 = []));\r\n                        }\r\n                        space_1.push(rule.value);\r\n                        result_1.important = result_1.important || rule.important;\r\n                    });\r\n                    result_1.value = new tree.Value(comma_1);\r\n                }\r\n            });\r\n        }\r\n    };\n\n    var visitors = {\r\n        Visitor: Visitor,\r\n        ImportVisitor: ImportVisitor,\r\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n        ExtendVisitor: ProcessExtendsVisitor,\r\n        JoinSelectorVisitor: JoinSelectorVisitor,\r\n        ToCSSVisitor: ToCSSVisitor\r\n    };\n\n    // Split the input into chunks.\r\n    function chunker (input, fail) {\r\n        var len = input.length;\r\n        var level = 0;\r\n        var parenLevel = 0;\r\n        var lastOpening;\r\n        var lastOpeningParen;\r\n        var lastMultiComment;\r\n        var lastMultiCommentEndBrace;\r\n        var chunks = [];\r\n        var emitFrom = 0;\r\n        var chunkerCurrentIndex;\r\n        var currentChunkStartIndex;\r\n        var cc;\r\n        var cc2;\r\n        var matched;\r\n        function emitChunk(force) {\r\n            var len = chunkerCurrentIndex - emitFrom;\r\n            if (((len < 512) && !force) || !len) {\r\n                return;\r\n            }\r\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n            emitFrom = chunkerCurrentIndex + 1;\r\n        }\r\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n            cc = input.charCodeAt(chunkerCurrentIndex);\r\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n                // a-z or whitespace\r\n                continue;\r\n            }\r\n            switch (cc) {\r\n                case 40: // (\r\n                    parenLevel++;\r\n                    lastOpeningParen = chunkerCurrentIndex;\r\n                    continue;\r\n                case 41: // )\r\n                    if (--parenLevel < 0) {\r\n                        return fail('missing opening `(`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n                case 59: // ;\r\n                    if (!parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 123: // {\r\n                    level++;\r\n                    lastOpening = chunkerCurrentIndex;\r\n                    continue;\r\n                case 125: // }\r\n                    if (--level < 0) {\r\n                        return fail('missing opening `{`', chunkerCurrentIndex);\r\n                    }\r\n                    if (!level && !parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 92: // \\\r\n                    if (chunkerCurrentIndex < len - 1) {\r\n                        chunkerCurrentIndex++;\r\n                        continue;\r\n                    }\r\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                case 34:\r\n                case 39:\r\n                case 96: // \", ' and `\r\n                    matched = 0;\r\n                    currentChunkStartIndex = chunkerCurrentIndex;\r\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                        if (cc2 > 96) {\r\n                            continue;\r\n                        }\r\n                        if (cc2 == cc) {\r\n                            matched = 1;\r\n                            break;\r\n                        }\r\n                        if (cc2 == 92) { // \\\r\n                            if (chunkerCurrentIndex == len - 1) {\r\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                            }\r\n                            chunkerCurrentIndex++;\r\n                        }\r\n                    }\r\n                    if (matched) {\r\n                        continue;\r\n                    }\r\n                    return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n                case 47: // /, check for comment\r\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                        continue;\r\n                    }\r\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                    if (cc2 == 47) {\r\n                        // //, find lnfeed\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (cc2 == 42) {\r\n                        // /*, find */\r\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if (cc2 == 125) {\r\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                            }\r\n                            if (cc2 != 42) {\r\n                                continue;\r\n                            }\r\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (chunkerCurrentIndex == len - 1) {\r\n                            return fail('missing closing `*/`', currentChunkStartIndex);\r\n                        }\r\n                        chunkerCurrentIndex++;\r\n                    }\r\n                    continue;\r\n                case 42: // *, check for unmatched */\r\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        if (level !== 0) {\r\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n                return fail('missing closing `}` or `*/`', lastOpening);\r\n            }\r\n            else {\r\n                return fail('missing closing `}`', lastOpening);\r\n            }\r\n        }\r\n        else if (parenLevel !== 0) {\r\n            return fail('missing closing `)`', lastOpeningParen);\r\n        }\r\n        emitChunk(true);\r\n        return chunks;\r\n    }\n\n    var getParserInput = (function () {\r\n        var // Less input string\r\n        input;\r\n        var // current chunk\r\n        j;\r\n        var // holds state for backtracking\r\n        saveStack = [];\r\n        var // furthest index the parser has gone to\r\n        furthest;\r\n        var // if this is furthest we got to, this is the probably cause\r\n        furthestPossibleErrorMessage;\r\n        var // chunkified input\r\n        chunks;\r\n        var // current chunk\r\n        current;\r\n        var // index of current chunk, in `input`\r\n        currentPos;\r\n        var parserInput = {};\r\n        var CHARCODE_SPACE = 32;\r\n        var CHARCODE_TAB = 9;\r\n        var CHARCODE_LF = 10;\r\n        var CHARCODE_CR = 13;\r\n        var CHARCODE_PLUS = 43;\r\n        var CHARCODE_COMMA = 44;\r\n        var CHARCODE_FORWARD_SLASH = 47;\r\n        var CHARCODE_9 = 57;\r\n        function skipWhitespace(length) {\r\n            var oldi = parserInput.i;\r\n            var oldj = j;\r\n            var curr = parserInput.i - currentPos;\r\n            var endIndex = parserInput.i + current.length - curr;\r\n            var mem = (parserInput.i += length);\r\n            var inp = input;\r\n            var c;\r\n            var nextChar;\r\n            var comment;\r\n            for (; parserInput.i < endIndex; parserInput.i++) {\r\n                c = inp.charCodeAt(parserInput.i);\r\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                    nextChar = inp.charAt(parserInput.i + 1);\r\n                    if (nextChar === '/') {\r\n                        comment = { index: parserInput.i, isLineComment: true };\r\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                        if (nextNewLine < 0) {\r\n                            nextNewLine = endIndex;\r\n                        }\r\n                        parserInput.i = nextNewLine;\r\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                        parserInput.commentStore.push(comment);\r\n                        continue;\r\n                    }\r\n                    else if (nextChar === '*') {\r\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                        if (nextStarSlash >= 0) {\r\n                            comment = {\r\n                                index: parserInput.i,\r\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                                isLineComment: false\r\n                            };\r\n                            parserInput.i += comment.text.length - 1;\r\n                            parserInput.commentStore.push(comment);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                    break;\r\n                }\r\n            }\r\n            current = current.slice(length + parserInput.i - mem + curr);\r\n            currentPos = parserInput.i;\r\n            if (!current.length) {\r\n                if (j < chunks.length - 1) {\r\n                    current = chunks[++j];\r\n                    skipWhitespace(0); // skip space at the beginning of a chunk\r\n                    return true; // things changed\r\n                }\r\n                parserInput.finished = true;\r\n            }\r\n            return oldi !== parserInput.i || oldj !== j;\r\n        }\r\n        parserInput.save = function () {\r\n            currentPos = parserInput.i;\r\n            saveStack.push({ current: current, i: parserInput.i, j: j });\r\n        };\r\n        parserInput.restore = function (possibleErrorMessage) {\r\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n                furthest = parserInput.i;\r\n                furthestPossibleErrorMessage = possibleErrorMessage;\r\n            }\r\n            var state = saveStack.pop();\r\n            current = state.current;\r\n            currentPos = parserInput.i = state.i;\r\n            j = state.j;\r\n        };\r\n        parserInput.forget = function () {\r\n            saveStack.pop();\r\n        };\r\n        parserInput.isWhitespace = function (offset) {\r\n            var pos = parserInput.i + (offset || 0);\r\n            var code = input.charCodeAt(pos);\r\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n        };\r\n        // Specialization of $(tok)\r\n        parserInput.$re = function (tok) {\r\n            if (parserInput.i > currentPos) {\r\n                current = current.slice(parserInput.i - currentPos);\r\n                currentPos = parserInput.i;\r\n            }\r\n            var m = tok.exec(current);\r\n            if (!m) {\r\n                return null;\r\n            }\r\n            skipWhitespace(m[0].length);\r\n            if (typeof m === 'string') {\r\n                return m;\r\n            }\r\n            return m.length === 1 ? m[0] : m;\r\n        };\r\n        parserInput.$char = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            skipWhitespace(1);\r\n            return tok;\r\n        };\r\n        parserInput.$str = function (tok) {\r\n            var tokLength = tok.length;\r\n            // https://jsperf.com/string-startswith/21\r\n            for (var i = 0; i < tokLength; i++) {\r\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                    return null;\r\n                }\r\n            }\r\n            skipWhitespace(tokLength);\r\n            return tok;\r\n        };\r\n        parserInput.$quoted = function (loc) {\r\n            var pos = loc || parserInput.i;\r\n            var startChar = input.charAt(pos);\r\n            if (startChar !== '\\'' && startChar !== '\"') {\r\n                return;\r\n            }\r\n            var length = input.length;\r\n            var currentPosition = pos;\r\n            for (var i = 1; i + currentPosition < length; i++) {\r\n                var nextChar = input.charAt(i + currentPosition);\r\n                switch (nextChar) {\r\n                    case '\\\\':\r\n                        i++;\r\n                        continue;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break;\r\n                    case startChar:\r\n                        var str = input.substr(currentPosition, i + 1);\r\n                        if (!loc && loc !== 0) {\r\n                            skipWhitespace(i + 1);\r\n                            return str;\r\n                        }\r\n                        return [startChar, str];\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n         * until matching token (outside of blocks)\r\n         */\r\n        parserInput.$parseUntil = function (tok) {\r\n            var quote = '';\r\n            var returnVal = null;\r\n            var inComment = false;\r\n            var blockDepth = 0;\r\n            var blockStack = [];\r\n            var parseGroups = [];\r\n            var length = input.length;\r\n            var startPos = parserInput.i;\r\n            var lastPos = parserInput.i;\r\n            var i = parserInput.i;\r\n            var loop = true;\r\n            var testChar;\r\n            if (typeof tok === 'string') {\r\n                testChar = function (char) { return char === tok; };\r\n            }\r\n            else {\r\n                testChar = function (char) { return tok.test(char); };\r\n            }\r\n            do {\r\n                var nextChar = input.charAt(i);\r\n                if (blockDepth === 0 && testChar(nextChar)) {\r\n                    returnVal = input.substr(lastPos, i - lastPos);\r\n                    if (returnVal) {\r\n                        parseGroups.push(returnVal);\r\n                    }\r\n                    else {\r\n                        parseGroups.push(' ');\r\n                    }\r\n                    returnVal = parseGroups;\r\n                    skipWhitespace(i - startPos);\r\n                    loop = false;\r\n                }\r\n                else {\r\n                    if (inComment) {\r\n                        if (nextChar === '*' &&\r\n                            input.charAt(i + 1) === '/') {\r\n                            i++;\r\n                            blockDepth--;\r\n                            inComment = false;\r\n                        }\r\n                        i++;\r\n                        continue;\r\n                    }\r\n                    switch (nextChar) {\r\n                        case '\\\\':\r\n                            i++;\r\n                            nextChar = input.charAt(i);\r\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                            lastPos = i + 1;\r\n                            break;\r\n                        case '/':\r\n                            if (input.charAt(i + 1) === '*') {\r\n                                i++;\r\n                                inComment = true;\r\n                                blockDepth++;\r\n                            }\r\n                            break;\r\n                        case '\\'':\r\n                        case '\"':\r\n                            quote = parserInput.$quoted(i);\r\n                            if (quote) {\r\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                                i += quote[1].length - 1;\r\n                                lastPos = i + 1;\r\n                            }\r\n                            else {\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = nextChar;\r\n                                loop = false;\r\n                            }\r\n                            break;\r\n                        case '{':\r\n                            blockStack.push('}');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '(':\r\n                            blockStack.push(')');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '[':\r\n                            blockStack.push(']');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '}':\r\n                        case ')':\r\n                        case ']':\r\n                            var expected = blockStack.pop();\r\n                            if (nextChar === expected) {\r\n                                blockDepth--;\r\n                            }\r\n                            else {\r\n                                // move the parser to the error and return expected\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = expected;\r\n                                loop = false;\r\n                            }\r\n                    }\r\n                    i++;\r\n                    if (i > length) {\r\n                        loop = false;\r\n                    }\r\n                }\r\n            } while (loop);\r\n            return returnVal ? returnVal : null;\r\n        };\r\n        parserInput.autoCommentAbsorb = true;\r\n        parserInput.commentStore = [];\r\n        parserInput.finished = false;\r\n        // Same as $(), but don't change the state of the parser,\r\n        // just return the match.\r\n        parserInput.peek = function (tok) {\r\n            if (typeof tok === 'string') {\r\n                // https://jsperf.com/string-startswith/21\r\n                for (var i = 0; i < tok.length; i++) {\r\n                    if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                return tok.test(current);\r\n            }\r\n        };\r\n        // Specialization of peek()\r\n        // TODO remove or change some currentChar calls to peekChar\r\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n        parserInput.getInput = function () { return input; };\r\n        parserInput.peekNotNumeric = function () {\r\n            var c = input.charCodeAt(parserInput.i);\r\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n        };\r\n        parserInput.start = function (str, chunkInput, failFunction) {\r\n            input = str;\r\n            parserInput.i = j = currentPos = furthest = 0;\r\n            // chunking apparently makes things quicker (but my tests indicate\r\n            // it might actually make things slower in node at least)\r\n            // and it is a non-perfect parse - it can't recognise\r\n            // unquoted urls, meaning it can't distinguish comments\r\n            // meaning comments with quotes or {}() in them get 'counted'\r\n            // and then lead to parse errors.\r\n            // In addition if the chunking chunks in the wrong place we might\r\n            // not be able to parse a parser statement in one go\r\n            // this is officially deprecated but can be switched on via an option\r\n            // in the case it causes too much performance issues.\r\n            if (chunkInput) {\r\n                chunks = chunker(str, failFunction);\r\n            }\r\n            else {\r\n                chunks = [str];\r\n            }\r\n            current = chunks[0];\r\n            skipWhitespace(0);\r\n        };\r\n        parserInput.end = function () {\r\n            var message;\r\n            var isFinished = parserInput.i >= input.length;\r\n            if (parserInput.i < furthest) {\r\n                message = furthestPossibleErrorMessage;\r\n                parserInput.i = furthest;\r\n            }\r\n            return {\r\n                isFinished: isFinished,\r\n                furthest: parserInput.i,\r\n                furthestPossibleErrorMessage: message,\r\n                furthestReachedEnd: parserInput.i >= input.length - 1,\r\n                furthestChar: input[parserInput.i]\r\n            };\r\n        };\r\n        return parserInput;\r\n    });\n\n    //\r\n    // less.js - parser\r\n    //\r\n    //    A relatively straight-forward predictive parser.\r\n    //    There is no tokenization/lexing stage, the input is parsed\r\n    //    in one sweep.\r\n    //\r\n    //    To make the parser fast enough to run in the browser, several\r\n    //    optimization had to be made:\r\n    //\r\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n    //      The solution is to chunkify the input into smaller strings.\r\n    //      The chunks are stored in the `chunks` var,\r\n    //      `j` holds the current chunk index, and `currentPos` holds\r\n    //      the index of the current chunk in relation to `input`.\r\n    //      This gives us an almost 4x speed-up.\r\n    //\r\n    //    - In many cases, we don't need to match individual tokens;\r\n    //      for example, if a value doesn't hold any variables, operations\r\n    //      or dynamic references, the parser can effectively 'skip' it,\r\n    //      treating it as a literal.\r\n    //      An example would be '1px solid #000' - which evaluates to itself,\r\n    //      we don't need to know what the individual components are.\r\n    //      The drawback, of course is that you don't get the benefits of\r\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n    //      and a smaller speed-up in the code-gen.\r\n    //\r\n    //\r\n    //    Token matching is done with the `$` function, which either takes\r\n    //    a terminal string or regexp, or a non-terminal function to call.\r\n    //    It also takes care of moving all the indices forwards.\r\n    //\r\n    var Parser = function Parser(context, imports, fileInfo) {\r\n        var parsers;\r\n        var parserInput = getParserInput();\r\n        function error(msg, type) {\r\n            throw new LessError({\r\n                index: parserInput.i,\r\n                filename: fileInfo.filename,\r\n                type: type || 'Syntax',\r\n                message: msg\r\n            }, imports);\r\n        }\r\n        function expect(arg, msg) {\r\n            // some older browsers return typeof 'function' for RegExp\r\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            error(msg || (typeof arg === 'string'\r\n                ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n                : 'unexpected token'));\r\n        }\r\n        // Specialization of expect()\r\n        function expectChar(arg, msg) {\r\n            if (parserInput.$char(arg)) {\r\n                return arg;\r\n            }\r\n            error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n        }\r\n        function getDebugInfo(index) {\r\n            var filename = fileInfo.filename;\r\n            return {\r\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n                fileName: filename\r\n            };\r\n        }\r\n        /**\r\n         *  Used after initial parsing to create nodes on the fly\r\n         *\r\n         *  @param {String} str          - string to parse\r\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n         *  @param {Number} currentIndex - start number to begin indexing\r\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n         */\r\n        function parseNode(str, parseList, currentIndex, fileInfo, callback) {\r\n            var result;\r\n            var returnNodes = [];\r\n            var parser = parserInput;\r\n            try {\r\n                parser.start(str, false, function fail(msg, index) {\r\n                    callback({\r\n                        message: msg,\r\n                        index: index + currentIndex\r\n                    });\r\n                });\r\n                for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\r\n                    i = parser.i;\r\n                    result = parsers[p]();\r\n                    if (result) {\r\n                        try {\r\n                            result._index = i + currentIndex;\r\n                            result._fileInfo = fileInfo;\r\n                        }\r\n                        catch (e) { }\r\n                        returnNodes.push(result);\r\n                    }\r\n                    else {\r\n                        returnNodes.push(null);\r\n                    }\r\n                }\r\n                var endInfo = parser.end();\r\n                if (endInfo.isFinished) {\r\n                    callback(null, returnNodes);\r\n                }\r\n                else {\r\n                    callback(true, null);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new LessError({\r\n                    index: e.index + currentIndex,\r\n                    message: e.message\r\n                }, imports, fileInfo.filename);\r\n            }\r\n        }\r\n        //\r\n        // The Parser\r\n        //\r\n        return {\r\n            parserInput: parserInput,\r\n            imports: imports,\r\n            fileInfo: fileInfo,\r\n            parseNode: parseNode,\r\n            //\r\n            // Parse an input string into an abstract syntax tree,\r\n            // @param str A string containing 'less' markup\r\n            // @param callback call `callback` when done.\r\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n            //\r\n            parse: function (str, callback, additionalData) {\r\n                var root;\r\n                var error = null;\r\n                var globalVars;\r\n                var modifyVars;\r\n                var ignored;\r\n                var preText = '';\r\n                globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n                if (context.pluginManager) {\r\n                    var preProcessors = context.pluginManager.getPreProcessors();\r\n                    for (var i = 0; i < preProcessors.length; i++) {\r\n                        str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                    }\r\n                }\r\n                if (globalVars || (additionalData && additionalData.banner)) {\r\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                    ignored = imports.contentsIgnoredChars;\r\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                    ignored[fileInfo.filename] += preText.length;\r\n                }\r\n                str = str.replace(/\\r\\n?/g, '\\n');\r\n                // Remove potential UTF Byte Order Mark\r\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n                imports.contents[fileInfo.filename] = str;\r\n                // Start with the primary rule.\r\n                // The whole syntax tree is held under a Ruleset node,\r\n                // with the `root` property set to true, so no `{}` are\r\n                // output. The callback is called when the input is parsed.\r\n                try {\r\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                        throw new LessError({\r\n                            index: index,\r\n                            type: 'Parse',\r\n                            message: msg,\r\n                            filename: fileInfo.filename\r\n                        }, imports);\r\n                    });\r\n                    tree.Node.prototype.parse = this;\r\n                    root = new tree.Ruleset(null, this.parsers.primary());\r\n                    tree.Node.prototype.rootNode = root;\r\n                    root.root = true;\r\n                    root.firstRoot = true;\r\n                    root.functionRegistry = functionRegistry.inherit();\r\n                }\r\n                catch (e) {\r\n                    return callback(new LessError(e, imports, fileInfo.filename));\r\n                }\r\n                // If `i` is smaller than the `input.length - 1`,\r\n                // it means the parser wasn't able to parse the whole\r\n                // string, so we've got a parsing error.\r\n                //\r\n                // We try to extract a \\n delimited string,\r\n                // showing the line where the parse error occurred.\r\n                // We split it up into two parts (the part which parsed,\r\n                // and the part which didn't), so we can color them differently.\r\n                var endInfo = parserInput.end();\r\n                if (!endInfo.isFinished) {\r\n                    var message = endInfo.furthestPossibleErrorMessage;\r\n                    if (!message) {\r\n                        message = 'Unrecognised input';\r\n                        if (endInfo.furthestChar === '}') {\r\n                            message += '. Possibly missing opening \\'{\\'';\r\n                        }\r\n                        else if (endInfo.furthestChar === ')') {\r\n                            message += '. Possibly missing opening \\'(\\'';\r\n                        }\r\n                        else if (endInfo.furthestReachedEnd) {\r\n                            message += '. Possibly missing something';\r\n                        }\r\n                    }\r\n                    error = new LessError({\r\n                        type: 'Parse',\r\n                        message: message,\r\n                        index: endInfo.furthest,\r\n                        filename: fileInfo.filename\r\n                    }, imports);\r\n                }\r\n                var finish = function (e) {\r\n                    e = error || e || imports.error;\r\n                    if (e) {\r\n                        if (!(e instanceof LessError)) {\r\n                            e = new LessError(e, imports, fileInfo.filename);\r\n                        }\r\n                        return callback(e);\r\n                    }\r\n                    else {\r\n                        return callback(null, root);\r\n                    }\r\n                };\r\n                if (context.processImports !== false) {\r\n                    new visitors.ImportVisitor(imports, finish)\r\n                        .run(root);\r\n                }\r\n                else {\r\n                    return finish();\r\n                }\r\n            },\r\n            //\r\n            // Here in, the parsing rules/functions\r\n            //\r\n            // The basic structure of the syntax tree generated is as follows:\r\n            //\r\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n            //\r\n            // Here's some Less code:\r\n            //\r\n            //    .class {\r\n            //      color: #fff;\r\n            //      border: 1px solid #000;\r\n            //      width: @w + 4px;\r\n            //      > .child {...}\r\n            //    }\r\n            //\r\n            // And here's what the parse tree might look like:\r\n            //\r\n            //     Ruleset (Selector '.class', [\r\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n            //         Ruleset (Selector [Element '>', '.child'], [...])\r\n            //     ])\r\n            //\r\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n            //  first, before parsing, that's when we use `peek()`.\r\n            //\r\n            parsers: parsers = {\r\n                //\r\n                // The `primary` rule is the *entry* and *exit* point of the parser.\r\n                // The rules here can appear at any level of the parse tree.\r\n                //\r\n                // The recursive nature of the grammar is an interplay between the `block`\r\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n                // as represented by this simplified grammar:\r\n                //\r\n                //     primary  →  (ruleset | declaration)+\r\n                //     ruleset  →  selector+ block\r\n                //     block    →  '{' primary '}'\r\n                //\r\n                // Only at one point is the primary rule not called from the\r\n                // block rule: at the root level.\r\n                //\r\n                primary: function () {\r\n                    var mixin = this.mixin;\r\n                    var root = [];\r\n                    var node;\r\n                    while (true) {\r\n                        while (true) {\r\n                            node = this.comment();\r\n                            if (!node) {\r\n                                break;\r\n                            }\r\n                            root.push(node);\r\n                        }\r\n                        // always process comments before deciding if finished\r\n                        if (parserInput.finished) {\r\n                            break;\r\n                        }\r\n                        if (parserInput.peek('}')) {\r\n                            break;\r\n                        }\r\n                        node = this.extendRule();\r\n                        if (node) {\r\n                            root = root.concat(node);\r\n                            continue;\r\n                        }\r\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                        if (node) {\r\n                            root.push(node);\r\n                        }\r\n                        else {\r\n                            var foundSemiColon = false;\r\n                            while (parserInput.$char(';')) {\r\n                                foundSemiColon = true;\r\n                            }\r\n                            if (!foundSemiColon) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return root;\r\n                },\r\n                // comments are collected by the main parsing mechanism and then assigned to nodes\r\n                // where the current structure allows it\r\n                comment: function () {\r\n                    if (parserInput.commentStore.length) {\r\n                        var comment = parserInput.commentStore.shift();\r\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Entities are tokens which can be found inside an Expression\r\n                //\r\n                entities: {\r\n                    mixinLookup: function () {\r\n                        return parsers.mixin.call(true, true);\r\n                    },\r\n                    //\r\n                    // A string, which supports escaping \" and '\r\n                    //\r\n                    //     \"milky way\" 'he\\'s the one!'\r\n                    //\r\n                    quoted: function (forceEscaped) {\r\n                        var str;\r\n                        var index = parserInput.i;\r\n                        var isEscaped = false;\r\n                        parserInput.save();\r\n                        if (parserInput.$char('~')) {\r\n                            isEscaped = true;\r\n                        }\r\n                        else if (forceEscaped) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        str = parserInput.$quoted();\r\n                        if (!str) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A catch-all word, such as:\r\n                    //\r\n                    //     black border-collapse\r\n                    //\r\n                    keyword: function () {\r\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                        if (k) {\r\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A function call\r\n                    //\r\n                    //     rgb(255, 0, 255)\r\n                    //\r\n                    // The arguments are parsed with the `entities.arguments` parser.\r\n                    //\r\n                    call: function () {\r\n                        var name;\r\n                        var args;\r\n                        var func;\r\n                        var index = parserInput.i;\r\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                        if (parserInput.peek(/^url\\(/i)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\r\n                        if (!name) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        name = name[1];\r\n                        func = this.customFuncCall(name);\r\n                        if (func) {\r\n                            args = func.parse();\r\n                            if (args && func.stop) {\r\n                                parserInput.forget();\r\n                                return args;\r\n                            }\r\n                        }\r\n                        args = this.arguments(args);\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Call)(name, args, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // Parsing rules for functions with non-standard args, e.g.:\r\n                    //\r\n                    //     boolean(not(2 > 1))\r\n                    //\r\n                    //     This is a quick prototype, to be modified/improved when\r\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                    //\r\n                    customFuncCall: function (name) {\r\n                        /* Ideally the table is to be moved out of here for faster perf.,\r\n                           but it's quite tricky since it relies on all these `parsers`\r\n                           and `expect` available only here */\r\n                        return {\r\n                            alpha: f(parsers.ieAlpha, true),\r\n                            boolean: f(condition),\r\n                            'if': f(condition)\r\n                        }[name.toLowerCase()];\r\n                        function f(parse, stop) {\r\n                            return {\r\n                                parse: parse,\r\n                                stop: stop // when true - stop after parse() and return its result, \r\n                                // otherwise continue for plain args\r\n                            };\r\n                        }\r\n                        function condition() {\r\n                            return [expect(parsers.condition, 'expected condition')];\r\n                        }\r\n                    },\r\n                    arguments: function (prevArgs) {\r\n                        var argsComma = prevArgs || [];\r\n                        var argsSemiColon = [];\r\n                        var isSemiColonSeparated;\r\n                        var value;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (prevArgs) {\r\n                                prevArgs = false;\r\n                            }\r\n                            else {\r\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                                if (!value) {\r\n                                    break;\r\n                                }\r\n                                if (value.value && value.value.length == 1) {\r\n                                    value = value.value[0];\r\n                                }\r\n                                argsComma.push(value);\r\n                            }\r\n                            if (parserInput.$char(',')) {\r\n                                continue;\r\n                            }\r\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                                isSemiColonSeparated = true;\r\n                                value = (argsComma.length < 1) ? argsComma[0]\r\n                                    : new tree.Value(argsComma);\r\n                                argsSemiColon.push(value);\r\n                                argsComma = [];\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                    },\r\n                    literal: function () {\r\n                        return this.dimension() ||\r\n                            this.color() ||\r\n                            this.quoted() ||\r\n                            this.unicodeDescriptor();\r\n                    },\r\n                    // Assignments are argument entities for calls.\r\n                    // They are present in ie filter properties as shown below.\r\n                    //\r\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                    //\r\n                    assignment: function () {\r\n                        var key;\r\n                        var value;\r\n                        parserInput.save();\r\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                        if (!key) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char('=')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        value = parsers.entity();\r\n                        if (value) {\r\n                            parserInput.forget();\r\n                            return new (tree.Assignment)(key, value);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    //\r\n                    // Parse url() tokens\r\n                    //\r\n                    // We use a specific rule for urls, because they don't really behave like\r\n                    // standard function calls. The difference is that the argument doesn't have\r\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                    //\r\n                    url: function () {\r\n                        var value;\r\n                        var index = parserInput.i;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        if (!parserInput.$str('url(')) {\r\n                            parserInput.autoCommentAbsorb = true;\r\n                            return;\r\n                        }\r\n                        value = this.quoted() || this.variable() || this.property() ||\r\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\r\n                        parserInput.autoCommentAbsorb = true;\r\n                        expectChar(')');\r\n                        return new (tree.URL)((value.value != null ||\r\n                            value instanceof tree.Variable ||\r\n                            value instanceof tree.Property) ?\r\n                            value : new (tree.Anonymous)(value, index), index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A Variable entity, such as `@fink`, in\r\n                    //\r\n                    //     width: @fink + 2px\r\n                    //\r\n                    // We use a different parser for variable definitions,\r\n                    // see `parsers.variable`.\r\n                    //\r\n                    variable: function () {\r\n                        var ch;\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                            ch = parserInput.currentChar();\r\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                                // this may be a VariableCall lookup\r\n                                var result = parsers.variableCall(name);\r\n                                if (result) {\r\n                                    parserInput.forget();\r\n                                    return result;\r\n                                }\r\n                            }\r\n                            parserInput.forget();\r\n                            return new (tree.Variable)(name, index, fileInfo);\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    // A variable entity using the protective {} e.g. @{var}\r\n                    variableCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Property accessor, such as `$color`, in\r\n                    //\r\n                    //     background-color: $color\r\n                    //\r\n                    property: function () {\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                            return new (tree.Property)(name, index, fileInfo);\r\n                        }\r\n                    },\r\n                    // A property entity useing the protective {} e.g. ${prop}\r\n                    propertyCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Hexadecimal color\r\n                    //\r\n                    //     #4F3C2F\r\n                    //\r\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                    //\r\n                    color: function () {\r\n                        var rgb;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\r\n                            if (!rgb[2]) {\r\n                                parserInput.forget();\r\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    colorKeyword: function () {\r\n                        parserInput.save();\r\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                        if (!k) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        parserInput.restore();\r\n                        var color = tree.Color.fromKeyword(k);\r\n                        if (color) {\r\n                            parserInput.$str(k);\r\n                            return color;\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Dimension, that is, a number and a unit\r\n                    //\r\n                    //     0.5em 95%\r\n                    //\r\n                    dimension: function () {\r\n                        if (parserInput.peekNotNumeric()) {\r\n                            return;\r\n                        }\r\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                        if (value) {\r\n                            return new (tree.Dimension)(value[1], value[2]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A unicode descriptor, as is used in unicode-range\r\n                    //\r\n                    // U+0??  or U+00A1-00A9\r\n                    //\r\n                    unicodeDescriptor: function () {\r\n                        var ud;\r\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\r\n                        if (ud) {\r\n                            return new (tree.UnicodeDescriptor)(ud[0]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // JavaScript code to be evaluated\r\n                    //\r\n                    //     `window.location.href`\r\n                    //\r\n                    javascript: function () {\r\n                        var js;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        var escape = parserInput.$char('~');\r\n                        var jsQuote = parserInput.$char('`');\r\n                        if (!jsQuote) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        js = parserInput.$re(/^[^`]*`/);\r\n                        if (js) {\r\n                            parserInput.forget();\r\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\r\n                        }\r\n                        parserInput.restore('invalid javascript definition');\r\n                    }\r\n                },\r\n                //\r\n                // The variable part of a variable definition. Used in the `rule` parser\r\n                //\r\n                //     @fink:\r\n                //\r\n                variable: function () {\r\n                    var name;\r\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                //\r\n                // Call a variable value to retrieve a detached ruleset\r\n                // or a value from a detached ruleset's rules.\r\n                //\r\n                //     @fink();\r\n                //     @fink;\r\n                //     color: @fink[@color];\r\n                //\r\n                variableCall: function (parsedName) {\r\n                    var lookups;\r\n                    var i = parserInput.i;\r\n                    var inValue = !!parsedName;\r\n                    var name = parsedName;\r\n                    parserInput.save();\r\n                    if (name || (parserInput.currentChar() === '@'\r\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                        lookups = this.mixin.ruleLookups();\r\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                            return;\r\n                        }\r\n                        if (!inValue) {\r\n                            name = name[1];\r\n                        }\r\n                        var call = new tree.VariableCall(name, i, fileInfo);\r\n                        if (!inValue && parsers.end()) {\r\n                            parserInput.forget();\r\n                            return call;\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // extend syntax - used to extend selectors\r\n                //\r\n                extend: function (isRule) {\r\n                    var elements;\r\n                    var e;\r\n                    var index = parserInput.i;\r\n                    var option;\r\n                    var extendList;\r\n                    var extend;\r\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                        return;\r\n                    }\r\n                    do {\r\n                        option = null;\r\n                        elements = null;\r\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                            e = this.element();\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                        }\r\n                        option = option && option[1];\r\n                        if (!elements) {\r\n                            error('Missing target selector for :extend().');\r\n                        }\r\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\r\n                        if (extendList) {\r\n                            extendList.push(extend);\r\n                        }\r\n                        else {\r\n                            extendList = [extend];\r\n                        }\r\n                    } while (parserInput.$char(','));\r\n                    expect(/^\\)/);\r\n                    if (isRule) {\r\n                        expect(/^;/);\r\n                    }\r\n                    return extendList;\r\n                },\r\n                //\r\n                // extendRule - used in a rule to extend all the parent selectors\r\n                //\r\n                extendRule: function () {\r\n                    return this.extend(true);\r\n                },\r\n                //\r\n                // Mixins\r\n                //\r\n                mixin: {\r\n                    //\r\n                    // A Mixin call, with an optional argument list\r\n                    //\r\n                    //     #mixins > .square(#fff);\r\n                    //     #mixins.square(#fff);\r\n                    //     .rounded(4px, black);\r\n                    //     .button;\r\n                    //\r\n                    // We can lookup / return a value using the lookup syntax:\r\n                    //\r\n                    //     color: #mixin.square(#fff)[@color];\r\n                    //\r\n                    // The `while` loop is there because mixins can be\r\n                    // namespaced, but we only support the child and descendant\r\n                    // selector for now.\r\n                    //\r\n                    call: function (inValue, getLookup) {\r\n                        var s = parserInput.currentChar();\r\n                        var important = false;\r\n                        var lookups;\r\n                        var index = parserInput.i;\r\n                        var elements;\r\n                        var args;\r\n                        var hasParens;\r\n                        if (s !== '.' && s !== '#') {\r\n                            return;\r\n                        }\r\n                        parserInput.save(); // stop us absorbing part of an invalid selector\r\n                        elements = this.elements();\r\n                        if (elements) {\r\n                            if (parserInput.$char('(')) {\r\n                                args = this.args(true).args;\r\n                                expectChar(')');\r\n                                hasParens = true;\r\n                            }\r\n                            if (getLookup !== false) {\r\n                                lookups = this.ruleLookups();\r\n                            }\r\n                            if (getLookup === true && !lookups) {\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (inValue && !lookups && !hasParens) {\r\n                                // This isn't a valid in-value mixin call\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (!inValue && parsers.important()) {\r\n                                important = true;\r\n                            }\r\n                            if (inValue || parsers.end()) {\r\n                                parserInput.forget();\r\n                                var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\r\n                                if (lookups) {\r\n                                    return new tree.NamespaceValue(mixin, lookups);\r\n                                }\r\n                                else {\r\n                                    return mixin;\r\n                                }\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    /**\r\n                     * Matching elements for mixins\r\n                     * (Start with . or # and can have > )\r\n                     */\r\n                    elements: function () {\r\n                        var elements;\r\n                        var e;\r\n                        var c;\r\n                        var elem;\r\n                        var elemIndex;\r\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                        while (true) {\r\n                            elemIndex = parserInput.i;\r\n                            e = parserInput.$re(re);\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\r\n                            if (elements) {\r\n                                elements.push(elem);\r\n                            }\r\n                            else {\r\n                                elements = [elem];\r\n                            }\r\n                            c = parserInput.$char('>');\r\n                        }\r\n                        return elements;\r\n                    },\r\n                    args: function (isCall) {\r\n                        var entities = parsers.entities;\r\n                        var returner = { args: null, variadic: false };\r\n                        var expressions = [];\r\n                        var argsSemiColon = [];\r\n                        var argsComma = [];\r\n                        var isSemiColonSeparated;\r\n                        var expressionContainsNamed;\r\n                        var name;\r\n                        var nameLoop;\r\n                        var value;\r\n                        var arg;\r\n                        var expand;\r\n                        var hasSep = true;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (isCall) {\r\n                                arg = parsers.detachedRuleset() || parsers.expression();\r\n                            }\r\n                            else {\r\n                                parserInput.commentStore.length = 0;\r\n                                if (parserInput.$str('...')) {\r\n                                    returner.variadic = true;\r\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                        isSemiColonSeparated = true;\r\n                                    }\r\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                        .push({ variadic: true });\r\n                                    break;\r\n                                }\r\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                            }\r\n                            if (!arg || !hasSep) {\r\n                                break;\r\n                            }\r\n                            nameLoop = null;\r\n                            if (arg.throwAwayComments) {\r\n                                arg.throwAwayComments();\r\n                            }\r\n                            value = arg;\r\n                            var val = null;\r\n                            if (isCall) {\r\n                                // Variable\r\n                                if (arg.value && arg.value.length == 1) {\r\n                                    val = arg.value[0];\r\n                                }\r\n                            }\r\n                            else {\r\n                                val = arg;\r\n                            }\r\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                                if (parserInput.$char(':')) {\r\n                                    if (expressions.length > 0) {\r\n                                        if (isSemiColonSeparated) {\r\n                                            error('Cannot mix ; and , as delimiter types');\r\n                                        }\r\n                                        expressionContainsNamed = true;\r\n                                    }\r\n                                    value = parsers.detachedRuleset() || parsers.expression();\r\n                                    if (!value) {\r\n                                        if (isCall) {\r\n                                            error('could not understand value for named argument');\r\n                                        }\r\n                                        else {\r\n                                            parserInput.restore();\r\n                                            returner.args = [];\r\n                                            return returner;\r\n                                        }\r\n                                    }\r\n                                    nameLoop = (name = val.name);\r\n                                }\r\n                                else if (parserInput.$str('...')) {\r\n                                    if (!isCall) {\r\n                                        returner.variadic = true;\r\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                            isSemiColonSeparated = true;\r\n                                        }\r\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                            .push({ name: arg.name, variadic: true });\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        expand = true;\r\n                                    }\r\n                                }\r\n                                else if (!isCall) {\r\n                                    name = nameLoop = val.name;\r\n                                    value = null;\r\n                                }\r\n                            }\r\n                            if (value) {\r\n                                expressions.push(value);\r\n                            }\r\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                            if (parserInput.$char(',')) {\r\n                                hasSep = true;\r\n                                continue;\r\n                            }\r\n                            hasSep = parserInput.$char(';') === ';';\r\n                            if (hasSep || isSemiColonSeparated) {\r\n                                if (expressionContainsNamed) {\r\n                                    error('Cannot mix ; and , as delimiter types');\r\n                                }\r\n                                isSemiColonSeparated = true;\r\n                                if (expressions.length > 1) {\r\n                                    value = new (tree.Value)(expressions);\r\n                                }\r\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                                name = null;\r\n                                expressions = [];\r\n                                expressionContainsNamed = false;\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                        return returner;\r\n                    },\r\n                    //\r\n                    // A Mixin definition, with a list of parameters\r\n                    //\r\n                    //     .rounded (@radius: 2px, @color) {\r\n                    //        ...\r\n                    //     }\r\n                    //\r\n                    // Until we have a finer grained state-machine, we have to\r\n                    // do a look-ahead, to make sure we don't have a mixin call.\r\n                    // See the `rule` function for more information.\r\n                    //\r\n                    // We start by matching `.rounded (`, and then proceed on to\r\n                    // the argument list, which has optional default values.\r\n                    // We store the parameters in `params`, with a `value` key,\r\n                    // if there is a value, such as in the case of `@radius`.\r\n                    //\r\n                    // Once we've got our params list, and a closing `)`, we parse\r\n                    // the `{...}` block.\r\n                    //\r\n                    definition: function () {\r\n                        var name;\r\n                        var params = [];\r\n                        var match;\r\n                        var ruleset;\r\n                        var cond;\r\n                        var variadic = false;\r\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                            parserInput.peek(/^[^{]*\\}/)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                        if (match) {\r\n                            name = match[1];\r\n                            var argInfo = this.args(false);\r\n                            params = argInfo.args;\r\n                            variadic = argInfo.variadic;\r\n                            // .mixincall(\"@{a}\");\r\n                            // looks a bit like a mixin definition..\r\n                            // also\r\n                            // .mixincall(@a: {rule: set;});\r\n                            // so we have to be nice and restore\r\n                            if (!parserInput.$char(')')) {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                                return;\r\n                            }\r\n                            parserInput.commentStore.length = 0;\r\n                            if (parserInput.$str('when')) { // Guard\r\n                                cond = expect(parsers.conditions, 'expected condition');\r\n                            }\r\n                            ruleset = parsers.block();\r\n                            if (ruleset) {\r\n                                parserInput.forget();\r\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    ruleLookups: function () {\r\n                        var rule;\r\n                        var lookups = [];\r\n                        if (parserInput.currentChar() !== '[') {\r\n                            return;\r\n                        }\r\n                        while (true) {\r\n                            parserInput.save();\r\n                            rule = this.lookupValue();\r\n                            if (!rule && rule !== '') {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            lookups.push(rule);\r\n                            parserInput.forget();\r\n                        }\r\n                        if (lookups.length > 0) {\r\n                            return lookups;\r\n                        }\r\n                    },\r\n                    lookupValue: function () {\r\n                        parserInput.save();\r\n                        if (!parserInput.$char('[')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                        if (!parserInput.$char(']')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (name || name === '') {\r\n                            parserInput.forget();\r\n                            return name;\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                //\r\n                // Entities are the smallest recognized token,\r\n                // and can be found inside a rule's value.\r\n                //\r\n                entity: function () {\r\n                    var entities = this.entities;\r\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                        entities.javascript();\r\n                },\r\n                //\r\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n                // because the `block` rule will be expecting it, but we still need to make sure\r\n                // it's there, if ';' was omitted.\r\n                //\r\n                end: function () {\r\n                    return parserInput.$char(';') || parserInput.peek('}');\r\n                },\r\n                //\r\n                // IE's alpha function\r\n                //\r\n                //     alpha(opacity=88)\r\n                //\r\n                ieAlpha: function () {\r\n                    var value;\r\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                    if (!parserInput.$re(/^opacity=/i)) {\r\n                        return;\r\n                    }\r\n                    value = parserInput.$re(/^\\d+/);\r\n                    if (!value) {\r\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                        value = \"@{\" + value.name.slice(1) + \"}\";\r\n                    }\r\n                    expectChar(')');\r\n                    return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n                },\r\n                //\r\n                // A Selector Element\r\n                //\r\n                //     div\r\n                //     + h1\r\n                //     #socks\r\n                //     input[type=\"text\"]\r\n                //\r\n                // Elements are the building blocks for Selectors,\r\n                // they are made out of a `Combinator` (see combinator rule),\r\n                // and an element name, such as a tag a class, or `*`.\r\n                //\r\n                element: function () {\r\n                    var e;\r\n                    var c;\r\n                    var v;\r\n                    var index = parserInput.i;\r\n                    c = this.combinator();\r\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\r\n                        this.entities.variableCurly();\r\n                    if (!e) {\r\n                        parserInput.save();\r\n                        if (parserInput.$char('(')) {\r\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                                e = new (tree.Paren)(v);\r\n                                parserInput.forget();\r\n                            }\r\n                            else {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                        }\r\n                    }\r\n                    if (e) {\r\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Combinators combine elements together, in a Selector.\r\n                //\r\n                // Because our parser isn't white-space sensitive, special care\r\n                // has to be taken, when parsing the descendant combinator, ` `,\r\n                // as it's an empty space. We have to check the previous character\r\n                // in the input, to see if it's a ` ` character. More info on how\r\n                // we deal with this in *combinator.js*.\r\n                //\r\n                combinator: function () {\r\n                    var c = parserInput.currentChar();\r\n                    if (c === '/') {\r\n                        parserInput.save();\r\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                        if (slashedCombinator) {\r\n                            parserInput.forget();\r\n                            return new (tree.Combinator)(slashedCombinator);\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                        parserInput.i++;\r\n                        if (c === '^' && parserInput.currentChar() === '^') {\r\n                            c = '^^';\r\n                            parserInput.i++;\r\n                        }\r\n                        while (parserInput.isWhitespace()) {\r\n                            parserInput.i++;\r\n                        }\r\n                        return new (tree.Combinator)(c);\r\n                    }\r\n                    else if (parserInput.isWhitespace(-1)) {\r\n                        return new (tree.Combinator)(' ');\r\n                    }\r\n                    else {\r\n                        return new (tree.Combinator)(null);\r\n                    }\r\n                },\r\n                //\r\n                // A CSS Selector\r\n                // with less extensions e.g. the ability to extend and guard\r\n                //\r\n                //     .class > div + h1\r\n                //     li a:hover\r\n                //\r\n                // Selectors are made out of one or more Elements, see above.\r\n                //\r\n                selector: function (isLess) {\r\n                    var index = parserInput.i;\r\n                    var elements;\r\n                    var extendList;\r\n                    var c;\r\n                    var e;\r\n                    var allExtends;\r\n                    var when;\r\n                    var condition;\r\n                    isLess = isLess !== false;\r\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                        if (when) {\r\n                            condition = expect(this.conditions, 'expected condition');\r\n                        }\r\n                        else if (condition) {\r\n                            error('CSS guard can only be used at the end of selector');\r\n                        }\r\n                        else if (extendList) {\r\n                            if (allExtends) {\r\n                                allExtends = allExtends.concat(extendList);\r\n                            }\r\n                            else {\r\n                                allExtends = extendList;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (allExtends) {\r\n                                error('Extend can only be used at the end of selector');\r\n                            }\r\n                            c = parserInput.currentChar();\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                            e = null;\r\n                        }\r\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (elements) {\r\n                        return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\r\n                    }\r\n                    if (allExtends) {\r\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                    }\r\n                },\r\n                selectors: function () {\r\n                    var s;\r\n                    var selectors;\r\n                    while (true) {\r\n                        s = this.selector();\r\n                        if (!s) {\r\n                            break;\r\n                        }\r\n                        if (selectors) {\r\n                            selectors.push(s);\r\n                        }\r\n                        else {\r\n                            selectors = [s];\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (s.condition && selectors.length > 1) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        if (!parserInput.$char(',')) {\r\n                            break;\r\n                        }\r\n                        if (s.condition) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                    }\r\n                    return selectors;\r\n                },\r\n                attribute: function () {\r\n                    if (!parserInput.$char('[')) {\r\n                        return;\r\n                    }\r\n                    var entities = this.entities;\r\n                    var key;\r\n                    var val;\r\n                    var op;\r\n                    if (!(key = entities.variableCurly())) {\r\n                        key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                    }\r\n                    op = parserInput.$re(/^[|~*$^]?=/);\r\n                    if (op) {\r\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                    }\r\n                    expectChar(']');\r\n                    return new (tree.Attribute)(key, op, val);\r\n                },\r\n                //\r\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n                // It's a wrapper around the `primary` rule, with added `{}`.\r\n                //\r\n                block: function () {\r\n                    var content;\r\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                        return content;\r\n                    }\r\n                },\r\n                blockRuleset: function () {\r\n                    var block = this.block();\r\n                    if (block) {\r\n                        block = new tree.Ruleset(null, block);\r\n                    }\r\n                    return block;\r\n                },\r\n                detachedRuleset: function () {\r\n                    var argInfo;\r\n                    var params;\r\n                    var variadic;\r\n                    parserInput.save();\r\n                    if (parserInput.$re(/^[.#]\\(/)) {\r\n                        /**\r\n                         * DR args currently only implemented for each() function, and not\r\n                         * yet settable as `@dr: #(@arg) {}`\r\n                         * This should be done when DRs are merged with mixins.\r\n                         * See: https://github.com/less/less-meta/issues/16\r\n                         */\r\n                        argInfo = this.mixin.args(false);\r\n                        params = argInfo.args;\r\n                        variadic = argInfo.variadic;\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                    }\r\n                    var blockRuleset = this.blockRuleset();\r\n                    if (blockRuleset) {\r\n                        parserInput.forget();\r\n                        if (params) {\r\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                        }\r\n                        return new tree.DetachedRuleset(blockRuleset);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // div, .class, body > p {...}\r\n                //\r\n                ruleset: function () {\r\n                    var selectors;\r\n                    var rules;\r\n                    var debugInfo;\r\n                    parserInput.save();\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(parserInput.i);\r\n                    }\r\n                    selectors = this.selectors();\r\n                    if (selectors && (rules = this.block())) {\r\n                        parserInput.forget();\r\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                        if (context.dumpLineNumbers) {\r\n                            ruleset.debugInfo = debugInfo;\r\n                        }\r\n                        return ruleset;\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                declaration: function () {\r\n                    var name;\r\n                    var value;\r\n                    var index = parserInput.i;\r\n                    var hasDR;\r\n                    var c = parserInput.currentChar();\r\n                    var important;\r\n                    var merge;\r\n                    var isVariable;\r\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                        return;\r\n                    }\r\n                    parserInput.save();\r\n                    name = this.variable() || this.ruleProperty();\r\n                    if (name) {\r\n                        isVariable = typeof name === 'string';\r\n                        if (isVariable) {\r\n                            value = this.detachedRuleset();\r\n                            if (value) {\r\n                                hasDR = true;\r\n                            }\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (!value) {\r\n                            // a name returned by this.ruleProperty() is always an array of the form:\r\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                            // where each item is a tree.Keyword or tree.Variable\r\n                            merge = !isVariable && name.length > 1 && name.pop().value;\r\n                            // Custom property values get permissive parsing\r\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                                value = this.permissiveValue();\r\n                            }\r\n                            // Try to store values as anonymous\r\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                            else {\r\n                                value = this.anonymousValue();\r\n                            }\r\n                            if (value) {\r\n                                parserInput.forget();\r\n                                // anonymous values absorb the end ';' which is required for them to work\r\n                                return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\r\n                            }\r\n                            if (!value) {\r\n                                value = this.value();\r\n                            }\r\n                            if (value) {\r\n                                important = this.important();\r\n                            }\r\n                            else if (isVariable) {\r\n                                // As a last resort, try permissiveValue\r\n                                value = this.permissiveValue();\r\n                            }\r\n                        }\r\n                        if (value && (this.end() || hasDR)) {\r\n                            parserInput.forget();\r\n                            return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                anonymousValue: function () {\r\n                    var index = parserInput.i;\r\n                    var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\r\n                    if (match) {\r\n                        return new (tree.Anonymous)(match[1], index);\r\n                    }\r\n                },\r\n                /**\r\n                 * Used for custom properties, at-rules, and variables (as fallback)\r\n                 * Parses almost anything inside of {} [] () \"\" blocks\r\n                 * until it reaches outer-most tokens.\r\n                 *\r\n                 * First, it will try to parse comments and entities to reach\r\n                 * the end. This is mostly like the Expression parser except no\r\n                 * math is allowed.\r\n                 */\r\n                permissiveValue: function (untilTokens) {\r\n                    var i;\r\n                    var e;\r\n                    var done;\r\n                    var value;\r\n                    var tok = untilTokens || ';';\r\n                    var index = parserInput.i;\r\n                    var result = [];\r\n                    function testCurrentChar() {\r\n                        var char = parserInput.currentChar();\r\n                        if (typeof tok === 'string') {\r\n                            return char === tok;\r\n                        }\r\n                        else {\r\n                            return tok.test(char);\r\n                        }\r\n                    }\r\n                    if (testCurrentChar()) {\r\n                        return;\r\n                    }\r\n                    value = [];\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            value.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.entity();\r\n                        if (e) {\r\n                            value.push(e);\r\n                        }\r\n                    } while (e);\r\n                    done = testCurrentChar();\r\n                    if (value.length > 0) {\r\n                        value = new (tree.Expression)(value);\r\n                        if (done) {\r\n                            return value;\r\n                        }\r\n                        else {\r\n                            result.push(value);\r\n                        }\r\n                        // Preserve space before $parseUntil as it will not\r\n                        if (parserInput.prevChar() === ' ') {\r\n                            result.push(new tree.Anonymous(' ', index));\r\n                        }\r\n                    }\r\n                    parserInput.save();\r\n                    value = parserInput.$parseUntil(tok);\r\n                    if (value) {\r\n                        if (typeof value === 'string') {\r\n                            error(\"Expected '\" + value + \"'\", 'Parse');\r\n                        }\r\n                        if (value.length === 1 && value[0] === ' ') {\r\n                            parserInput.forget();\r\n                            return new tree.Anonymous('', index);\r\n                        }\r\n                        var item = void 0;\r\n                        for (i = 0; i < value.length; i++) {\r\n                            item = value[i];\r\n                            if (Array.isArray(item)) {\r\n                                // Treat actual quotes as normal quoted values\r\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                            }\r\n                            else {\r\n                                if (i === value.length - 1) {\r\n                                    item = item.trim();\r\n                                }\r\n                                // Treat like quoted values, but replace vars like unquoted expressions\r\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                                quote.variableRegex = /@([\\w-]+)/g;\r\n                                quote.propRegex = /\\$([\\w-]+)/g;\r\n                                result.push(quote);\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return new tree.Expression(result, true);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // An @import atrule\r\n                //\r\n                //     @import \"lib\";\r\n                //\r\n                // Depending on our environment, importing is done differently:\r\n                // In the browser, it's an XHR request, in Node, it would be a\r\n                // file-system operation. The function used for importing is\r\n                // stored in `import`, which we pass to the Import constructor.\r\n                //\r\n                'import': function () {\r\n                    var path;\r\n                    var features;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@import?\\s+/);\r\n                    if (dir) {\r\n                        var options = (dir ? this.importOptions() : null) || {};\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            features = this.mediaFeatures();\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon or unrecognised media features on import');\r\n                            }\r\n                            features = features && new (tree.Value)(features);\r\n                            return new (tree.Import)(path, features, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed import statement');\r\n                        }\r\n                    }\r\n                },\r\n                importOptions: function () {\r\n                    var o;\r\n                    var options = {};\r\n                    var optionName;\r\n                    var value;\r\n                    // list of options, surrounded by parens\r\n                    if (!parserInput.$char('(')) {\r\n                        return null;\r\n                    }\r\n                    do {\r\n                        o = this.importOption();\r\n                        if (o) {\r\n                            optionName = o;\r\n                            value = true;\r\n                            switch (optionName) {\r\n                                case 'css':\r\n                                    optionName = 'less';\r\n                                    value = false;\r\n                                    break;\r\n                                case 'once':\r\n                                    optionName = 'multiple';\r\n                                    value = false;\r\n                                    break;\r\n                            }\r\n                            options[optionName] = value;\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (o);\r\n                    expectChar(')');\r\n                    return options;\r\n                },\r\n                importOption: function () {\r\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                    if (opt) {\r\n                        return opt[1];\r\n                    }\r\n                },\r\n                mediaFeature: function () {\r\n                    var entities = this.entities;\r\n                    var nodes = [];\r\n                    var e;\r\n                    var p;\r\n                    parserInput.save();\r\n                    do {\r\n                        e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                        if (e) {\r\n                            nodes.push(e);\r\n                        }\r\n                        else if (parserInput.$char('(')) {\r\n                            p = this.property();\r\n                            e = this.value();\r\n                            if (parserInput.$char(')')) {\r\n                                if (p && e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\r\n                                }\r\n                                else if (e) {\r\n                                    nodes.push(new (tree.Paren)(e));\r\n                                }\r\n                                else {\r\n                                    error('badly formed media feature definition');\r\n                                }\r\n                            }\r\n                            else {\r\n                                error('Missing closing \\')\\'', 'Parse');\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    parserInput.forget();\r\n                    if (nodes.length > 0) {\r\n                        return new (tree.Expression)(nodes);\r\n                    }\r\n                },\r\n                mediaFeatures: function () {\r\n                    var entities = this.entities;\r\n                    var features = [];\r\n                    var e;\r\n                    do {\r\n                        e = this.mediaFeature();\r\n                        if (e) {\r\n                            features.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            e = entities.variable() || entities.mixinLookup();\r\n                            if (e) {\r\n                                features.push(e);\r\n                                if (!parserInput.$char(',')) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    return features.length > 0 ? features : null;\r\n                },\r\n                media: function () {\r\n                    var features;\r\n                    var rules;\r\n                    var media;\r\n                    var debugInfo;\r\n                    var index = parserInput.i;\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(index);\r\n                    }\r\n                    parserInput.save();\r\n                    if (parserInput.$str('@media')) {\r\n                        features = this.mediaFeatures();\r\n                        rules = this.block();\r\n                        if (!rules) {\r\n                            error('media definitions require block statements after any features');\r\n                        }\r\n                        parserInput.forget();\r\n                        media = new (tree.Media)(rules, features, index, fileInfo);\r\n                        if (context.dumpLineNumbers) {\r\n                            media.debugInfo = debugInfo;\r\n                        }\r\n                        return media;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // A @plugin directive, used to import plugins dynamically.\r\n                //\r\n                //     @plugin (args) \"lib\";\r\n                //\r\n                plugin: function () {\r\n                    var path;\r\n                    var args;\r\n                    var options;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                    if (dir) {\r\n                        args = this.pluginArgs();\r\n                        if (args) {\r\n                            options = {\r\n                                pluginArgs: args,\r\n                                isPlugin: true\r\n                            };\r\n                        }\r\n                        else {\r\n                            options = { isPlugin: true };\r\n                        }\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon on @plugin');\r\n                            }\r\n                            return new (tree.Import)(path, null, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed @plugin statement');\r\n                        }\r\n                    }\r\n                },\r\n                pluginArgs: function () {\r\n                    // list of options, surrounded by parens\r\n                    parserInput.save();\r\n                    if (!parserInput.$char('(')) {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                    var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\r\n                    if (args[1]) {\r\n                        parserInput.forget();\r\n                        return args[1].trim();\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                },\r\n                //\r\n                // A CSS AtRule\r\n                //\r\n                //     @charset \"utf-8\";\r\n                //\r\n                atrule: function () {\r\n                    var index = parserInput.i;\r\n                    var name;\r\n                    var value;\r\n                    var rules;\r\n                    var nonVendorSpecificName;\r\n                    var hasIdentifier;\r\n                    var hasExpression;\r\n                    var hasUnknown;\r\n                    var hasBlock = true;\r\n                    var isRooted = true;\r\n                    if (parserInput.currentChar() !== '@') {\r\n                        return;\r\n                    }\r\n                    value = this['import']() || this.plugin() || this.media();\r\n                    if (value) {\r\n                        return value;\r\n                    }\r\n                    parserInput.save();\r\n                    name = parserInput.$re(/^@[a-z-]+/);\r\n                    if (!name) {\r\n                        return;\r\n                    }\r\n                    nonVendorSpecificName = name;\r\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                        nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                    }\r\n                    switch (nonVendorSpecificName) {\r\n                        case '@charset':\r\n                            hasIdentifier = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@namespace':\r\n                            hasExpression = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@keyframes':\r\n                        case '@counter-style':\r\n                            hasIdentifier = true;\r\n                            break;\r\n                        case '@document':\r\n                        case '@supports':\r\n                            hasUnknown = true;\r\n                            isRooted = false;\r\n                            break;\r\n                        default:\r\n                            hasUnknown = true;\r\n                            break;\r\n                    }\r\n                    parserInput.commentStore.length = 0;\r\n                    if (hasIdentifier) {\r\n                        value = this.entity();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" identifier\");\r\n                        }\r\n                    }\r\n                    else if (hasExpression) {\r\n                        value = this.expression();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" expression\");\r\n                        }\r\n                    }\r\n                    else if (hasUnknown) {\r\n                        value = this.permissiveValue(/^[{;]/);\r\n                        hasBlock = (parserInput.currentChar() === '{');\r\n                        if (!value) {\r\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                                error(name + \" rule is missing block or ending semi-colon\");\r\n                            }\r\n                        }\r\n                        else if (!value.value) {\r\n                            value = null;\r\n                        }\r\n                    }\r\n                    if (hasBlock) {\r\n                        rules = this.blockRuleset();\r\n                    }\r\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                        parserInput.forget();\r\n                        return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                    }\r\n                    parserInput.restore('at-rule options not recognised');\r\n                },\r\n                //\r\n                // A Value is a comma-delimited list of Expressions\r\n                //\r\n                //     font-family: Baskerville, Georgia, serif;\r\n                //\r\n                // In a Rule, a Value represents everything after the `:`,\r\n                // and before the `;`.\r\n                //\r\n                value: function () {\r\n                    var e;\r\n                    var expressions = [];\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.expression();\r\n                        if (e) {\r\n                            expressions.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (expressions.length > 0) {\r\n                        return new (tree.Value)(expressions, index);\r\n                    }\r\n                },\r\n                important: function () {\r\n                    if (parserInput.currentChar() === '!') {\r\n                        return parserInput.$re(/^! *important/);\r\n                    }\r\n                },\r\n                sub: function () {\r\n                    var a;\r\n                    var e;\r\n                    parserInput.save();\r\n                    if (parserInput.$char('(')) {\r\n                        a = this.addition();\r\n                        if (a && parserInput.$char(')')) {\r\n                            parserInput.forget();\r\n                            e = new (tree.Expression)([a]);\r\n                            e.parens = true;\r\n                            return e;\r\n                        }\r\n                        parserInput.restore('Expected \\')\\'');\r\n                        return;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                multiplication: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.operand();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            if (parserInput.peek(/^\\/[*\\/]/)) {\r\n                                break;\r\n                            }\r\n                            parserInput.save();\r\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                            if (!op) {\r\n                                parserInput.forget();\r\n                                break;\r\n                            }\r\n                            a = this.operand();\r\n                            if (!a) {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            parserInput.forget();\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                addition: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.multiplication();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                            if (!op) {\r\n                                break;\r\n                            }\r\n                            a = this.multiplication();\r\n                            if (!a) {\r\n                                break;\r\n                            }\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                conditions: function () {\r\n                    var a;\r\n                    var b;\r\n                    var index = parserInput.i;\r\n                    var condition;\r\n                    a = this.condition(true);\r\n                    if (a) {\r\n                        while (true) {\r\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                            b = this.condition(true);\r\n                            if (!b) {\r\n                                break;\r\n                            }\r\n                            condition = new (tree.Condition)('or', condition || a, b, index);\r\n                        }\r\n                        return condition || a;\r\n                    }\r\n                },\r\n                condition: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    function or() {\r\n                        return parserInput.$str('or');\r\n                    }\r\n                    result = this.conditionAnd(needsParens);\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = or();\r\n                    if (logical) {\r\n                        next = this.condition(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                conditionAnd: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    var self = this;\r\n                    function insideCondition() {\r\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                        if (!cond && !needsParens) {\r\n                            return self.atomicCondition(needsParens);\r\n                        }\r\n                        return cond;\r\n                    }\r\n                    function and() {\r\n                        return parserInput.$str('and');\r\n                    }\r\n                    result = insideCondition();\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = and();\r\n                    if (logical) {\r\n                        next = this.conditionAnd(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                negatedCondition: function (needsParens) {\r\n                    if (parserInput.$str('not')) {\r\n                        var result = this.parenthesisCondition(needsParens);\r\n                        if (result) {\r\n                            result.negate = !result.negate;\r\n                        }\r\n                        return result;\r\n                    }\r\n                },\r\n                parenthesisCondition: function (needsParens) {\r\n                    function tryConditionFollowedByParenthesis(me) {\r\n                        var body;\r\n                        parserInput.save();\r\n                        body = me.condition(needsParens);\r\n                        if (!body) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    var body;\r\n                    parserInput.save();\r\n                    if (!parserInput.$str('(')) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    body = tryConditionFollowedByParenthesis(this);\r\n                    if (body) {\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    body = this.atomicCondition(needsParens);\r\n                    if (!body) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    if (!parserInput.$char(')')) {\r\n                        parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                        return;\r\n                    }\r\n                    parserInput.forget();\r\n                    return body;\r\n                },\r\n                atomicCondition: function (needsParens) {\r\n                    var entities = this.entities;\r\n                    var index = parserInput.i;\r\n                    var a;\r\n                    var b;\r\n                    var c;\r\n                    var op;\r\n                    function cond() {\r\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                    }\r\n                    cond = cond.bind(this);\r\n                    a = cond();\r\n                    if (a) {\r\n                        if (parserInput.$char('>')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '>=';\r\n                            }\r\n                            else {\r\n                                op = '>';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('<')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '<=';\r\n                            }\r\n                            else {\r\n                                op = '<';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('=')) {\r\n                            if (parserInput.$char('>')) {\r\n                                op = '=>';\r\n                            }\r\n                            else if (parserInput.$char('<')) {\r\n                                op = '=<';\r\n                            }\r\n                            else {\r\n                                op = '=';\r\n                            }\r\n                        }\r\n                        if (op) {\r\n                            b = cond();\r\n                            if (b) {\r\n                                c = new (tree.Condition)(op, a, b, index, false);\r\n                            }\r\n                            else {\r\n                                error('expected expression');\r\n                            }\r\n                        }\r\n                        else {\r\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\r\n                        }\r\n                        return c;\r\n                    }\r\n                },\r\n                //\r\n                // An operand is anything that can be part of an operation,\r\n                // such as a Color, or a Variable\r\n                //\r\n                operand: function () {\r\n                    var entities = this.entities;\r\n                    var negate;\r\n                    if (parserInput.peek(/^-[@\\$\\(]/)) {\r\n                        negate = parserInput.$char('-');\r\n                    }\r\n                    var o = this.sub() || entities.dimension() ||\r\n                        entities.color() || entities.variable() ||\r\n                        entities.property() || entities.call() ||\r\n                        entities.quoted(true) || entities.colorKeyword() ||\r\n                        entities.mixinLookup();\r\n                    if (negate) {\r\n                        o.parensInOp = true;\r\n                        o = new (tree.Negative)(o);\r\n                    }\r\n                    return o;\r\n                },\r\n                //\r\n                // Expressions either represent mathematical operations,\r\n                // or white-space delimited Entities.\r\n                //\r\n                //     1px solid black\r\n                //     @var * 2\r\n                //\r\n                expression: function () {\r\n                    var entities = [];\r\n                    var e;\r\n                    var delim;\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.addition() || this.entity();\r\n                        if (e instanceof tree.Comment) {\r\n                            e = null;\r\n                        }\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                            if (!parserInput.peek(/^\\/[\\/*]/)) {\r\n                                delim = parserInput.$char('/');\r\n                                if (delim) {\r\n                                    entities.push(new (tree.Anonymous)(delim, index));\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (entities.length > 0) {\r\n                        return new (tree.Expression)(entities);\r\n                    }\r\n                },\r\n                property: function () {\r\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (name) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                ruleProperty: function () {\r\n                    var name = [];\r\n                    var index = [];\r\n                    var s;\r\n                    var k;\r\n                    parserInput.save();\r\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (simpleProperty) {\r\n                        name = [new (tree.Keyword)(simpleProperty[1])];\r\n                        parserInput.forget();\r\n                        return name;\r\n                    }\r\n                    function match(re) {\r\n                        var i = parserInput.i;\r\n                        var chunk = parserInput.$re(re);\r\n                        if (chunk) {\r\n                            index.push(i);\r\n                            return name.push(chunk[1]);\r\n                        }\r\n                    }\r\n                    match(/^(\\*?)/);\r\n                    while (true) {\r\n                        if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                        parserInput.forget();\r\n                        // at last, we have the complete match now. move forward,\r\n                        // convert name particles to tree objects and return:\r\n                        if (name[0] === '') {\r\n                            name.shift();\r\n                            index.shift();\r\n                        }\r\n                        for (k = 0; k < name.length; k++) {\r\n                            s = name[k];\r\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                                new (tree.Keyword)(s) :\r\n                                (s.charAt(0) === '@' ?\r\n                                    new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\r\n                                    new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\r\n                        }\r\n                        return name;\r\n                    }\r\n                    parserInput.restore();\r\n                }\r\n            }\r\n        };\r\n    };\r\n    Parser.serializeVars = function (vars) {\r\n        var s = '';\r\n        for (var name_1 in vars) {\r\n            if (Object.hasOwnProperty.call(vars, name_1)) {\r\n                var value = vars[name_1];\r\n                s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n            }\r\n        }\r\n        return s;\r\n    };\n\n    function boolean(condition) {\r\n        return condition ? Keyword.True : Keyword.False;\r\n    }\r\n    /**\r\n     * Functions with evalArgs set to false are sent context\r\n     * as the first argument.\r\n     */\r\n    function If(context, condition, trueValue, falseValue) {\r\n        return condition.eval(context) ? trueValue.eval(context)\r\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n    }\r\n    If.evalArgs = false;\r\n    function isdefined(context, variable) {\r\n        try {\r\n            variable.eval(context);\r\n            return Keyword.True;\r\n        }\r\n        catch (e) {\r\n            return Keyword.False;\r\n        }\r\n    }\r\n    isdefined.evalArgs = false;\r\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\r\n    function clamp(val) {\r\n        return Math.min(1, Math.max(0, val));\r\n    }\r\n    function hsla(origColor, hsl) {\r\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n        if (color) {\r\n            if (origColor.value &&\r\n                /^(rgb|hsl)/.test(origColor.value)) {\r\n                color.value = origColor.value;\r\n            }\r\n            else {\r\n                color.value = 'rgb';\r\n            }\r\n            return color;\r\n        }\r\n    }\r\n    function toHSL(color) {\r\n        if (color.toHSL) {\r\n            return color.toHSL();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function toHSV(color) {\r\n        if (color.toHSV) {\r\n            return color.toHSV();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function number$1(n) {\r\n        if (n instanceof Dimension) {\r\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n        }\r\n        else if (typeof n === 'number') {\r\n            return n;\r\n        }\r\n        else {\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'color functions take numbers as parameters'\r\n            };\r\n        }\r\n    }\r\n    function scaled(n, size) {\r\n        if (n instanceof Dimension && n.unit.is('%')) {\r\n            return parseFloat(n.value * size / 100);\r\n        }\r\n        else {\r\n            return number$1(n);\r\n        }\r\n    }\r\n    colorFunctions = {\r\n        rgb: function (r, g, b) {\r\n            var a = 1;\r\n            /**\r\n             * Comma-less syntax\r\n             *   e.g. rgb(0 128 255 / 50%)\r\n             */\r\n            if (r instanceof Expression) {\r\n                var val = r.value;\r\n                r = val[0];\r\n                g = val[1];\r\n                b = val[2];\r\n                /**\r\n                 * @todo - should this be normalized in\r\n                 *   function caller? Or parsed differently?\r\n                 */\r\n                if (b instanceof Operation) {\r\n                    var op = b;\r\n                    b = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.rgba(r, g, b, a);\r\n            if (color) {\r\n                color.value = 'rgb';\r\n                return color;\r\n            }\r\n        },\r\n        rgba: function (r, g, b, a) {\r\n            try {\r\n                if (r instanceof Color) {\r\n                    if (g) {\r\n                        a = number$1(g);\r\n                    }\r\n                    else {\r\n                        a = r.alpha;\r\n                    }\r\n                    return new Color(r.rgb, a, 'rgba');\r\n                }\r\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'rgba');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsl: function (h, s, l) {\r\n            var a = 1;\r\n            if (h instanceof Expression) {\r\n                var val = h.value;\r\n                h = val[0];\r\n                s = val[1];\r\n                l = val[2];\r\n                if (l instanceof Operation) {\r\n                    var op = l;\r\n                    l = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.hsla(h, s, l, a);\r\n            if (color) {\r\n                color.value = 'hsl';\r\n                return color;\r\n            }\r\n        },\r\n        hsla: function (h, s, l, a) {\r\n            try {\r\n                if (h instanceof Color) {\r\n                    if (s) {\r\n                        a = number$1(s);\r\n                    }\r\n                    else {\r\n                        a = h.alpha;\r\n                    }\r\n                    return new Color(h.rgb, a, 'hsla');\r\n                }\r\n                var m1_1;\r\n                var m2_1;\r\n                function hue(h) {\r\n                    h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                    if (h * 6 < 1) {\r\n                        return m1_1 + (m2_1 - m1_1) * h * 6;\r\n                    }\r\n                    else if (h * 2 < 1) {\r\n                        return m2_1;\r\n                    }\r\n                    else if (h * 3 < 2) {\r\n                        return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\r\n                    }\r\n                    else {\r\n                        return m1_1;\r\n                    }\r\n                }\r\n                h = (number$1(h) % 360) / 360;\r\n                s = clamp(number$1(s));\r\n                l = clamp(number$1(l));\r\n                a = clamp(number$1(a));\r\n                m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n                m1_1 = l * 2 - m2_1;\r\n                var rgb = [\r\n                    hue(h + 1 / 3) * 255,\r\n                    hue(h) * 255,\r\n                    hue(h - 1 / 3) * 255\r\n                ];\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'hsla');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsv: function (h, s, v) {\r\n            return colorFunctions.hsva(h, s, v, 1.0);\r\n        },\r\n        hsva: function (h, s, v, a) {\r\n            h = ((number$1(h) % 360) / 360) * 360;\r\n            s = number$1(s);\r\n            v = number$1(v);\r\n            a = number$1(a);\r\n            var i;\r\n            var f;\r\n            i = Math.floor((h / 60) % 6);\r\n            f = (h / 60) - i;\r\n            var vs = [v,\r\n                v * (1 - s),\r\n                v * (1 - f * s),\r\n                v * (1 - (1 - f) * s)];\r\n            var perm = [[0, 3, 1],\r\n                [2, 0, 1],\r\n                [1, 0, 3],\r\n                [1, 2, 0],\r\n                [3, 1, 0],\r\n                [0, 1, 2]];\r\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n        },\r\n        hue: function (color) {\r\n            return new Dimension(toHSL(color).h);\r\n        },\r\n        saturation: function (color) {\r\n            return new Dimension(toHSL(color).s * 100, '%');\r\n        },\r\n        lightness: function (color) {\r\n            return new Dimension(toHSL(color).l * 100, '%');\r\n        },\r\n        hsvhue: function (color) {\r\n            return new Dimension(toHSV(color).h);\r\n        },\r\n        hsvsaturation: function (color) {\r\n            return new Dimension(toHSV(color).s * 100, '%');\r\n        },\r\n        hsvvalue: function (color) {\r\n            return new Dimension(toHSV(color).v * 100, '%');\r\n        },\r\n        red: function (color) {\r\n            return new Dimension(color.rgb[0]);\r\n        },\r\n        green: function (color) {\r\n            return new Dimension(color.rgb[1]);\r\n        },\r\n        blue: function (color) {\r\n            return new Dimension(color.rgb[2]);\r\n        },\r\n        alpha: function (color) {\r\n            return new Dimension(toHSL(color).a);\r\n        },\r\n        luma: function (color) {\r\n            return new Dimension(color.luma() * color.alpha * 100, '%');\r\n        },\r\n        luminance: function (color) {\r\n            var luminance = (0.2126 * color.rgb[0] / 255) +\r\n                (0.7152 * color.rgb[1] / 255) +\r\n                (0.0722 * color.rgb[2] / 255);\r\n            return new Dimension(luminance * color.alpha * 100, '%');\r\n        },\r\n        saturate: function (color, amount, method) {\r\n            // filter: saturate(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s += hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s += amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        desaturate: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s -= hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s -= amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        lighten: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l += hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l += amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        darken: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l -= hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l -= amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadein: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a += hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a += amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadeout: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a -= hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a -= amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fade: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            hsl.a = amount.value / 100;\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        spin: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            var hue = (hsl.h + amount.value) % 360;\r\n            hsl.h = hue < 0 ? 360 + hue : hue;\r\n            return hsla(color, hsl);\r\n        },\r\n        //\r\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n        // http://sass-lang.com\r\n        //\r\n        mix: function (color1, color2, weight) {\r\n            if (!weight) {\r\n                weight = new Dimension(50);\r\n            }\r\n            var p = weight.value / 100.0;\r\n            var w = p * 2 - 1;\r\n            var a = toHSL(color1).a - toHSL(color2).a;\r\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n            var w2 = 1 - w1;\r\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n            return new Color(rgb, alpha);\r\n        },\r\n        greyscale: function (color) {\r\n            return colorFunctions.desaturate(color, new Dimension(100));\r\n        },\r\n        contrast: function (color, dark, light, threshold) {\r\n            // filter: contrast(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            if (typeof light === 'undefined') {\r\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n            }\r\n            if (typeof dark === 'undefined') {\r\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n            }\r\n            // Figure out which is actually light and dark:\r\n            if (dark.luma() > light.luma()) {\r\n                var t = light;\r\n                light = dark;\r\n                dark = t;\r\n            }\r\n            if (typeof threshold === 'undefined') {\r\n                threshold = 0.43;\r\n            }\r\n            else {\r\n                threshold = number$1(threshold);\r\n            }\r\n            if (color.luma() < threshold) {\r\n                return light;\r\n            }\r\n            else {\r\n                return dark;\r\n            }\r\n        },\r\n        // Changes made in 2.7.0 - Reverted in 3.0.0\r\n        // contrast: function (color, color1, color2, threshold) {\r\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n        //     // according to the standard WCAG contrast ratio calculation.\r\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n        //     // The threshold param is no longer used, in line with SASS.\r\n        //     // filter: contrast(3.2);\r\n        //     // should be kept as is, so check for color\r\n        //     if (!color.rgb) {\r\n        //         return null;\r\n        //     }\r\n        //     if (typeof color1 === 'undefined') {\r\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n        //     }\r\n        //     if (typeof color2 === 'undefined') {\r\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n        //     }\r\n        //     var contrast1, contrast2;\r\n        //     var luma = color.luma();\r\n        //     var luma1 = color1.luma();\r\n        //     var luma2 = color2.luma();\r\n        //     // Calculate contrast ratios for each color\r\n        //     if (luma > luma1) {\r\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n        //     } else {\r\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (luma > luma2) {\r\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n        //     } else {\r\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (contrast1 > contrast2) {\r\n        //         return color1;\r\n        //     } else {\r\n        //         return color2;\r\n        //     }\r\n        // },\r\n        argb: function (color) {\r\n            return new Anonymous(color.toARGB());\r\n        },\r\n        color: function (c) {\r\n            if ((c instanceof Quoted) &&\r\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n                var val = c.value.slice(1);\r\n                return new Color(val, undefined, \"#\" + val);\r\n            }\r\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n                c.value = undefined;\r\n                return c;\r\n            }\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n            };\r\n        },\r\n        tint: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n        },\r\n        shade: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n        }\r\n    };\r\n    var color = colorFunctions;\n\n    // Color Blending\r\n    // ref: http://www.w3.org/TR/compositing-1\r\n    function colorBlend(mode, color1, color2) {\r\n        var ab = color1.alpha; // result\r\n        var // backdrop\r\n        cb;\r\n        var as = color2.alpha;\r\n        var // source\r\n        cs;\r\n        var ar;\r\n        var cr;\r\n        var r = [];\r\n        ar = as + ab * (1 - as);\r\n        for (var i = 0; i < 3; i++) {\r\n            cb = color1.rgb[i] / 255;\r\n            cs = color2.rgb[i] / 255;\r\n            cr = mode(cb, cs);\r\n            if (ar) {\r\n                cr = (as * cs + ab * (cb -\r\n                    as * (cb + cs - cr))) / ar;\r\n            }\r\n            r[i] = cr * 255;\r\n        }\r\n        return new Color(r, ar);\r\n    }\r\n    var colorBlendModeFunctions = {\r\n        multiply: function (cb, cs) {\r\n            return cb * cs;\r\n        },\r\n        screen: function (cb, cs) {\r\n            return cb + cs - cb * cs;\r\n        },\r\n        overlay: function (cb, cs) {\r\n            cb *= 2;\r\n            return (cb <= 1) ?\r\n                colorBlendModeFunctions.multiply(cb, cs) :\r\n                colorBlendModeFunctions.screen(cb - 1, cs);\r\n        },\r\n        softlight: function (cb, cs) {\r\n            var d = 1;\r\n            var e = cb;\r\n            if (cs > 0.5) {\r\n                e = 1;\r\n                d = (cb > 0.25) ? Math.sqrt(cb)\r\n                    : ((16 * cb - 12) * cb + 4) * cb;\r\n            }\r\n            return cb - (1 - 2 * cs) * e * (d - cb);\r\n        },\r\n        hardlight: function (cb, cs) {\r\n            return colorBlendModeFunctions.overlay(cs, cb);\r\n        },\r\n        difference: function (cb, cs) {\r\n            return Math.abs(cb - cs);\r\n        },\r\n        exclusion: function (cb, cs) {\r\n            return cb + cs - 2 * cb * cs;\r\n        },\r\n        // non-w3c functions:\r\n        average: function (cb, cs) {\r\n            return (cb + cs) / 2;\r\n        },\r\n        negation: function (cb, cs) {\r\n            return 1 - Math.abs(cb + cs - 1);\r\n        }\r\n    };\r\n    for (var f$1 in colorBlendModeFunctions) {\r\n        if (colorBlendModeFunctions.hasOwnProperty(f$1)) {\r\n            colorBlend[f$1] = colorBlend.bind(null, colorBlendModeFunctions[f$1]);\r\n        }\r\n    }\n\n    var dataUri = (function (environment) {\r\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n                if (!filePathNode) {\r\n                    filePathNode = mimetypeNode;\r\n                    mimetypeNode = null;\r\n                }\r\n                var mimetype = mimetypeNode && mimetypeNode.value;\r\n                var filePath = filePathNode.value;\r\n                var currentFileInfo = this.currentFileInfo;\r\n                var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n                var fragmentStart = filePath.indexOf('#');\r\n                var fragment = '';\r\n                if (fragmentStart !== -1) {\r\n                    fragment = filePath.slice(fragmentStart);\r\n                    filePath = filePath.slice(0, fragmentStart);\r\n                }\r\n                var context = clone(this.context);\r\n                context.rawBuffer = true;\r\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n                if (!fileManager) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                var useBase64 = false;\r\n                // detect the mimetype if not given\r\n                if (!mimetypeNode) {\r\n                    mimetype = environment.mimeLookup(filePath);\r\n                    if (mimetype === 'image/svg+xml') {\r\n                        useBase64 = false;\r\n                    }\r\n                    else {\r\n                        // use base 64 unless it's an ASCII or UTF-8 format\r\n                        var charset = environment.charsetLookup(mimetype);\r\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                    }\r\n                    if (useBase64) {\r\n                        mimetype += ';base64';\r\n                    }\r\n                }\r\n                else {\r\n                    useBase64 = /;base64$/.test(mimetype);\r\n                }\r\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n                if (!fileSync.contents) {\r\n                    logger$1.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                    return fallback(this, filePathNode || mimetypeNode);\r\n                }\r\n                var buf = fileSync.contents;\r\n                if (useBase64 && !environment.encodeBase64) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n                var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n                return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var getItemsFromNode = function (node) {\r\n        // handle non-array values as an array of length 1\r\n        // return 'undefined' if index is invalid\r\n        var items = Array.isArray(node.value) ?\r\n            node.value : Array(node);\r\n        return items;\r\n    };\r\n    var list = {\r\n        _SELF: function (n) {\r\n            return n;\r\n        },\r\n        '~': function () {\r\n            var expr = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                expr[_i] = arguments[_i];\r\n            }\r\n            if (expr.length === 1) {\r\n                return expr[0];\r\n            }\r\n            return new Value(expr);\r\n        },\r\n        extract: function (values, index) {\r\n            // (1-based index)\r\n            index = index.value - 1;\r\n            return getItemsFromNode(values)[index];\r\n        },\r\n        length: function (values) {\r\n            return new Dimension(getItemsFromNode(values).length);\r\n        },\r\n        /**\r\n         * Creates a Less list of incremental values.\r\n         * Modeled after Lodash's range function, also exists natively in PHP\r\n         *\r\n         * @param {Dimension} [start=1]\r\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n         * @param {Dimension} [step=1]\r\n         */\r\n        range: function (start, end, step) {\r\n            var from;\r\n            var to;\r\n            var stepValue = 1;\r\n            var list = [];\r\n            if (end) {\r\n                to = end;\r\n                from = start.value;\r\n                if (step) {\r\n                    stepValue = step.value;\r\n                }\r\n            }\r\n            else {\r\n                from = 1;\r\n                to = start;\r\n            }\r\n            for (var i = from; i <= to.value; i += stepValue) {\r\n                list.push(new Dimension(i, to.unit));\r\n            }\r\n            return new Expression(list);\r\n        },\r\n        each: function (list, rs) {\r\n            var _this = this;\r\n            var rules = [];\r\n            var newRules;\r\n            var iterator;\r\n            var tryEval = function (val) {\r\n                if (val instanceof Node) {\r\n                    return val.eval(_this.context);\r\n                }\r\n                return val;\r\n            };\r\n            if (list.value && !(list instanceof Quoted)) {\r\n                if (Array.isArray(list.value)) {\r\n                    iterator = list.value.map(tryEval);\r\n                }\r\n                else {\r\n                    iterator = [tryEval(list.value)];\r\n                }\r\n            }\r\n            else if (list.ruleset) {\r\n                iterator = tryEval(list.ruleset).rules;\r\n            }\r\n            else if (list.rules) {\r\n                iterator = list.rules.map(tryEval);\r\n            }\r\n            else if (Array.isArray(list)) {\r\n                iterator = list.map(tryEval);\r\n            }\r\n            else {\r\n                iterator = [tryEval(list)];\r\n            }\r\n            var valueName = '@value';\r\n            var keyName = '@key';\r\n            var indexName = '@index';\r\n            if (rs.params) {\r\n                valueName = rs.params[0] && rs.params[0].name;\r\n                keyName = rs.params[1] && rs.params[1].name;\r\n                indexName = rs.params[2] && rs.params[2].name;\r\n                rs = rs.rules;\r\n            }\r\n            else {\r\n                rs = rs.ruleset;\r\n            }\r\n            for (var i = 0; i < iterator.length; i++) {\r\n                var key = void 0;\r\n                var value = void 0;\r\n                var item = iterator[i];\r\n                if (item instanceof Declaration) {\r\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                    value = item.value;\r\n                }\r\n                else {\r\n                    key = new Dimension(i + 1);\r\n                    value = item;\r\n                }\r\n                if (item instanceof Comment) {\r\n                    continue;\r\n                }\r\n                newRules = rs.rules.slice(0);\r\n                if (valueName) {\r\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (indexName) {\r\n                    newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (keyName) {\r\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n            }\r\n            return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n        }\r\n    };\n\n    var MathHelper = function (fn, unit, n) {\r\n        if (!(n instanceof Dimension)) {\r\n            throw { type: 'Argument', message: 'argument must be a number' };\r\n        }\r\n        if (unit == null) {\r\n            unit = n.unit;\r\n        }\r\n        else {\r\n            n = n.unify();\r\n        }\r\n        return new Dimension(fn(parseFloat(n.value)), unit);\r\n    };\n\n    var mathFunctions = {\r\n        // name,  unit\r\n        ceil: null,\r\n        floor: null,\r\n        sqrt: null,\r\n        abs: null,\r\n        tan: '',\r\n        sin: '',\r\n        cos: '',\r\n        atan: 'rad',\r\n        asin: 'rad',\r\n        acos: 'rad'\r\n    };\r\n    for (var f in mathFunctions) {\r\n        if (mathFunctions.hasOwnProperty(f)) {\r\n            mathFunctions[f] = MathHelper.bind(null, Math[f], mathFunctions[f]);\r\n        }\r\n    }\r\n    mathFunctions.round = function (n, f) {\r\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n    };\n\n    var minMax = function (isMin, args) {\r\n        args = Array.prototype.slice.call(args);\r\n        switch (args.length) {\r\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n        }\r\n        var i; // key is the unit.toString() for unified Dimension values,\r\n        var j;\r\n        var current;\r\n        var currentUnified;\r\n        var referenceUnified;\r\n        var unit;\r\n        var unitStatic;\r\n        var unitClone;\r\n        var // elems only contains original argument values.\r\n        order = [];\r\n        var values = {};\r\n        // value is the index into the order array.\r\n        for (i = 0; i < args.length; i++) {\r\n            current = args[i];\r\n            if (!(current instanceof Dimension)) {\r\n                if (Array.isArray(args[i].value)) {\r\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n                }\r\n                continue;\r\n            }\r\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n            if (j === undefined) {\r\n                if (unitStatic !== undefined && unit !== unitStatic) {\r\n                    throw { type: 'Argument', message: 'incompatible types' };\r\n                }\r\n                values[unit] = order.length;\r\n                order.push(current);\r\n                continue;\r\n            }\r\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n            if (isMin && currentUnified.value < referenceUnified.value ||\r\n                !isMin && currentUnified.value > referenceUnified.value) {\r\n                order[j] = current;\r\n            }\r\n        }\r\n        if (order.length == 1) {\r\n            return order[0];\r\n        }\r\n        args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\r\n        return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n    };\r\n    var number = {\r\n        min: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(true, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        max: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(false, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        convert: function (val, unit) {\r\n            return val.convertTo(unit.value);\r\n        },\r\n        pi: function () {\r\n            return new Dimension(Math.PI);\r\n        },\r\n        mod: function (a, b) {\r\n            return new Dimension(a.value % b.value, a.unit);\r\n        },\r\n        pow: function (x, y) {\r\n            if (typeof x === 'number' && typeof y === 'number') {\r\n                x = new Dimension(x);\r\n                y = new Dimension(y);\r\n            }\r\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n                throw { type: 'Argument', message: 'arguments must be numbers' };\r\n            }\r\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n        },\r\n        percentage: function (n) {\r\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n            return result;\r\n        }\r\n    };\n\n    var string = {\r\n        e: function (str) {\r\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n        },\r\n        escape: function (str) {\r\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n        },\r\n        replace: function (string, pattern, replacement, flags) {\r\n            var result = string.value;\r\n            replacement = (replacement.type === 'Quoted') ?\r\n                replacement.value : replacement.toCSS();\r\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        },\r\n        '%': function (string /* arg, arg, ... */) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n            var result = string.value;\r\n            var _loop_1 = function (i) {\r\n                /* jshint loopfunc:true */\r\n                result = result.replace(/%[sda]/i, function (token) {\r\n                    var value = ((args[i].type === 'Quoted') &&\r\n                        token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n                });\r\n            };\r\n            for (var i = 0; i < args.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            result = result.replace(/%%/g, '%');\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        }\r\n    };\n\n    var svg = (function (environment) {\r\n        return { 'svg-gradient': function (direction) {\r\n                var stops;\r\n                var gradientDirectionSvg;\r\n                var gradientType = 'linear';\r\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n                var renderEnv = { compress: false };\r\n                var returner;\r\n                var directionValue = direction.toCSS(renderEnv);\r\n                var i;\r\n                var color;\r\n                var position;\r\n                var positionValue;\r\n                var alpha;\r\n                function throwArgumentDescriptor() {\r\n                    throw { type: 'Argument',\r\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                            ' end_color [end_position] or direction, color list' };\r\n                }\r\n                if (arguments.length == 2) {\r\n                    if (arguments[1].value.length < 2) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    stops = arguments[1].value;\r\n                }\r\n                else if (arguments.length < 3) {\r\n                    throwArgumentDescriptor();\r\n                }\r\n                else {\r\n                    stops = Array.prototype.slice.call(arguments, 1);\r\n                }\r\n                switch (directionValue) {\r\n                    case 'to bottom':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'to bottom right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to top right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'ellipse':\r\n                    case 'ellipse at center':\r\n                        gradientType = 'radial';\r\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                        break;\r\n                    default:\r\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n                }\r\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n                for (i = 0; i < stops.length; i += 1) {\r\n                    if (stops[i] instanceof Expression) {\r\n                        color = stops[i].value[0];\r\n                        position = stops[i].value[1];\r\n                    }\r\n                    else {\r\n                        color = stops[i];\r\n                        position = undefined;\r\n                    }\r\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                    alpha = color.alpha;\r\n                    returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n                }\r\n                returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n                returner = encodeURIComponent(returner);\r\n                returner = \"data:image/svg+xml,\" + returner;\r\n                return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n    var isunit = function (n, unit) {\r\n        if (unit === undefined) {\r\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n        }\r\n        unit = typeof unit.value === 'string' ? unit.value : unit;\r\n        if (typeof unit !== 'string') {\r\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n        }\r\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n    };\r\n    var types = {\r\n        isruleset: function (n) {\r\n            return isa(n, DetachedRuleset);\r\n        },\r\n        iscolor: function (n) {\r\n            return isa(n, Color);\r\n        },\r\n        isnumber: function (n) {\r\n            return isa(n, Dimension);\r\n        },\r\n        isstring: function (n) {\r\n            return isa(n, Quoted);\r\n        },\r\n        iskeyword: function (n) {\r\n            return isa(n, Keyword);\r\n        },\r\n        isurl: function (n) {\r\n            return isa(n, URL);\r\n        },\r\n        ispixel: function (n) {\r\n            return isunit(n, 'px');\r\n        },\r\n        ispercentage: function (n) {\r\n            return isunit(n, '%');\r\n        },\r\n        isem: function (n) {\r\n            return isunit(n, 'em');\r\n        },\r\n        isunit: isunit,\r\n        unit: function (val, unit) {\r\n            if (!(val instanceof Dimension)) {\r\n                throw { type: 'Argument',\r\n                    message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n            }\r\n            if (unit) {\r\n                if (unit instanceof Keyword) {\r\n                    unit = unit.value;\r\n                }\r\n                else {\r\n                    unit = unit.toCSS();\r\n                }\r\n            }\r\n            else {\r\n                unit = '';\r\n            }\r\n            return new Dimension(val.value, unit);\r\n        },\r\n        'get-unit': function (n) {\r\n            return new Anonymous(n.unit);\r\n        }\r\n    };\n\n    var functions = (function (environment) {\r\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n        // register functions\r\n        functionRegistry.addMultiple(boolean$1);\r\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n        functionRegistry.addMultiple(color);\r\n        functionRegistry.addMultiple(colorBlend);\r\n        functionRegistry.addMultiple(dataUri(environment));\r\n        functionRegistry.addMultiple(list);\r\n        functionRegistry.addMultiple(mathFunctions);\r\n        functionRegistry.addMultiple(number);\r\n        functionRegistry.addMultiple(string);\r\n        functionRegistry.addMultiple(svg());\r\n        functionRegistry.addMultiple(types);\r\n        return functions;\r\n    });\n\n    function transformTree (root, options) {\r\n        options = options || {};\r\n        var evaldRoot;\r\n        var variables = options.variables;\r\n        var evalEnv = new contexts.Eval(options);\r\n        //\r\n        // Allows setting variables with a hash, so:\r\n        //\r\n        //   `{ color: new tree.Color('#f01') }` will become:\r\n        //\r\n        //   new tree.Declaration('@color',\r\n        //     new tree.Value([\r\n        //       new tree.Expression([\r\n        //         new tree.Color('#f01')\r\n        //       ])\r\n        //     ])\r\n        //   )\r\n        //\r\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n            variables = Object.keys(variables).map(function (k) {\r\n                var value = variables[k];\r\n                if (!(value instanceof tree.Value)) {\r\n                    if (!(value instanceof tree.Expression)) {\r\n                        value = new tree.Expression([value]);\r\n                    }\r\n                    value = new tree.Value([value]);\r\n                }\r\n                return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n            });\r\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n        }\r\n        var visitors$1 = [\r\n            new visitors.JoinSelectorVisitor(),\r\n            new visitors.MarkVisibleSelectorsVisitor(true),\r\n            new visitors.ExtendVisitor(),\r\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n        ];\r\n        var preEvalVisitors = [];\r\n        var v;\r\n        var visitorIterator;\r\n        /**\r\n         * first() / get() allows visitors to be added while visiting\r\n         *\r\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n         */\r\n        if (options.pluginManager) {\r\n            visitorIterator = options.pluginManager.visitor();\r\n            for (var i = 0; i < 2; i++) {\r\n                visitorIterator.first();\r\n                while ((v = visitorIterator.get())) {\r\n                    if (v.isPreEvalVisitor) {\r\n                        if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                            preEvalVisitors.push(v);\r\n                            v.run(root);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (i === 0 || visitors$1.indexOf(v) === -1) {\r\n                            if (v.isPreVisitor) {\r\n                                visitors$1.unshift(v);\r\n                            }\r\n                            else {\r\n                                visitors$1.push(v);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        evaldRoot = root.eval(evalEnv);\r\n        for (var i = 0; i < visitors$1.length; i++) {\r\n            visitors$1[i].run(evaldRoot);\r\n        }\r\n        // Run any remaining visitors added after eval pass\r\n        if (options.pluginManager) {\r\n            visitorIterator.first();\r\n            while ((v = visitorIterator.get())) {\r\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                    v.run(evaldRoot);\r\n                }\r\n            }\r\n        }\r\n        return evaldRoot;\r\n    }\n\n    /**\r\n     * Plugin Manager\r\n     */\r\n    var PluginManager = /** @class */ (function () {\r\n        function PluginManager(less) {\r\n            this.less = less;\r\n            this.visitors = [];\r\n            this.preProcessors = [];\r\n            this.postProcessors = [];\r\n            this.installedPlugins = [];\r\n            this.fileManagers = [];\r\n            this.iterator = -1;\r\n            this.pluginCache = {};\r\n            this.Loader = new less.PluginLoader(less);\r\n        }\r\n        /**\r\n         * Adds all the plugins in the array\r\n         * @param {Array} plugins\r\n         */\r\n        PluginManager.prototype.addPlugins = function (plugins) {\r\n            if (plugins) {\r\n                for (var i = 0; i < plugins.length; i++) {\r\n                    this.addPlugin(plugins[i]);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param plugin\r\n         * @param {String} filename\r\n         */\r\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n            this.installedPlugins.push(plugin);\r\n            if (filename) {\r\n                this.pluginCache[filename] = plugin;\r\n            }\r\n            if (plugin.install) {\r\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param filename\r\n         */\r\n        PluginManager.prototype.get = function (filename) {\r\n            return this.pluginCache[filename];\r\n        };\r\n        /**\r\n         * Adds a visitor. The visitor object has options on itself to determine\r\n         * when it should run.\r\n         * @param visitor\r\n         */\r\n        PluginManager.prototype.addVisitor = function (visitor) {\r\n            this.visitors.push(visitor);\r\n        };\r\n        /**\r\n         * Adds a pre processor object\r\n         * @param {object} preProcessor\r\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n         */\r\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n        };\r\n        /**\r\n         * Adds a post processor object\r\n         * @param {object} postProcessor\r\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n         */\r\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n        };\r\n        /**\r\n         *\r\n         * @param manager\r\n         */\r\n        PluginManager.prototype.addFileManager = function (manager) {\r\n            this.fileManagers.push(manager);\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPreProcessors = function () {\r\n            var preProcessors = [];\r\n            for (var i = 0; i < this.preProcessors.length; i++) {\r\n                preProcessors.push(this.preProcessors[i].preProcessor);\r\n            }\r\n            return preProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPostProcessors = function () {\r\n            var postProcessors = [];\r\n            for (var i = 0; i < this.postProcessors.length; i++) {\r\n                postProcessors.push(this.postProcessors[i].postProcessor);\r\n            }\r\n            return postProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getVisitors = function () {\r\n            return this.visitors;\r\n        };\r\n        PluginManager.prototype.visitor = function () {\r\n            var self = this;\r\n            return {\r\n                first: function () {\r\n                    self.iterator = -1;\r\n                    return self.visitors[self.iterator];\r\n                },\r\n                get: function () {\r\n                    self.iterator += 1;\r\n                    return self.visitors[self.iterator];\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getFileManagers = function () {\r\n            return this.fileManagers;\r\n        };\r\n        return PluginManager;\r\n    }());\r\n    var pm;\r\n    var PluginManagerFactory = function (less, newFactory) {\r\n        if (newFactory || !pm) {\r\n            pm = new PluginManager(less);\r\n        }\r\n        return pm;\r\n    };\n\n    function SourceMapOutput (environment) {\r\n        var SourceMapOutput = /** @class */ (function () {\r\n            function SourceMapOutput(options) {\r\n                this._css = [];\r\n                this._rootNode = options.rootNode;\r\n                this._contentsMap = options.contentsMap;\r\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n                if (options.sourceMapFilename) {\r\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n                }\r\n                this._outputFilename = options.outputFilename;\r\n                this.sourceMapURL = options.sourceMapURL;\r\n                if (options.sourceMapBasepath) {\r\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n                }\r\n                if (options.sourceMapRootpath) {\r\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                        this._sourceMapRootpath += '/';\r\n                    }\r\n                }\r\n                else {\r\n                    this._sourceMapRootpath = '';\r\n                }\r\n                this._outputSourceFiles = options.outputSourceFiles;\r\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n                this._lineNumber = 0;\r\n                this._column = 0;\r\n            }\r\n            SourceMapOutput.prototype.removeBasepath = function (path) {\r\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                    path = path.substring(this._sourceMapBasepath.length);\r\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                        path = path.substring(1);\r\n                    }\r\n                }\r\n                return path;\r\n            };\r\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n                filename = filename.replace(/\\\\/g, '/');\r\n                filename = this.removeBasepath(filename);\r\n                return (this._sourceMapRootpath || '') + filename;\r\n            };\r\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n                // ignore adding empty strings\r\n                if (!chunk) {\r\n                    return;\r\n                }\r\n                var lines, sourceLines, columns, sourceColumns, i;\r\n                if (fileInfo && fileInfo.filename) {\r\n                    var inputSource = this._contentsMap[fileInfo.filename];\r\n                    // remove vars/banner added to the top of the file\r\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                        // adjust the index\r\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                        if (index < 0) {\r\n                            index = 0;\r\n                        }\r\n                        // adjust the source\r\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                    }\r\n                    /**\r\n                     * ignore empty content, or failsafe\r\n                     * if contents map is incorrect\r\n                     */\r\n                    if (inputSource === undefined) {\r\n                        this._css.push(chunk);\r\n                        return;\r\n                    }\r\n                    inputSource = inputSource.substring(0, index);\r\n                    sourceLines = inputSource.split('\\n');\r\n                    sourceColumns = sourceLines[sourceLines.length - 1];\r\n                }\r\n                lines = chunk.split('\\n');\r\n                columns = lines[lines.length - 1];\r\n                if (fileInfo && fileInfo.filename) {\r\n                    if (!mapLines) {\r\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                            original: { line: sourceLines.length, column: sourceColumns.length },\r\n                            source: this.normalizeFilename(fileInfo.filename) });\r\n                    }\r\n                    else {\r\n                        for (i = 0; i < lines.length; i++) {\r\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                                source: this.normalizeFilename(fileInfo.filename) });\r\n                        }\r\n                    }\r\n                }\r\n                if (lines.length === 1) {\r\n                    this._column += columns.length;\r\n                }\r\n                else {\r\n                    this._lineNumber += lines.length - 1;\r\n                    this._column = columns.length;\r\n                }\r\n                this._css.push(chunk);\r\n            };\r\n            SourceMapOutput.prototype.isEmpty = function () {\r\n                return this._css.length === 0;\r\n            };\r\n            SourceMapOutput.prototype.toCSS = function (context) {\r\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n                if (this._outputSourceFiles) {\r\n                    for (var filename in this._contentsMap) {\r\n                        if (this._contentsMap.hasOwnProperty(filename)) {\r\n                            var source = this._contentsMap[filename];\r\n                            if (this._contentsIgnoredCharsMap[filename]) {\r\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                            }\r\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                        }\r\n                    }\r\n                }\r\n                this._rootNode.genCSS(context, this);\r\n                if (this._css.length > 0) {\r\n                    var sourceMapURL = void 0;\r\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                    if (this.sourceMapURL) {\r\n                        sourceMapURL = this.sourceMapURL;\r\n                    }\r\n                    else if (this._sourceMapFilename) {\r\n                        sourceMapURL = this._sourceMapFilename;\r\n                    }\r\n                    this.sourceMapURL = sourceMapURL;\r\n                    this.sourceMap = sourceMapContent;\r\n                }\r\n                return this._css.join('');\r\n            };\r\n            return SourceMapOutput;\r\n        }());\r\n        return SourceMapOutput;\r\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\r\n        var SourceMapBuilder = /** @class */ (function () {\r\n            function SourceMapBuilder(options) {\r\n                this.options = options;\r\n            }\r\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n                var sourceMapOutput = new SourceMapOutput({\r\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                    rootNode: rootNode,\r\n                    contentsMap: imports.contents,\r\n                    sourceMapFilename: this.options.sourceMapFilename,\r\n                    sourceMapURL: this.options.sourceMapURL,\r\n                    outputFilename: this.options.sourceMapOutputFilename,\r\n                    sourceMapBasepath: this.options.sourceMapBasepath,\r\n                    sourceMapRootpath: this.options.sourceMapRootpath,\r\n                    outputSourceFiles: this.options.outputSourceFiles,\r\n                    sourceMapGenerator: this.options.sourceMapGenerator,\r\n                    sourceMapFileInline: this.options.sourceMapFileInline,\r\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n                });\r\n                var css = sourceMapOutput.toCSS(options);\r\n                this.sourceMap = sourceMapOutput.sourceMap;\r\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n                if (this.options.sourceMapInputFilename) {\r\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n                }\r\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n                }\r\n                return css + this.getCSSAppendage();\r\n            };\r\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n                var sourceMapURL = this.sourceMapURL;\r\n                if (this.options.sourceMapFileInline) {\r\n                    if (this.sourceMap === undefined) {\r\n                        return '';\r\n                    }\r\n                    sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n                }\r\n                if (this.options.disableSourcemapAnnotation) {\r\n                    return '';\r\n                }\r\n                if (sourceMapURL) {\r\n                    return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n                }\r\n                return '';\r\n            };\r\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n                return this.sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n                this.sourceMap = sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.isInline = function () {\r\n                return this.options.sourceMapFileInline;\r\n            };\r\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n                return this.sourceMapURL;\r\n            };\r\n            SourceMapBuilder.prototype.getOutputFilename = function () {\r\n                return this.options.sourceMapOutputFilename;\r\n            };\r\n            SourceMapBuilder.prototype.getInputFilename = function () {\r\n                return this.sourceMapInputFilename;\r\n            };\r\n            return SourceMapBuilder;\r\n        }());\r\n        return SourceMapBuilder;\r\n    }\n\n    function ParseTree (SourceMapBuilder) {\r\n        var ParseTree = /** @class */ (function () {\r\n            function ParseTree(root, imports) {\r\n                this.root = root;\r\n                this.imports = imports;\r\n            }\r\n            ParseTree.prototype.toCSS = function (options) {\r\n                var evaldRoot;\r\n                var result = {};\r\n                var sourceMapBuilder;\r\n                try {\r\n                    evaldRoot = transformTree(this.root, options);\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                try {\r\n                    var compress = Boolean(options.compress);\r\n                    if (compress) {\r\n                        logger$1.warn('The compress option has been deprecated. ' +\r\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                    }\r\n                    var toCSSOptions = {\r\n                        compress: compress,\r\n                        dumpLineNumbers: options.dumpLineNumbers,\r\n                        strictUnits: Boolean(options.strictUnits),\r\n                        numPrecision: 8\r\n                    };\r\n                    if (options.sourceMap) {\r\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                    }\r\n                    else {\r\n                        result.css = evaldRoot.toCSS(toCSSOptions);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                if (options.pluginManager) {\r\n                    var postProcessors = options.pluginManager.getPostProcessors();\r\n                    for (var i = 0; i < postProcessors.length; i++) {\r\n                        result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                    }\r\n                }\r\n                if (options.sourceMap) {\r\n                    result.map = sourceMapBuilder.getExternalSourceMap();\r\n                }\r\n                result.imports = [];\r\n                for (var file in this.imports.files) {\r\n                    if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\r\n                        result.imports.push(file);\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            return ParseTree;\r\n        }());\r\n        return ParseTree;\r\n    }\n\n    function ImportManager (environment) {\r\n        // FileInfo = {\r\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n        //  'filename' - full resolved filename of current file\r\n        //  'rootpath' - path to append to normal URLs for this node\r\n        //  'currentDirectory' - path to the current file, absolute\r\n        //  'rootFilename' - filename of the base file\r\n        //  'entryPath' - absolute path to the entry file\r\n        //  'reference' - whether the file should not be output and only output parts that are referenced\r\n        var ImportManager = /** @class */ (function () {\r\n            function ImportManager(less, context, rootFileInfo) {\r\n                this.less = less;\r\n                this.rootFilename = rootFileInfo.filename;\r\n                this.paths = context.paths || []; // Search paths, when importing\r\n                this.contents = {}; // map - filename to contents of all the files\r\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n                this.mime = context.mime;\r\n                this.error = null;\r\n                this.context = context;\r\n                // Deprecated? Unused outside of here, could be useful.\r\n                this.queue = []; // Files which haven't been imported yet\r\n                this.files = {}; // Holds the imported parse trees.\r\n            }\r\n            /**\r\n             * Add an import to be imported\r\n             * @param path - the raw path\r\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n             * @param importOptions - import options\r\n             * @param callback - callback for when it is imported\r\n             */\r\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n                this.queue.push(path);\r\n                var fileParsedFunc = function (e, root, fullPath) {\r\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                    if (importOptions.optional && e) {\r\n                        callback(null, { rules: [] }, false, null);\r\n                        logger$1.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                    }\r\n                    else {\r\n                        // Inline imports aren't cached here.\r\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                        // same name as they used to do before this comment and the condition below have been added.\r\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                            importManager.files[fullPath] = { root: root, options: importOptions };\r\n                        }\r\n                        if (e && !importManager.error) {\r\n                            importManager.error = e;\r\n                        }\r\n                        callback(e, root, importedEqualsRoot, fullPath);\r\n                    }\r\n                };\r\n                var newFileInfo = {\r\n                    rewriteUrls: this.context.rewriteUrls,\r\n                    entryPath: currentFileInfo.entryPath,\r\n                    rootpath: currentFileInfo.rootpath,\r\n                    rootFilename: currentFileInfo.rootFilename\r\n                };\r\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n                if (!fileManager) {\r\n                    fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                    return;\r\n                }\r\n                var loadFileCallback = function (loadedFile) {\r\n                    var plugin;\r\n                    var resolvedFilename = loadedFile.filename;\r\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                    // Pass on an updated rootpath if path of imported file is relative and file\r\n                    // is in a (sub|sup) directory\r\n                    //\r\n                    // Examples:\r\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/module/nav/'\r\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/../'\r\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                    if (newFileInfo.rewriteUrls) {\r\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                        }\r\n                    }\r\n                    newFileInfo.filename = resolvedFilename;\r\n                    var newEnv = new contexts.Parse(importManager.context);\r\n                    newEnv.processImports = false;\r\n                    importManager.contents[resolvedFilename] = contents;\r\n                    if (currentFileInfo.reference || importOptions.reference) {\r\n                        newFileInfo.reference = true;\r\n                    }\r\n                    if (importOptions.isPlugin) {\r\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                        if (plugin instanceof LessError) {\r\n                            fileParsedFunc(plugin, null, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            fileParsedFunc(null, plugin, resolvedFilename);\r\n                        }\r\n                    }\r\n                    else if (importOptions.inline) {\r\n                        fileParsedFunc(null, contents, resolvedFilename);\r\n                    }\r\n                    else {\r\n                        // import (multiple) parse trees apparently get altered and can't be cached.\r\n                        // TODO: investigate why this is\r\n                        if (importManager.files[resolvedFilename]\r\n                            && !importManager.files[resolvedFilename].options.multiple\r\n                            && !importOptions.multiple) {\r\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                                fileParsedFunc(e, root, resolvedFilename);\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n                var loadedFile;\r\n                var promise;\r\n                var context = clone(this.context);\r\n                if (tryAppendExtension) {\r\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n                }\r\n                if (importOptions.isPlugin) {\r\n                    context.mime = 'application/javascript';\r\n                    if (context.syncImport) {\r\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                    else {\r\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                }\r\n                else {\r\n                    if (context.syncImport) {\r\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                    }\r\n                    else {\r\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                            if (err) {\r\n                                fileParsedFunc(err);\r\n                            }\r\n                            else {\r\n                                loadFileCallback(loadedFile);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (loadedFile) {\r\n                    if (!loadedFile.filename) {\r\n                        fileParsedFunc(loadedFile);\r\n                    }\r\n                    else {\r\n                        loadFileCallback(loadedFile);\r\n                    }\r\n                }\r\n                else if (promise) {\r\n                    promise.then(loadFileCallback, fileParsedFunc);\r\n                }\r\n            };\r\n            return ImportManager;\r\n        }());\r\n        return ImportManager;\r\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\r\n        var parse = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    parse.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var context_1;\r\n                var rootFileInfo = void 0;\r\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n                options.pluginManager = pluginManager_1;\r\n                context_1 = new contexts.Parse(options);\r\n                if (options.rootFileInfo) {\r\n                    rootFileInfo = options.rootFileInfo;\r\n                }\r\n                else {\r\n                    var filename = options.filename || 'input';\r\n                    var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\r\n                    rootFileInfo = {\r\n                        filename: filename,\r\n                        rewriteUrls: context_1.rewriteUrls,\r\n                        rootpath: context_1.rootpath || '',\r\n                        currentDirectory: entryPath,\r\n                        entryPath: entryPath,\r\n                        rootFilename: filename\r\n                    };\r\n                    // add in a missing trailing slash\r\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                        rootFileInfo.rootpath += '/';\r\n                    }\r\n                }\r\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n                this.importManager = imports_1;\r\n                // TODO: allow the plugins to be just a list of paths or names\r\n                // Do an async plugin queue like lessc\r\n                if (options.plugins) {\r\n                    options.plugins.forEach(function (plugin) {\r\n                        var evalResult, contents;\r\n                        if (plugin.fileContent) {\r\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                            if (evalResult instanceof LessError) {\r\n                                return callback(evalResult);\r\n                            }\r\n                        }\r\n                        else {\r\n                            pluginManager_1.addPlugin(plugin);\r\n                        }\r\n                    });\r\n                }\r\n                new Parser(context_1, imports_1, rootFileInfo)\r\n                    .parse(input, function (e, root) {\r\n                    if (e) {\r\n                        return callback(e);\r\n                    }\r\n                    callback(null, root, imports_1, options);\r\n                }, options);\r\n            }\r\n        };\r\n        return parse;\r\n    }\n\n    function Render (environment, ParseTree, ImportManager) {\r\n        var render = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    render.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.parse(input, options, function (err, root, imports, options) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    var result;\r\n                    try {\r\n                        var parseTree = new ParseTree(root, imports);\r\n                        result = parseTree.toCSS(options);\r\n                    }\r\n                    catch (err) {\r\n                        return callback(err);\r\n                    }\r\n                    callback(null, result);\r\n                });\r\n            }\r\n        };\r\n        return render;\r\n    }\n\n    var version = \"4.1.2\";\n\n    function parseNodeVersion(version) {\n      var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n      if (!match) {\n        throw new Error('Unable to parse: ' + version);\n      }\n\n      var res = {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10),\n        patch: parseInt(match[3], 10),\n        pre: match[4] || '',\n        build: match[5] || '',\n      };\n\n      return res;\n    }\n\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\r\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\r\n        environment = new Environment(environment, fileManagers);\r\n        sourceMapOutput = SourceMapOutput(environment);\r\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\r\n        parseTree = ParseTree(sourceMapBuilder);\r\n        importManager = ImportManager(environment);\r\n        var render = Render(environment, parseTree);\r\n        var parse = Parse(environment, parseTree, importManager);\r\n        var v = parseNodeVersion_1(\"v\" + version);\r\n        var initial = {\r\n            version: [v.major, v.minor, v.patch],\r\n            data: data,\r\n            tree: tree,\r\n            Environment: Environment,\r\n            AbstractFileManager: AbstractFileManager,\r\n            AbstractPluginLoader: AbstractPluginLoader,\r\n            environment: environment,\r\n            visitors: visitors,\r\n            Parser: Parser,\r\n            functions: functions(environment),\r\n            contexts: contexts,\r\n            SourceMapOutput: sourceMapOutput,\r\n            SourceMapBuilder: sourceMapBuilder,\r\n            ParseTree: parseTree,\r\n            ImportManager: importManager,\r\n            render: render,\r\n            parse: parse,\r\n            LessError: LessError,\r\n            transformTree: transformTree,\r\n            utils: utils,\r\n            PluginManager: PluginManagerFactory,\r\n            logger: logger$1\r\n        };\r\n        // Create a public API\r\n        var ctor = function (t) {\r\n            return function () {\r\n                var obj = Object.create(t.prototype);\r\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\r\n                return obj;\r\n            };\r\n        };\r\n        var t;\r\n        var api = Object.create(initial);\r\n        for (var n in initial.tree) {\r\n            /* eslint guard-for-in: 0 */\r\n            t = initial.tree[n];\r\n            if (typeof t === 'function') {\r\n                api[n.toLowerCase()] = ctor(t);\r\n            }\r\n            else {\r\n                api[n] = Object.create(null);\r\n                for (var o in t) {\r\n                    /* eslint guard-for-in: 0 */\r\n                    api[n][o.toLowerCase()] = ctor(t[o]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Some of the functions assume a `this` context of the API object,\r\n         * which causes it to fail when wrapped for ES6 imports.\r\n         *\r\n         * An assumed `this` should be removed in the future.\r\n         */\r\n        initial.parse = initial.parse.bind(api);\r\n        initial.render = initial.render.bind(api);\r\n        return api;\r\n    }\n\n    /* global window, XMLHttpRequest */\r\n    var options$1;\r\n    var logger;\r\n    var fileCache = {};\r\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n    var FileManager = function () { };\r\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\r\n        alwaysMakePathsAbsolute: function () {\r\n            return true;\r\n        },\r\n        join: function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return this.extractUrlParts(laterPath, basePath).path;\r\n        },\r\n        doXHR: function (url, type, callback, errback) {\r\n            var xhr = new XMLHttpRequest();\r\n            var async = options$1.isFileProtocol ? options$1.fileAsync : true;\r\n            if (typeof xhr.overrideMimeType === 'function') {\r\n                xhr.overrideMimeType('text/css');\r\n            }\r\n            logger.debug(\"XHR: Getting '\" + url + \"'\");\r\n            xhr.open('GET', url, async);\r\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n            xhr.send(null);\r\n            function handleResponse(xhr, callback, errback) {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n                }\r\n                else if (typeof errback === 'function') {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            if (options$1.isFileProtocol && !options$1.fileAsync) {\r\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                    callback(xhr.responseText);\r\n                }\r\n                else {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            else if (async) {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState == 4) {\r\n                        handleResponse(xhr, callback, errback);\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                handleResponse(xhr, callback, errback);\r\n            }\r\n        },\r\n        supports: function () {\r\n            return true;\r\n        },\r\n        clearFileCache: function () {\r\n            fileCache = {};\r\n        },\r\n        loadFile: function (filename, currentDirectory, options, environment) {\r\n            // TODO: Add prefix support like less-node?\r\n            // What about multiple paths?\r\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n                filename = currentDirectory + filename;\r\n            }\r\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n            options = options || {};\r\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n            // some context variables for imports\r\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n            var href = hrefParts.url;\r\n            var self = this;\r\n            return new Promise(function (resolve, reject) {\r\n                if (options.useFileCache && fileCache[href]) {\r\n                    try {\r\n                        var lessText = fileCache[href];\r\n                        return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\r\n                    }\r\n                    catch (e) {\r\n                        return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                    }\r\n                }\r\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                    // per file cache\r\n                    fileCache[href] = data;\r\n                    // Use remote copy (re-parse)\r\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n                }, function doXHRError(status, url) {\r\n                    reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n                });\r\n            });\r\n        }\r\n    });\r\n    var FM = (function (opts, log) {\r\n        options$1 = opts;\r\n        logger = log;\r\n        return FileManager;\r\n    });\n\n    // TODO: Add tests for browser @plugin\r\n    /**\r\n     * Browser Plugin Loader\r\n     */\r\n    var PluginLoader = function (less) {\r\n        this.less = less;\r\n        // Should we shim this.require for browser? Probably not?\r\n    };\r\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\r\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\r\n            return new Promise(function (fulfill, reject) {\r\n                fileManager.loadFile(filename, basePath, context, environment)\r\n                    .then(fulfill).catch(reject);\r\n            });\r\n        }\r\n    });\n\n    var LogListener = (function (less, options) {\r\n        var logLevel_debug = 4;\r\n        var logLevel_info = 3;\r\n        var logLevel_warn = 2;\r\n        var logLevel_error = 1;\r\n        // The amount of logging in the javascript console.\r\n        // 3 - Debug, information and errors\r\n        // 2 - Information and errors\r\n        // 1 - Errors\r\n        // 0 - None\r\n        // Defaults to 2\r\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n        if (!options.loggers) {\r\n            options.loggers = [{\r\n                    debug: function (msg) {\r\n                        if (options.logLevel >= logLevel_debug) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    info: function (msg) {\r\n                        if (options.logLevel >= logLevel_info) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    warn: function (msg) {\r\n                        if (options.logLevel >= logLevel_warn) {\r\n                            console.warn(msg);\r\n                        }\r\n                    },\r\n                    error: function (msg) {\r\n                        if (options.logLevel >= logLevel_error) {\r\n                            console.error(msg);\r\n                        }\r\n                    }\r\n                }];\r\n        }\r\n        for (var i = 0; i < options.loggers.length; i++) {\r\n            less.logger.addListener(options.loggers[i]);\r\n        }\r\n    });\n\n    var ErrorReporting = (function (window, less, options) {\r\n        function errorHTML(e, rootHref) {\r\n            var id = \"less-error-message:\" + extractId(rootHref || '');\r\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n            var elem = window.document.createElement('div');\r\n            var timer;\r\n            var content;\r\n            var errors = [];\r\n            var filename = e.filename || rootHref;\r\n            var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\r\n            elem.id = id;\r\n            elem.className = 'less-error-message';\r\n            content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n                (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n            }\r\n            elem.innerHTML = content;\r\n            // CSS for error messages\r\n            browser.createCSS(window.document, [\r\n                '.less-error-message ul, .less-error-message li {',\r\n                'list-style-type: none;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message label {',\r\n                'font-size: 12px;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'color: #cc7777;',\r\n                '}',\r\n                '.less-error-message pre {',\r\n                'color: #dd6666;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                'display: inline-block;',\r\n                '}',\r\n                '.less-error-message pre.line {',\r\n                'color: #ff0000;',\r\n                '}',\r\n                '.less-error-message h3 {',\r\n                'font-size: 20px;',\r\n                'font-weight: bold;',\r\n                'padding: 15px 0 5px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message a {',\r\n                'color: #10a',\r\n                '}',\r\n                '.less-error-message .error {',\r\n                'color: red;',\r\n                'font-weight: bold;',\r\n                'padding-bottom: 2px;',\r\n                'border-bottom: 1px dashed red;',\r\n                '}'\r\n            ].join('\\n'), { title: 'error-message' });\r\n            elem.style.cssText = [\r\n                'font-family: Arial, sans-serif',\r\n                'border: 1px solid #e00',\r\n                'background-color: #eee',\r\n                'border-radius: 5px',\r\n                '-webkit-border-radius: 5px',\r\n                '-moz-border-radius: 5px',\r\n                'color: #e00',\r\n                'padding: 15px',\r\n                'margin-bottom: 15px'\r\n            ].join(';');\r\n            if (options.env === 'development') {\r\n                timer = setInterval(function () {\r\n                    var document = window.document;\r\n                    var body = document.body;\r\n                    if (body) {\r\n                        if (document.getElementById(id)) {\r\n                            body.replaceChild(elem, document.getElementById(id));\r\n                        }\r\n                        else {\r\n                            body.insertBefore(elem, body.firstChild);\r\n                        }\r\n                        clearInterval(timer);\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        function removeErrorHTML(path) {\r\n            var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n            if (node) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n        function removeError(path) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                removeErrorHTML(path);\r\n            }\r\n            else if (options.errorReporting === 'console') ;\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('remove', path);\r\n            }\r\n        }\r\n        function errorConsole(e, rootHref) {\r\n            var template = '{line} {content}';\r\n            var filename = e.filename || rootHref;\r\n            var errors = [];\r\n            var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"\\nStack Trace\\n\" + e.stack;\r\n            }\r\n            less.logger.error(content);\r\n        }\r\n        function error(e, rootHref) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                errorHTML(e, rootHref);\r\n            }\r\n            else if (options.errorReporting === 'console') {\r\n                errorConsole(e, rootHref);\r\n            }\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('add', e, rootHref);\r\n            }\r\n        }\r\n        return {\r\n            add: error,\r\n            remove: removeError\r\n        };\r\n    });\n\n    // Cache system is a bit outdated and could do with work\r\n    var Cache = (function (window, options, logger) {\r\n        var cache = null;\r\n        if (options.env !== 'development') {\r\n            try {\r\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n            }\r\n            catch (_) { }\r\n        }\r\n        return {\r\n            setCSS: function (path, lastModified, modifyVars, styles) {\r\n                if (cache) {\r\n                    logger.info(\"saving \" + path + \" to cache.\");\r\n                    try {\r\n                        cache.setItem(path, styles);\r\n                        cache.setItem(path + \":timestamp\", lastModified);\r\n                        if (modifyVars) {\r\n                            cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // TODO - could do with adding more robust error handling\r\n                        logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                    }\r\n                }\r\n            },\r\n            getCSS: function (path, webInfo, modifyVars) {\r\n                var css = cache && cache.getItem(path);\r\n                var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n                var vars = cache && cache.getItem(path + \":vars\");\r\n                modifyVars = modifyVars || {};\r\n                vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\r\n                if (timestamp && webInfo.lastModified &&\r\n                    (new Date(webInfo.lastModified).valueOf() ===\r\n                        new Date(timestamp).valueOf()) &&\r\n                    JSON.stringify(modifyVars) === vars) {\r\n                    // Use local copy\r\n                    return css;\r\n                }\r\n            }\r\n        };\r\n    });\n\n    var ImageSize = (function () {\r\n        function imageSize() {\r\n            throw {\r\n                type: 'Runtime',\r\n                message: 'Image size functions are not supported in browser version of less'\r\n            };\r\n        }\r\n        var imageFunctions = {\r\n            'image-size': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-width': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-height': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            }\r\n        };\r\n        functionRegistry.addMultiple(imageFunctions);\r\n    });\n\n    //\r\n    var root = (function (window, options) {\r\n        var document = window.document;\r\n        var less = lessRoot();\r\n        less.options = options;\r\n        var environment = less.environment;\r\n        var FileManager = FM(options, less.logger);\r\n        var fileManager = new FileManager();\r\n        environment.addFileManager(fileManager);\r\n        less.FileManager = FileManager;\r\n        less.PluginLoader = PluginLoader;\r\n        LogListener(less, options);\r\n        var errors = ErrorReporting(window, less, options);\r\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n        ImageSize(less.environment);\r\n        // Setup user functions - Deprecate?\r\n        if (options.functions) {\r\n            less.functions.functionRegistry.addMultiple(options.functions);\r\n        }\r\n        var typePattern = /^text\\/(x-)?less$/;\r\n        function clone(obj) {\r\n            var cloned = {};\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    cloned[prop] = obj[prop];\r\n                }\r\n            }\r\n            return cloned;\r\n        }\r\n        // only really needed for phantom\r\n        function bind(func, thisArg) {\r\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n            return function () {\r\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n                return func.apply(thisArg, args);\r\n            };\r\n        }\r\n        function loadStyles(modifyVars) {\r\n            var styles = document.getElementsByTagName('style');\r\n            var style;\r\n            for (var i = 0; i < styles.length; i++) {\r\n                style = styles[i];\r\n                if (style.type.match(typePattern)) {\r\n                    var instanceOptions = clone(options);\r\n                    instanceOptions.modifyVars = modifyVars;\r\n                    var lessText = style.innerHTML || '';\r\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                    /* jshint loopfunc:true */\r\n                    // use closure to store current style\r\n                    less.render(lessText, instanceOptions, bind(function (style, e, result) {\r\n                        if (e) {\r\n                            errors.add(e, 'inline');\r\n                        }\r\n                        else {\r\n                            style.type = 'text/css';\r\n                            if (style.styleSheet) {\r\n                                style.styleSheet.cssText = result.css;\r\n                            }\r\n                            else {\r\n                                style.innerHTML = result.css;\r\n                            }\r\n                        }\r\n                    }, null, style));\r\n                }\r\n            }\r\n        }\r\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n            var instanceOptions = clone(options);\r\n            addDataAttr(instanceOptions, sheet);\r\n            instanceOptions.mime = sheet.type;\r\n            if (modifyVars) {\r\n                instanceOptions.modifyVars = modifyVars;\r\n            }\r\n            function loadInitialFileCallback(loadedFile) {\r\n                var data = loadedFile.contents;\r\n                var path = loadedFile.filename;\r\n                var webInfo = loadedFile.webInfo;\r\n                var newFileInfo = {\r\n                    currentDirectory: fileManager.getPath(path),\r\n                    filename: path,\r\n                    rootFilename: path,\r\n                    rewriteUrls: instanceOptions.rewriteUrls\r\n                };\r\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n                if (webInfo) {\r\n                    webInfo.remaining = remaining;\r\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                    if (!reload && css) {\r\n                        webInfo.local = true;\r\n                        callback(null, css, data, sheet, webInfo, path);\r\n                        return;\r\n                    }\r\n                }\r\n                // TODO add tests around how this behaves when reloading\r\n                errors.remove(path);\r\n                instanceOptions.rootFileInfo = newFileInfo;\r\n                less.render(data, instanceOptions, function (e, result) {\r\n                    if (e) {\r\n                        e.href = path;\r\n                        callback(e);\r\n                    }\r\n                    else {\r\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                        callback(null, result.css, data, sheet, webInfo, path);\r\n                    }\r\n                });\r\n            }\r\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n                .then(function (loadedFile) {\r\n                loadInitialFileCallback(loadedFile);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n                callback(err);\r\n            });\r\n        }\r\n        function loadStyleSheets(callback, reload, modifyVars) {\r\n            for (var i = 0; i < less.sheets.length; i++) {\r\n                loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\r\n            }\r\n        }\r\n        function initRunningMode() {\r\n            if (less.env === 'development') {\r\n                less.watchTimer = setInterval(function () {\r\n                    if (less.watchMode) {\r\n                        fileManager.clearFileCache();\r\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                            if (e) {\r\n                                errors.add(e, e.href || sheet.href);\r\n                            }\r\n                            else if (css) {\r\n                                browser.createCSS(window.document, css, sheet);\r\n                            }\r\n                        });\r\n                    }\r\n                }, options.poll);\r\n            }\r\n        }\r\n        //\r\n        // Watch mode\r\n        //\r\n        less.watch = function () {\r\n            if (!less.watchMode) {\r\n                less.env = 'development';\r\n                initRunningMode();\r\n            }\r\n            this.watchMode = true;\r\n            return true;\r\n        };\r\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n        //\r\n        // Synchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\".\r\n        //\r\n        less.registerStylesheetsImmediately = function () {\r\n            var links = document.getElementsByTagName('link');\r\n            less.sheets = [];\r\n            for (var i = 0; i < links.length; i++) {\r\n                if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\r\n                    (links[i].type.match(typePattern)))) {\r\n                    less.sheets.push(links[i]);\r\n                }\r\n            }\r\n        };\r\n        //\r\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\", returning a Promise.\r\n        //\r\n        less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\r\n            less.registerStylesheetsImmediately();\r\n            resolve();\r\n        }); };\r\n        //\r\n        // With this function, it's possible to alter variables and re-render\r\n        // CSS without reloading less-files\r\n        //\r\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n        less.refresh = function (reload, modifyVars, clearFileCache) {\r\n            if ((reload || clearFileCache) && clearFileCache !== false) {\r\n                fileManager.clearFileCache();\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                var startTime;\r\n                var endTime;\r\n                var totalMilliseconds;\r\n                var remainingSheets;\r\n                startTime = endTime = new Date();\r\n                // Set counter for remaining unprocessed sheets\r\n                remainingSheets = less.sheets.length;\r\n                if (remainingSheets === 0) {\r\n                    endTime = new Date();\r\n                    totalMilliseconds = endTime - startTime;\r\n                    less.logger.info('Less has finished and no sheets were loaded.');\r\n                    resolve({\r\n                        startTime: startTime,\r\n                        endTime: endTime,\r\n                        totalMilliseconds: totalMilliseconds,\r\n                        sheets: less.sheets.length\r\n                    });\r\n                }\r\n                else {\r\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                        if (e) {\r\n                            errors.add(e, e.href || sheet.href);\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                        if (webInfo.local) {\r\n                            less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                        }\r\n                        else {\r\n                            less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                        }\r\n                        browser.createCSS(window.document, css, sheet);\r\n                        less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                        // Count completed sheet\r\n                        remainingSheets--;\r\n                        // Check if the last remaining sheet was processed and then call the promise\r\n                        if (remainingSheets === 0) {\r\n                            totalMilliseconds = new Date() - startTime;\r\n                            less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                            resolve({\r\n                                startTime: startTime,\r\n                                endTime: endTime,\r\n                                totalMilliseconds: totalMilliseconds,\r\n                                sheets: less.sheets.length\r\n                            });\r\n                        }\r\n                        endTime = new Date();\r\n                    }, reload, modifyVars);\r\n                }\r\n                loadStyles(modifyVars);\r\n            });\r\n        };\r\n        less.refreshStyles = loadStyles;\r\n        return less;\r\n    });\n\n    /**\r\n     * Kicks off less and compiles any stylesheets\r\n     * used in the browser distributed version of less\r\n     * to kick-start less using the browser api\r\n     */\r\n    var options = defaultOptions();\r\n    if (window.less) {\r\n        for (var key in window.less) {\r\n            if (window.less.hasOwnProperty(key)) {\r\n                options[key] = window.less[key];\r\n            }\r\n        }\r\n    }\r\n    addDefaultOptions(window, options);\r\n    options.plugins = options.plugins || [];\r\n    if (window.LESS_PLUGINS) {\r\n        options.plugins = options.plugins.concat(window.LESS_PLUGINS);\r\n    }\r\n    var less = root(window, options);\r\n    window.less = less;\r\n    var css;\r\n    var head;\r\n    var style;\r\n    // Always restore page visibility\r\n    function resolveOrReject(data) {\r\n        if (data.filename) {\r\n            console.warn(data);\r\n        }\r\n        if (!options.async) {\r\n            head.removeChild(style);\r\n        }\r\n    }\r\n    if (options.onReady) {\r\n        if (/!watch/.test(window.location.hash)) {\r\n            less.watch();\r\n        }\r\n        // Simulate synchronous stylesheet loading by hiding page rendering\r\n        if (!options.async) {\r\n            css = 'body { display: none !important }';\r\n            head = document.head || document.getElementsByTagName('head')[0];\r\n            style = document.createElement('style');\r\n            style.type = 'text/css';\r\n            if (style.styleSheet) {\r\n                style.styleSheet.cssText = css;\r\n            }\r\n            else {\r\n                style.appendChild(document.createTextNode(css));\r\n            }\r\n            head.appendChild(style);\r\n        }\r\n        less.registerStylesheetsImmediately();\r\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n    }\n\n    return less;\n\n})));\n"],"sourceRoot":""}